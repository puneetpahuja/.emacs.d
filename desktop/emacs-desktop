;; -*- mode: emacs-lisp; coding: emacs-mule; -*-
;; --------------------------------------------------------------------------
;; Desktop File for Emacs
;; --------------------------------------------------------------------------
;; Created Mon Jan  1 18:24:13 2018
;; Desktop file format version 206
;; Emacs version 24.5.1

;; Global section:
(setq desktop-saved-frameset [frameset 1 (23114 12149 352952 580000) (desktop . "206") "puneet@joy" nil nil ((((font-backend xft x) (font . "-prch-PFDin-normal-normal-normal-*-15-*-*-*-m-0-iso10646-1") (font-parameter) (border-width . 0) (internal-border-width . 0) (right-divider-width . 0) (bottom-divider-width . 0) (vertical-scroll-bars) (foreground-color . "#333333") (background-color . "#FFFFFF") (mouse-color . "black") (border-color . "black") (screen-gamma) (line-spacing) (left-fringe . 8) (right-fringe . 0) (scroll-bar-foreground) (scroll-bar-background) (menu-bar-lines . 0) (tool-bar-lines . 0) (title) (wait-for-wm . t) (fullscreen . maximized) (tool-bar-position . top) (icon-type . t) (auto-raise) (auto-lower) (cursor-type . box) (scroll-bar-width . 0) (alpha) (horizontal-scroll-bars . t) (display-type . color) (background-mode . light) (cursor-color . "#0FB300") (sticky) (environment) (powerline-cache) (frameset--id . "D1A1-851A-3E4D-512D") (frameset--mini t . t) (modeline . t) (minibuffer . t) (unsplittable) (icon-name) (display . ":0") (explicit-name) (user-size . t) (visibility . t) (height . 64) (width . 239) (left . 0) (top . 0)) ((min-height . 4) (min-width . 20) (min-height-ignore . 3) (min-width-ignore . 6) (min-height-safe . 1) (min-width-safe . 4) (min-pixel-height . 64) (min-pixel-width . 160) (min-pixel-height-ignore . 48) (min-pixel-width-ignore . 48) (min-pixel-height-safe . 16) (min-pixel-width-safe . 32)) hc (pixel-width . 1920) (pixel-height . 1014) (total-width . 240) (total-height . 63) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 960) (pixel-height . 1014) (total-width . 120) (total-height . 63) (normal-height . 1.0) (normal-width . 0.5) (buffer "*magit: controlroom-api-poc" (selected . t) (hscroll . 0) (fringes 8 0 nil) (margins nil) (scroll-bars 0 0 t nil) (vscroll . 0) (dedicated) (point . 1) (start . 1))) (leaf (last . t) (pixel-width . 960) (pixel-height . 1014) (total-width . 120) (total-height . 63) (normal-height . 1.0) (normal-width . 0.5) (buffer "util.clj" (selected) (hscroll . 0) (fringes 8 0 nil) (margins 3) (scroll-bars 0 0 t nil) (vscroll . 0) (dedicated) (point . 826) (start . 1)))))])
(setq desktop-missing-file-warning nil)
(setq tags-file-name "/home/puneet/code/haskell_classes/TAGS")
(setq tags-table-list '("/home/puneet/code/haskell-classes/TAGS" "/home/puneet/code/haskell-classes/TAGS" "/home/puneet/code/haskell_classes/TAGS" "/home/puneet/code/geekskool/haskell_graham_hutton/ch3/TAGS" "/home/puneet/code/geekskool/haskell_graham_hutton/ch5/TAGS" "/home/puneet/code/geekskool/haskell_graham_hutton/ch4/TAGS" "/home/puneet/code/geekskool/haskell_graham_hutton/ch2/TAGS" "/home/puneet/code/geekskool/haskell_graham_hutton/ch1/TAGS" "/home/puneet/code/futurelearn/week2/TAGS"))
(setq search-ring '("rename" "delete" "combina"))
(setq regexp-search-ring '("get-tasks" "dato" "haskell-process" "stack"))
(setq register-alist nil)
(setq file-name-history '("/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "~/code/work/controlroom/controlroom-api-poc/src/dtm/util.clj" "~/code/work/controlroom/controlroom-api-poc/src/debug/trace.clj" "~/code/work/controlroom/controlroom-api-poc/src/dtm/convert.clj" "~/code/work/controlroom/controlroom-api-poc/src/dtm/read.clj" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "~/code/work/controlroom/controlroom-api-poc/src/dtm/auth.clj" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "~/code/work/controlroom/controlroom-api-poc/src/api/handler.clj" "~/code/work/controlroom/controlroom-api-poc/src/api/auth.clj" "~/code/work/controlroom/controlroom-api-poc/project.clj" "~/code/work/controlroom/controlroom-api-poc/src/datomic/util.clj" "~/code/work/controlroom/controlroom-api-poc/src/datomic/config.clj" "~/code/work/controlroom/controlroom-api-poc/src/datomic/convert.clj" "~/code/haskell_classes/scratch.hs" "~/code/work/controlroom/controlroom-api-poc/src/datomic/auth.clj" "~/code/work/controlroom/controlroom-api-poc/src/api/schema.clj" "/home/puneet/code/work/controlroom/controlroom-dummy-api/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "~/code/work/controlroom/controlroom-api-poc/README.md" "/home/puneet/code/work/controlroom/controlroom-dummy-api/.git/COMMIT_EDITMSG" "~/code/work/controlroom/controlroom-dummy-api/src/datomic/convert.clj" "~/code/work/controlroom/controlroom-dummy-api/src/controlroom_dummy_api/datomic_engine.clj" "~/code/work/controlroom/controlroom-dummy-api/src/controlroom_dummy_api/auth.clj" "~/code/work/controlroom/controlroom-dummy-api/src/controlroom_dummy_api/datomic_testdata.clj" "~/code/work/controlroom/controlroom-dummy-api/src/controlroom_dummy_api/datomic_schema.clj" "/home/puneet/code/work/controlroom/controlroom-dummy-api/.git/COMMIT_EDITMSG" "~/code/haskell_classes/hamming.hs" "~/code/haskell_classes/numberInWords.hs" "/home/puneet/code/haskell_classes/.git/COMMIT_EDITMSG" "~/code/haskell_classes/bst.hs" "/home/puneet/code/work/controlroom/controlroom-dummy-api/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-dummy-api/.git/COMMIT_EDITMSG" "~/code/work/controlroom/controlroom-dummy-api/src/controlroom_dummy_api/handler.clj" "~/code/work/controlroom/controlroom-dummy-api/src/controlroom_dummy_api/api_schema.clj" "~/code/work/controlroom/controlroom-dummy-api/src/controlroom_dummy_api/io.clj" "~/code/work/controlroom/controlroom-dummy-api/src/data/data.clj" "~/code/work/controlroom/controlroom-dummy-api/src/controlroom_dummy_api/datomic_tx_generator.clj" "~/code/work/controlroom/controlroom-dummy-api/project.clj" "/home/puneet/code/work/controlroom/controlroom-dummy-api/.git/COMMIT_EDITMSG" "/home/puneet/code/haskell_graham_hutton/.git/COMMIT_EDITMSG" "~/code/haskell_graham_hutton/.gitignore" "/home/puneet/code/work/controlroom/controlroom-dummy-api/.git/COMMIT_EDITMSG" "~/code/work/controlroom/controlroom-dummy-api/scratch/datomic/repl-dump.clj" "/home/puneet/code/work/controlroom/controlroom-dummy-api/.git/COMMIT_EDITMSG" "~/code/work/controlroom/controlroom-dummy-api/src/controlroom_dummy_api/datomic_testdata_generator.clj" "~/code/work/controlroom/controlroom-dummy-api/scratch/datomic/repl-dump" "~/.emacs.d/init.el" "~/.emacs~" "~/code/mygram/controlroom-dummy-api/project.clj" "~/code/mygram/controlroom-dummy-api/src/controlroom_dummy_api/datomic_tx_generator.clj" "~/code/mygram/controlroom-dummy-api/src/controlroom_dummy_api/datomic_testdata_generator.clj" "~/code/mygram/controlroom-dummy-api/src/controlroom_dummy_api/schema.clj" "~/code/mygram/controlroom-dummy-api/src/controlroom_dummy_api/datomic_schema_generator.clj" "~/code/mygram/scratch/datomictoy/project.clj" "/home/puneet/code/mygram/controlroom-dummy-api/.git/COMMIT_EDITMSG" "/home/puneet/code/haskell-classes/.git/COMMIT_EDITMSG" "~/code/haskell-classes/bst.hs" "/home/puneet/code/haskell-classes/.git/COMMIT_EDITMSG" "~/code/mygram/controlroom-dummy-api/scratch/datomic/repl-dump" "~/code/mygram/controlroom-dummy-api/scratch/put-task-payload" "~/code/mygram/controlroom-dummy-api/src/controlroom_dummy_api/io.clj" "~/code/mygram/controlroom-dummy-api/src/controlroom_dummy_api/handler.clj" "~/.bash_aliases" "~/code/haskell_graham_hutton/ch5/exercises.hs" "~/code/haskell_graham_hutton/ch5/cipher.hs" "/home/puneet/code/mygram/controlroom-dummy-api/.git/COMMIT_EDITMSG" "/home/puneet/code/mygram/controlroom-dummy-api/.git/COMMIT_EDITMSG" "/home/puneet/code/geekskool/haskell_graham_hutton/.git/COMMIT_EDITMSG" "~/code/geekskool/haskell_graham_hutton/ch5/examples.hs" "/home/puneet/code/mygram/controlroom-dummy-api/.git/COMMIT_EDITMSG" "~/code/mygram/controlroom-dummy-api/run_docker_container.sh" "/home/puneet/code/mygram/controlroom-dummy-api/.git/COMMIT_EDITMSG" "~/code/mygram/controlroom-dummy-api/src/data/data.clj" "/home/puneet/code/mygram/controlroom-dummy-api/.git/COMMIT_EDITMSG" "~/code/geekskool/haskell_graham_hutton/ch2/exercises.hs" "~/code/geekskool/haskell_graham_hutton/ch2/test.hs" "~/code/geekskool/haskell_graham_hutton/ch1/exercises.hs" "/home/puneet/code/mygram/controlroom-dummy-api/.git/COMMIT_EDITMSG" "/home/puneet/code/mygram/controlroom-dummy-api/.git/MERGE_MSG" "/home/puneet/code/mygram/controlroom-dummy-api/.git/COMMIT_EDITMSG" "~/code/mygram/controlroom-dummy-api/Dockerfile" "~/code/mygram/controlroom-dummy-api/build_docker_image.sh" "~/code/mygram/controlroom-dummy-api/src/controlroom_dummy_api/auth.clj" "/home/puneet/code/mygram/controlroom-dummy-api/.git/COMMIT_EDITMSG" "~/code/mygram/controlroom-dummy-api/src/controlroom_dummy_api/db_schema.clj" "/home/puneet/code/mygram/controlroom-dummy-api/.git/COMMIT_EDITMSG" "~/code/mygram/controlroom-dummy-api/src/controlroom_dummy_api/transaction_schema.clj" "/home/puneet/code/mygram/controlroom-dummy-api/.git/COMMIT_EDITMSG" "~/code/mygram/controlroom-dummy-api/resources/.keep_this_file_here_for_git" "/home/puneet/code/mygram/controlroom-dummy-api/.git/COMMIT_EDITMSG" "~/code/mygram/controlroom-dummy-api/.gitignore" "/home/puneet/code/mygram/controlroom-dummy-api/.git/COMMIT_EDITMSG" "/home/puneet/code/mygram/controlroom-datomic-schemas/.git/COMMIT_EDITMSG" "~/code/mygram/datomic-to-schema-core/src/datomic_to_schema_core/core.clj" "~/code/mygram/datomic-to-schema-core/src/datomic_to_schema_core/utils.clj" "~/code/mygram/controlroom-dummy-api/src/controlroom_dummy_api/manual_schema.clj" "~/code/mygram/controlroom-datomic-schemas/dummy.dtm" "/home/puneet/code/mygram/controlroom-dummy-api/.git/COMMIT_EDITMSG" "/home/puneet/code/mygram/controlroom-datomic-schemas/.git/COMMIT_EDITMSG"))

;; Buffer section -- buffers listed in same order as in buffer list:
(desktop-create-buffer 206
  "/home/puneet/code/work/controlroom/controlroom-api-poc/src/dtm/util.clj"
  "util.clj"
  'clojure-mode
  '(override-global-mode projectile-mode linum-mode git-gutter-mode yas-minor-mode helm-mode eldoc-mode cider-mode paredit-mode clj-refactor-mode hs-minor-mode flycheck-mode auto-revert-mode global-auto-revert-mode rainbow-delimiters-mode aggressive-indent-mode subword-mode company-mode)
  826
  '(733 nil)
  nil
  nil
  '((indent-tabs-mode) (buffer-file-coding-system . undecided-unix) (truncate-lines . t)))

(desktop-create-buffer 206
  "/home/puneet/code/work/controlroom/controlroom-api-poc/src/debug/trace.clj"
  "trace.clj"
  'clojure-mode
  '(override-global-mode projectile-mode linum-mode git-gutter-mode yas-minor-mode helm-mode eldoc-mode cider-mode paredit-mode clj-refactor-mode hs-minor-mode flycheck-mode auto-revert-mode global-auto-revert-mode rainbow-delimiters-mode aggressive-indent-mode subword-mode company-mode)
  284
  '(284 nil)
  nil
  nil
  '((indent-tabs-mode) (buffer-file-coding-system . iso-latin-1-unix) (truncate-lines . t)))

(desktop-create-buffer 206
  "/home/puneet/code/work/controlroom/controlroom-api-poc/src/dtm/convert.clj"
  "convert.clj"
  'clojure-mode
  '(override-global-mode projectile-mode linum-mode git-gutter-mode yas-minor-mode helm-mode eldoc-mode cider-mode paredit-mode clj-refactor-mode hs-minor-mode flycheck-mode auto-revert-mode global-auto-revert-mode rainbow-delimiters-mode aggressive-indent-mode subword-mode company-mode)
  2338
  '(1152 nil)
  nil
  nil
  '((indent-tabs-mode) (buffer-file-coding-system . undecided-unix) (truncate-lines . t)))

(desktop-create-buffer 206
  "/home/puneet/code/work/controlroom/controlroom-api-poc/src/api/schema.clj"
  "schema.clj"
  'clojure-mode
  '(override-global-mode projectile-mode linum-mode git-gutter-mode yas-minor-mode helm-mode eldoc-mode cider-mode paredit-mode clj-refactor-mode hs-minor-mode flycheck-mode auto-revert-mode global-auto-revert-mode rainbow-delimiters-mode aggressive-indent-mode subword-mode company-mode)
  985
  '(784 nil)
  nil
  nil
  '((indent-tabs-mode) (buffer-file-coding-system . undecided-unix) (overwrite-mode) (truncate-lines . t)))

(desktop-create-buffer 206
  "/home/puneet/code/work/controlroom/controlroom-api-poc/src/dtm/read.clj"
  "read.clj"
  'clojure-mode
  '(override-global-mode projectile-mode linum-mode git-gutter-mode yas-minor-mode helm-mode eldoc-mode cider-mode paredit-mode clj-refactor-mode hs-minor-mode flycheck-mode global-auto-revert-mode rainbow-delimiters-mode aggressive-indent-mode subword-mode company-mode)
  430
  '(200 nil)
  nil
  nil
  '((indent-tabs-mode) (buffer-file-coding-system . iso-latin-1-unix) (truncate-lines . t)))

(desktop-create-buffer 206
  "/home/puneet/code/work/controlroom/controlroom-api-poc/src/api/handler.clj"
  "handler.clj"
  'clojure-mode
  '(override-global-mode projectile-mode linum-mode git-gutter-mode yas-minor-mode helm-mode eldoc-mode cider-mode paredit-mode clj-refactor-mode hs-minor-mode flycheck-mode auto-revert-mode global-auto-revert-mode rainbow-delimiters-mode aggressive-indent-mode subword-mode company-mode)
  1801
  '(1519 nil)
  nil
  nil
  '((indent-tabs-mode) (buffer-file-coding-system . undecided-unix) (overwrite-mode) (truncate-lines . t)))

(desktop-create-buffer 206
  "/home/puneet/code/work/controlroom/controlroom-api-poc/src/dtm/auth.clj"
  "auth.clj"
  'clojure-mode
  '(override-global-mode projectile-mode linum-mode git-gutter-mode yas-minor-mode helm-mode eldoc-mode cider-mode paredit-mode clj-refactor-mode hs-minor-mode flycheck-mode auto-revert-mode global-auto-revert-mode rainbow-delimiters-mode aggressive-indent-mode subword-mode company-mode)
  163
  '(562 nil)
  nil
  nil
  '((indent-tabs-mode) (buffer-file-coding-system . undecided-unix) (overwrite-mode) (truncate-lines . t)))

(desktop-create-buffer 206
  "/home/puneet/code/work/controlroom/controlroom-api-poc/src/api/auth.clj"
  "auth.clj"
  'clojure-mode
  '(override-global-mode projectile-mode linum-mode git-gutter-mode yas-minor-mode helm-mode eldoc-mode cider-mode paredit-mode clj-refactor-mode hs-minor-mode flycheck-mode auto-revert-mode global-auto-revert-mode rainbow-delimiters-mode aggressive-indent-mode subword-mode company-mode)
  1135
  '(585 nil)
  nil
  nil
  '((indent-tabs-mode) (buffer-file-coding-system . undecided-unix) (overwrite-mode) (truncate-lines . t)))

(desktop-create-buffer 206
  "/home/puneet/code/work/controlroom/controlroom-api-poc/src/api/read.clj"
  "read.clj"
  'clojure-mode
  '(override-global-mode projectile-mode linum-mode git-gutter-mode yas-minor-mode helm-mode eldoc-mode cider-mode paredit-mode clj-refactor-mode hs-minor-mode flycheck-mode global-auto-revert-mode rainbow-delimiters-mode aggressive-indent-mode subword-mode company-mode)
  302
  '(57 nil)
  nil
  nil
  '((indent-tabs-mode) (buffer-file-coding-system . iso-latin-1-unix) (overwrite-mode) (truncate-lines . t)))

(desktop-create-buffer 206
  "/home/puneet/code/work/controlroom/controlroom-api-poc/project.clj"
  "project.clj"
  'clojure-mode
  '(override-global-mode projectile-mode linum-mode git-gutter-mode yas-minor-mode helm-mode eldoc-mode cider-mode paredit-mode clj-refactor-mode hs-minor-mode flycheck-mode auto-revert-mode global-auto-revert-mode rainbow-delimiters-mode aggressive-indent-mode subword-mode company-mode)
  891
  '(577 nil)
  nil
  nil
  '((indent-tabs-mode) (buffer-file-coding-system . undecided-unix) (truncate-lines . t)))

(desktop-create-buffer 206
  "/home/puneet/.emacs.d/init.el"
  "init.el"
  'emacs-lisp-mode
  '(override-global-mode projectile-mode linum-mode git-gutter-mode yas-minor-mode helm-mode eldoc-mode paredit-mode flycheck-mode auto-revert-mode global-auto-revert-mode rainbow-delimiters-mode company-mode)
  13548
  '(13214 nil)
  nil
  nil
  '((buffer-file-coding-system . prefer-utf-8-unix) (truncate-lines . t)))

(desktop-create-buffer 206
  "/home/puneet/code/haskell_classes/scratch.hs"
  "scratch.hs"
  'haskell-mode
  '(override-global-mode projectile-mode linum-mode git-gutter-mode yas-minor-mode helm-mode paredit-mode flycheck-mode global-auto-revert-mode rainbow-delimiters-mode company-mode hindent-mode)
  1062
  '(567 nil)
  nil
  nil
  '((tab-width . 8) (indent-tabs-mode) (buffer-file-coding-system . undecided-unix) (truncate-lines . t)))

