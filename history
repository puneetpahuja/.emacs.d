;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by `savehist'.

(setq savehist-minibuffer-history-variables '(ido-file-history compile-history bookmark-history helm-file-name-history coding-system-history query-replace-history minibuffer-history-search-history file-name-history extended-command-history heroku-command-hist heroku-app-hist read-expression-history magit-revision-history cider-minibuffer-history search-ring buffer-name-history ido-buffer-history face-name-history helm-M-x-input-history minibuffer-history helm-occur-history))
(setq bookmark-history '("proj" "Helm-find-files: ~/code/work/controlroom/controlroom-dummy-api/"))
(setq helm-file-name-history '("init.el" ".emacs~" "project.clj" "datomic_tx_generator.clj" "datomic_testdata_generator.clj" "schema.clj" "datomic_schema_generator.clj" "project.clj" "COMMIT_EDITMSG" "COMMIT_EDITMSG" "bst.hs" "COMMIT_EDITMSG" "scratch.hs" "repl-dump" "put-task-payload" "io.clj" "handler.clj" ".bash_aliases" "exercises.hs" "cipher.hs" "COMMIT_EDITMSG" "COMMIT_EDITMSG" "COMMIT_EDITMSG" "examples.hs" "COMMIT_EDITMSG" "run_docker_container.sh" "COMMIT_EDITMSG" "data.clj" "COMMIT_EDITMSG" "exercises.hs" "test.hs" "exercises.hs" "COMMIT_EDITMSG" "MERGE_MSG" "COMMIT_EDITMSG" "Dockerfile" "build_docker_image.sh" "auth.clj" "COMMIT_EDITMSG" "db_schema.clj" "COMMIT_EDITMSG" "transaction_schema.clj" "COMMIT_EDITMSG" ".keep_this_file_here_for_git" "COMMIT_EDITMSG" ".gitignore" "COMMIT_EDITMSG" "COMMIT_EDITMSG" "core.clj" "utils.clj" "manual_schema.clj" "dummy.dtm" "COMMIT_EDITMSG" "COMMIT_EDITMSG" "hih.dtm" "project.clj" "core.clj" "COMMIT_EDITMSG" "README.md" "auth.clj" "schema-core.dtm" "project.clj" "toy_schema.dtm" "db.clj" "user_schema.dtm" "data.clj" "COMMIT_EDITMSG" "data.clj" "project.clj" "handler.clj" "handler.clj" "README.md" "ast_generator.clj" "indent.clj" "core.clj" "api_dataweave.clj" "COMMIT_EDITMSG" "project.clj" "core.clj" "schema.dtm" "project.clj" "db_test.clj" "db_test.clj" "handler.clj" "sql-transactor.properties" "credentials.clj" "sql-transactor.properties" "db.clj" "sql-transactor-template.properties" "core.cljs" "whip.js" "index.html" "Dockerfile" "project.clj" "core.clj" "server.clj" "core.clj" "project.clj" "openresty.conf" "nginx.conf"))
(setq coding-system-history '("utf-8" "utf-8-hfs-unix" "utf-8-hfs" "utf-8-hfs-dos" "utf-8" "chinese-iso-8bit" "th-tis620"))
(setq query-replace-history '("tasks-" "template-" "template-" "p" "println" "println" "tree" "cmap" "cmap" "u" "util/str->uuid" "util/str->uuid" "11111111-1111-1111-1111-1111111101" "11111111-1111-1111-1111-1111111100" "11111111-1111-1111-1111-1111111100" "11111111-1111-1111-1111-111111110" "99b1b2e5-bcfb-4f3f-b4af-fadfa90dd" "99b1b2e5-bcfb-4f3f-b4af-fadfa90dd" "11111111-1111-1111-1111-111111110" "15b1b2e5-1111-4f3f-b4af-0000090dd" "15b1b2e5-1111-4f3f-b4af-0000090dd" "11111111-1111-1111-1111-111111110" "14b1b2e5-1111-4f3f-b4af-0000090dd" "14b1b2e5-1111-4f3f-b4af-0000090dd" "11111111-1111-1111-1111-111111110" "12b1b2e5-1111-4f3f-b4af-0000090dd" "12b1b2e5-1111-4f3f-b4af-0000090dd" "11111111-1111-1111-1111-111111110" "11b1b2e5-1111-4f3f-b4af-0000090dd" "11b1b2e5-1111-4f3f-b4af-0000090dd" "11111111-1111-1111-1111-111111110" "10b1b2e5-1111-4f3f-b4af-0000090dd" "10b1b2e5-1111-4f3f-b4af-0000090dd" "11111111-1111-1111-1111-111111110" "15b1b2e5-1111-4f3f-b4af-fadfa90dd" "15b1b2e5-1111-4f3f-b4af-fadfa90dd" "11111111-1111-1111-1111-111111110" "14b1b2e5-1111-4f3f-b4af-fadfa90dd" "14b1b2e5-1111-4f3f-b4af-fadfa90dd" "11111111-1111-1111-1111-111111110" "12b1b2e5-1111-4f3f-b4af-fadfa90dd" "12b1b2e5-1111-4f3f-b4af-fadfa90dd" "11111111-1111-1111-1111-111111110" "11b1b2e5-1111-4f3f-b4af-fadfa90dd" "11b1b2e5-1111-4f3f-b4af-fadfa90dd" "11111111-1111-1111-1111-111111110" "10b1b2e5-1111-4f3f-b4af-fadfa90dd" "10b1b2e5-1111-4f3f-b4af-fadfa90dd" "11111111-1111-1111-1111-11111111" "15b1b2e5-bcfb-4f3f-b4af-fadfa90" "15b1b2e5-bcfb-4f3f-b4af-fadfa90" "11111111-1111-1111-1111-111111110" "14b1b2e5-bcfb-4f3f-b4af-fadfa90dd" "14b1b2e5-bcfb-4f3f-b4af-fadfa90dd" "11111111-1111-1111-1111-111111110" "13b1b2e5-bcfb-4f3f-b4af-fadfa90dd" "13b1b2e5-bcfb-4f3f-b4af-fadfa90dd" "11111111-1111-1111-1111-111111110" "12b1b2e5-bcfb-4f3f-b4af-fadfa90dd" "12b1b2e5-bcfb-4f3f-b4af-fadfa90dd" "00" "10" "10" "000" "100" "100" "11111111-1111-1111-1111-111111111" "11b1b2e5-bcfb-4f3f-b4af-fadfa90dd" "11b1b2e5-bcfb-4f3f-b4af-fadfa90dd" "11111111-1111-1111-1111-111111111" "10b1b2e5-bcfb-4f3f-b4af-fadfa90dd" "10b1b2e5-bcfb-4f3f-b4af-fadfa90dd" "school" "tree" "tree" "c-photo" "v-quote" "v-quote" "com-photo" "com-photo" "v-number" "digging-photo" "digging-photo" "v-name" "sp-cost" "sp-cost" "e-estimate" "sp-n-" "sp-n-" "i-number" "sp-snum" "sp-snum" "i-name" "sp-sname" "sp-sname" "-i-address" "-s-photo" "-s-photo" "-fadfa" "-00000"))
(setq file-name-history '("~/code/work/controlroom/controlroom-api-poc/src/api/handler.clj" "~/code/work/controlroom/controlroom-api-poc/src/dtm/util.clj" "~/code/work/controlroom/controlroom-api-poc/src/debug/trace.clj" "~/code/work/controlroom/controlroom-api-poc/src/api/write.clj" "~/code/work/controlroom/controlroom-api-poc/src/data/init.clj" "~/code/work/controlroom/controlroom-api-poc/src/api/util.clj" "~/code/work/controlroom/controlroom-api-poc/src/config/dtm.clj" "~/code/work/controlroom/controlroom-api-poc/src/dtm/write.clj" "~/code/work/controlroom/controlroom-api-poc/src/api/schema.clj" "~/code/work/controlroom/controlroom-api-poc/src/fileserver/s3.clj" "~/code/work/controlroom/controlroom-api-poc/src/fileserver/file.clj" "~/code/work/controlroom/controlroom-api-poc/src/config/digital_ocean_spaces.clj" "~/code/work/controlroom/controlroom-api-poc/src/data/hih_users.clj" "~/code/work/controlroom/controlroom-api-poc/src/data/parse_users_csv.clj" "~/code/geekskool/best_plan/src/best_plan/server.clj" "~/code/work/controlroom/controlroom-api-poc/src/dtm/read.clj" "~/code/work/controlroom/controlroom-api-poc/src/tmp/test.clj" "~/code/work/controlroom/controlroom-api-poc/src/data/test.clj" "~/code/work/controlroom/controlroom-api-poc/src/dashboard/postgres.clj" "~/code/work/controlroom/controlroom-api-poc/src/config/words.clj" "~/code/work/controlroom/controlroom-api-poc/src/config/postgres.clj" "~/code/work/controlroom/sms-api/handler.js" "~/code/work/controlroom/controlroom-api-poc/src/dtm/convert.clj" "~/code/work/controlroom/controlroom-api-poc/src/data/demo/test.clj" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/geekskool/haskell_first_principles/.git/COMMIT_EDITMSG" "~/code/geekskool/haskell_first_principles/README.md" "~/code/haskell_graham_hutton/LICENSE.md" "~/code/haskell_classes/FileSort.hs" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "~/code/work/controlroom/controlroom-api-poc/src/data/ids.clj" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "~/code/work/controlroom/controlroom-api-poc/project.clj" "~/code/work/controlroom/controlroom-api-poc/src/data/demo/ids.clj" "~/code/work/controlroom/controlroom-api-poc/src/data/util.clj" "~/code/work/controlroom/controlroom-api-poc/src/api/read.clj" "~/code/work/controlroom/controlroom-api-poc/src/data/generator.clj" "~/code/ML/3/ex3/predict.m" "~/code/ML/3/ex3/predictOneVsAll.m" "~/code/ML/3/ex3/oneVsAll.m" "~/code/ML/3/ex3/lrCostFunction.m" "~/code/work/controlroom/controlroom-api-poc/docs/design" "~/code/ML/2/ex2/costFunction.m" "~/code/ML/2/ex2/ex2_reg.m" "~/code/ML/2/ex2/costFunctionReg.m" "~/code/ML/2/ex2/mapFeature.m" "~/code/ML/2/ex2/predict.m" "~/code/ML/2/ex2/ex2.m" "~/code/ML/2/ex2/plotData.m" "~/code/ML/2/ex2/sigmoid.m" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "~/code/work/controlroom/controlroom-api-poc/src/dashboard/convert.clj" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "~/code/work/controlroom/controlroom-api-poc/docs/design profiler" "~/code/work/controlroom/controlroom-api-poc/docs/todo" "~/.emacs.d/init.el" "~/code/haskell_classes/mergeSortOnDisk.hs" "~/code/haskell_classes/march-13-mergesort-disk.hs" "~/code/haskell_classes/numberInWords.hs" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "~/code/work/controlroom/controlroom-api-poc/src/fileserver/digital_ocean_spaces.clj" "~/code/work/controlroom/controlroom-api-poc/src/fileserver/do_spaces.clj" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "~/Downloads/parser.hs" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "~/code/work/controlroom/controlroom-api-poc/src/data/repl_commands.clj" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "~/code/haskell_classes/monoid.hs" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "~/code/work/controlroom/Dockerfile" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/MERGE_MSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "~/code/work/controlroom/controlroom-dummy-api/src/controlroom_dummy_api/api_schema.clj" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "~/code/work/controlroom/controlroom-api-poc/src/api/auth.clj" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/haskell_classes/.git/COMMIT_EDITMSG" "~/code/haskell_classes/printJson.hs" "~/code/work/controlroom/controlroom-api-poc/src/dtm/config.clj"))
(setq extended-command-history '("cider-restart" "goto-line" "query-replace-regexp" "eshell" "shell" "hs-hide-all" "octave-mode" "xml-mode" "projectile-grep" "apropos" "clojure-mode" "eval-buffer" "flycheck-mode" "replace-regexp" "haskell-mode" "revert-buffer" "hs-show-all" "hs-show-block" "pkg-info-package-version" "helm-bookmarks" "bookmark-bmenu-list" "ansi-term" "term" "paredit-mode" "lockstep-popup" "lockstep" "yank" "cider-load-file" "cider-eval-file" "cider-load-buffer" "helm-find-files" "display-buffer" "haskell-compile" "electric-newline-and-maybe-indent" "newline-and-indent" "kill-buffer" "term-send-ctrl-x" "describe-variable" "customize-mode" "package-install" "haskell-mode-stylish-buffer" "package-refresh-contents"))
(setq heroku-command-hist '("bash"))
(setq heroku-app-hist '("bestplan"))
(setq read-expression-history '("(setq line-spacing -1.0)" "(setq line-spacing 0.5)"))
(setq magit-revision-history '("origin/put-templates-activities" "dashboard" "origin/download" "origin/dashboard" "origin/upload" "origin/tags" "put-activities" "origin/put-user" "origin/features" "origin/fileserver" "debug" "tasks-assigned-completed" "todos" "origin/tasks-assigned-completed" "design-change" "todos" "design-change" "bug-fixes" "refactor" "todos" "origin/put-activities" "origin/misc" "debug" "debug" "origin/todos" "origin/init-and-init-plus" "origin/debug" "origin/reset" "deploy" "origin/deploy-test" "deploy" "deploy-test" "design-change" "origin/dev" "origin/data-generation" "origin/put-tasks" "origin/bug-fixes" "put-tasks" "refactor" "origin/refactor" "tasks-assigned" "origin/tasks-assigned" "diff" "tasks-assigned" "tasks-assigned" "origin/diff" "tasks-assigned" "manifest-diff-logic" "design-change" "tasks-assigned" "origin/design-change" "origin/org-units" "logout" "org-units" "logout" "master" "origin/logout" "login" "logout" "origin/master" "origin/preliminary-datomic-layer" "origin/master" "manifest-diff-logic" "test" "origin/manifest-diff-logic" "manifest-diff-logic" "origin/documentation" "documentation" "manifest-diff-logic" "origin/dev" "dev" "origin/everything-is-a-thing" "everything-is-a-thing" "origin/dev" "documentation" "everything-is-a-thing" "everything-is-a-thing" "everything-is-a-thing" "everything-is-a-thing" "dev" "everything-is-a-thing" "dev" "everything-is-a-thing" "master" "everything-is-a-thing" "deploy" "origin/everything-is-a-thing" "dev" "everything-is-a-task" "dev" "deploy" "dev" "deploy" "master" "dev" "deploy" "master" "dev" "deploy" "dev"))
(setq cider-minibuffer-history '("data/init" "db/photo" "photo-details" "db/photo" "write/photo" "file/download" "read/download" "schema/FileManifest" "object-store/put-object" "file/upload" "util/get-all-vals" "convert/project" "clojure.string/trim" "convert/user-auth" "db/get-user-auth" "convert/user-auth" "db/get-user-auth" "auth/login" "data/init" "dashboard/update-db" "write/init" "util/milliseconds-from" "convert/template-activity" "db/templates-activities" "read/templates-activities" "keys-emap" "read/templates-activities" "transform-map" "transform-map-plus" "c/tag" "c/task-tags" "dtm.util/sort-by-position" "assoc" "util/uuid" "util/filter-nil" "db/user" "auth/authorize-and-respond" "util/get-task-assigned-to-eid" "db/tasks-pending" "util/get-project-eid" "convert/task-completed" "auth/authorize-and-respond" "util/get-project-eid" "db/org-units" "read/org-units" "db/org-units" "org-units-manifest" "measurement" "db/tasks" "write/tasks" "get-project-eid" "util/get-assigner-eid" "db/tasks-pending" "read/tasks-pending" "util/assignee-details" "db/tasks-assigned" "read/tasks-assigned" "write/init" "key" "db/tasks" "db/templates-projects" "read/templates-projects" "project-templates-manifest" "auth/authorize-and-respond" "read/templates-projects" "schema/ProjectTemplatesDiff" "db/templates-projects" "read/templates-projects" "db/templates-projects" "read/templates-projects" "db/templates-projects" "read/templates-projects" "schema/ProjectTemplatesDiff" "db/templates-projects" "read/templates-projects" "convert/template-project" "template-project" "db/templates-projects" "read/templates-projects" "data/init" "write/tasks" "if-not" "db/tasks-assigned" "read/tasks-assigned" "db/tasks-completed" "read/tasks-completed" "db/tasks-pending" "read/tasks-pending" "read/org-units" "db/org-units" "util/diff" "read/tasks-pending" "read/org-units" "s/defschema" "util/get-org-unit-eid" "db/tasks-pending" "read/tasks-pending" "util/get-completed-tasks-ids" "db/tasks-completed" "read/tasks-completed"))
(setq search-ring '("rename" "delete" "combina"))
(setq buffer-name-history '("*unsent mail*" "inin" "hih-users" "test.clj" "core.clj" "*cider-repl controlroom-api-poc*" "*unsent mail*" "*shell*" "data/ids.clj" "data/test.clj" "*unsent mail*" "*cider-repl controlroom-api-poc*" "*Ibuffer*" "*magit: controlroom-api-poc" "file.clj" "*Ibuffer*" "*haskell-process-log*" "*haskell*" "*Messages*" "*scratch*" "TAGS" "*Messages*" "*haskell*" "config.clj" "config" "*cider-error*" "init.el" "core.clj" "repl_commands.clj" "*cider-repl controlroom-api-poc*<2>" "*cider-repl controlroom-api-poc*" "*cider-error*" "api_schema.clj" "core.clj" "*Flycheck error messages*" "data" "test.clj" "api_schema.clj" "*cider-repl controlroom-dummy-api*" "*Flycheck error messages*" "*haskell*" "prime.hs" "*cider-repl controlroom-api-poc*" "project.clj" "*haskell*" "repl-dump" "*Bookmark List*" ".emacs~" "testrun.clj" "*cider-repl controlroom-dummy-api*" "datomic_schema_generator.clj" "repl-dump" "bst.hs" "mygram" "io" "exercises.hs" "*ansi-term*" "*terminal*" "scratch" "*Flycheck error messages*" "*magit-process: controlroom-dummy-api" "*magit-diff: controlroom-dummy-api" "*magit: controlroom-dummy-api" "pom.xml.asc" ".lei" "*cider-repl docker-compojure-hello-world-master*" "*unsent mail*" "ch" "ch3.hs" "*haskell*" "*terminal*" "ac-comphist.dat" "ch2.hs" "*cider-repl best_plan*" "*terminal*" "*ansi-term*" "*terminal*" "*shell*" "*grep*" "*magit: best_plan" "*heroku bash: bestplan*" "powerline-themes.el" "server.clj" "test.clj" "*Customize Face: Default*" "init.el" "*magit: .emacs.d" "*Customize Face: Default*" "isd.csv" "csv_gen.clj" "csv_gen.clj"))
(setq ido-buffer-history '("*unsent mail*" "inin" "hih-users" "test.clj" "core.clj" "*cider-repl controlroom-api-poc*" "*unsent mail*" "*shell*" "data/ids.clj" "data/test.clj" "*unsent mail*" "*cider-repl controlroom-api-poc*" "*Ibuffer*" "*magit: controlroom-api-poc" "file.clj" "*Ibuffer*" "*haskell-process-log*" "*haskell*" "*Messages*" "*scratch*" "TAGS" "*Messages*" "*haskell*" "config.clj" "config" "*cider-error*" "init.el" "core.clj" "repl_commands.clj" "*cider-repl controlroom-api-poc*<2>" "*cider-repl controlroom-api-poc*" "*cider-error*" "api_schema.clj" "core.clj" "*Flycheck error messages*" "data" "test.clj" "api_schema.clj" "*cider-repl controlroom-dummy-api*" "*Flycheck error messages*" "*haskell*" "prime.hs" "*cider-repl controlroom-api-poc*" "project.clj" "*haskell*" "repl-dump" "*Bookmark List*" ".emacs~" "testrun.clj" "*cider-repl controlroom-dummy-api*" "datomic_schema_generator.clj" "repl-dump" "bst.hs" "mygram" "io" "exercises.hs" "*ansi-term*" "*terminal*" "scratch" "*Flycheck error messages*" "*magit-process: controlroom-dummy-api" "*magit-diff: controlroom-dummy-api" "*magit: controlroom-dummy-api" "pom.xml.asc" ".lei" "*cider-repl docker-compojure-hello-world-master*" "*unsent mail*" "ch" "ch3.hs" "*haskell*" "ac-comphist.dat" "ch2.hs" "*cider-repl best_plan*" "*terminal*" "*ansi-term*" "*terminal*" "*shell*" "*grep*" "*magit: best_plan" "*heroku bash: bestplan*" "powerline-themes.el" "server.clj" "test.clj" "*Customize Face: Default*" "init.el" "*magit: .emacs.d" "*Customize Face: Default*" "isd.csv" "*Custom Themes*"))
(setq face-name-history '("default" "all faces" "default" "all faces" "default"))
(setq helm-M-x-input-history '("insta" "cid" "go" "ci" "cider" "b" "kill-ema" "eshell" "she" #("dtm-linking-tx" 0 14 (cider-locals ("tx" "a-task-id" "m-task-a-measument-id" "m-task-id" "kvs" "val" "key" "cmap" "val" "key" "cmap" "n" "chars" "user-details" "_" "pass" "password" "state" "orgUnit" "email" "phone" "title" "lastName" "firstName" "tree" "uuid" "children" "template" "owner" "dtm-linking-tx" "template-with-ids" "tasks") fontified t help-echo cider--help-echo)) #("template-with-ids" 0 17 (cider-locals ("tx" "a-task-id" "m-task-a-measument-id" "m-task-id" "kvs" "val" "key" "cmap" "val" "key" "cmap" "n" "chars" "user-details" "_" "pass" "password" "state" "orgUnit" "email" "phone" "title" "lastName" "firstName" "tree" "uuid" "children" "template" "owner" "dtm-linking-tx" "template-with-ids" "tasks") fontified t help-echo cider--help-echo)) #("map?" 0 4 (face font-lock-builtin-face cider-locals ("tree") fontified t help-echo cider--help-echo)) #("util/str->uuid" 0 4 (fontified t help-echo cider--help-echo cider-locals ("bindings" "init" "sym") face font-lock-type-face) 4 5 (fontified t help-echo cider--help-echo cider-locals ("bindings" "init" "sym") face default) 5 14 (fontified t help-echo cider--help-echo cider-locals ("bindings" "init" "sym"))) #("11111111-1111-1111-1111-111111110099" 0 33 (face font-lock-string-face cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid") fontified t help-echo cider--help-echo) 33 36 (face font-lock-string-face cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid") fontified t help-echo cider--help-echo)) #("users" 0 5 (face font-lock-comment-face cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid" "util/str->uuid") fontified t help-echo cider--help-echo)) #("15b1b2e5-1111-4f3f-b4af-0000090dd070" 0 36 (face font-lock-string-face cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid") fontified t help-echo cider--help-echo)) #("11111111-1111-1111-1111-111111110024" 0 33 (face font-lock-string-face cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid") help-echo cider--help-echo fontified t) 33 36 (face font-lock-string-face cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid") fontified t help-echo cider--help-echo)) #("11111111-1111-1111-1111-111111110005" 0 33 (face font-lock-string-face cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid") help-echo cider--help-echo fontified t) 33 36 (face font-lock-string-face cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid") fontified t help-echo cider--help-echo)) #("defs" 0 4 (face font-lock-keyword-face font-lock-multiline t cider-locals ("util/str->uuid" "util/str->uuid") fontified t help-echo cider--help-echo)) #("11111111-1111-1111-1111-111111110024" 0 33 (face font-lock-string-face cider-locals ("util/str->uuid" "util/str->uuid") help-echo cider--help-echo fontified t) 33 36 (face font-lock-string-face cider-locals ("util/str->uuid" "util/str->uuid") fontified t help-echo cider--help-echo)) #("11111111-1111-1111-1111-111111110005" 0 33 (face font-lock-string-face cider-locals ("util/str->uuid" "util/str->uuid") help-echo cider--help-echo fontified t) 33 36 (face font-lock-string-face cider-locals ("util/str->uuid" "util/str->uuid") fontified t help-echo cider--help-echo)) #("defs" 0 4 (face font-lock-keyword-face font-lock-multiline t cider-locals ("util/str->uuid") fontified t help-echo cider--help-echo)) #("util/str->uuid" 0 4 (face font-lock-type-face cider-locals ("util/str->uuid") fontified t help-echo cider--help-echo) 4 5 (face default cider-locals ("util/str->uuid") fontified t help-echo cider--help-echo) 5 14 (cider-locals ("util/str->uuid") fontified t help-echo cider--help-echo)) #("15b1b2e5-bcfb-4f3f-b4af-fadfa90dd070" 0 36 (face font-lock-string-face cider-locals ("util/str->uuid") fontified t help-echo cider--help-echo)) #("util/str->uuid" 0 4 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid") face font-lock-type-face) 4 5 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid") face default) 5 14 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid"))) #("14b1b2e5-bcfb-4f3f-b4af-fadfa90dd040" 0 33 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid") face font-lock-string-face) 33 36 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid") face font-lock-string-face)) #("util/str->uuid" 0 4 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid") face font-lock-type-face) 4 5 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid") face default) 5 14 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid"))) #("user> " 0 6 (fontified t font-lock-face cider-repl-prompt-face read-only t intangible t field cider-repl-prompt rear-nonsticky (field read-only font-lock-face intangible))) #("12b1b2e5-bcfb-4f3f-b4af-fadfa90dd020" 0 36 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid") face font-lock-string-face)) #("11111111-1111-1111-1111-111111111010" 0 33 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid") face font-lock-string-face) 33 36 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid") face font-lock-string-face)) #("11111111-1111-1111-1111-111111111000" 0 33 (fontified t help-echo cider--help-echo cider-locals ("util/str->uuid") face font-lock-string-face) 33 36 (fontified t help-echo cider--help-echo cider-locals ("util/str->uuid") face font-lock-string-face)) #("util/str->uuid" 0 4 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid") face font-lock-type-face) 4 5 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid") face default) 5 14 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid"))) #("11b1b2e5-bcfb-4f3f-b4af-fadfa90dd010" 0 36 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid") face font-lock-string-face)) #("util/str->uuid" 0 4 (fontified t help-echo cider--help-echo cider-locals ("util/str->uuid") face font-lock-type-face) 4 5 (fontified t help-echo cider--help-echo cider-locals ("util/str->uuid") face default) 5 14 (fontified t help-echo cider--help-echo cider-locals ("util/str->uuid"))) #("10b1b2e5-bcfb-4f3f-b4af-fadfa90dd000" 0 36 (fontified t help-echo cider--help-echo cider-locals ("util/str->uuid") face font-lock-string-face)) #("m-v-quote-id" 0 2 (fontified t help-echo cider--help-echo cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid")) 2 9 (fontified t help-echo cider--help-echo cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid")) 9 12 (fontified t help-echo cider--help-echo cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid"))) #("mt-v-number-id" 0 3 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid")) 3 11 (fontified t help-echo cider--help-echo cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid")) 11 14 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid"))) #("mt-v-name-id" 0 3 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid")) 3 9 (fontified t help-echo cider--help-echo cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid")) 9 12 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid"))) #("m-sp-cost-id" 0 12 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid"))) #("mt-i-number-id" 0 3 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid")) 3 11 (fontified t help-echo cider--help-echo cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid")) 11 14 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid"))) #("mt-i-name-id" 0 3 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid")) 3 9 (fontified t help-echo cider--help-echo cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid")) 9 12 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid"))) #("mt-i-address-id" 0 2 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid")) 2 12 (fontified t help-echo cider--help-echo cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid")) 12 15 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid"))) #("mt-i-location-id" 0 16 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid"))) #("99b1b2e5-bcfb-4f3f-b4af-0000090dd014" 0 24 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid" "util/str->uuid") face font-lock-string-face) 24 29 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid" "util/str->uuid") face font-lock-string-face) 29 36 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid" "util/str->uuid") face font-lock-string-face)) #("m-a-sidewalk-id" 0 15 (fontified t help-echo cider--help-echo cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid") font-lock-multiline t face font-lock-function-name-face)) #("ids/t-school-id" 0 3 (help-echo cider--help-echo fontified t cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-school" "t-identify" "t-cost" "t-vendor" "t-complete" "mt-c-photo" "m-c-photo" "mt-v-quote" "m-v-quote" "mt-v-number" "m-v-number" "mt-v-name" "m-v-name" "mt-e-estimate" "m-e-estimate" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify") face font-lock-type-face) 3 4 (help-echo cider--help-echo fontified t cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-school" "t-identify" "t-cost" "t-vendor" "t-complete" "mt-c-photo" "m-c-photo" "mt-v-quote" "m-v-quote" "mt-v-number" "m-v-number" "mt-v-name" "m-v-name" "mt-e-estimate" "m-e-estimate" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify") face default) 4 15 (help-echo cider--help-echo fontified t cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-school" "t-identify" "t-cost" "t-vendor" "t-complete" "mt-c-photo" "m-c-photo" "mt-v-quote" "m-v-quote" "mt-v-number" "m-v-number" "mt-v-name" "m-v-name" "mt-e-estimate" "m-e-estimate" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify"))) #("t-wo" 0 4 (help-echo cider--help-echo fontified t cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-cost" "t-vendor" "t-complete" "mt-c-photo" "m-c-photo" "mt-v-quote" "m-v-quote" "mt-v-number" "m-v-number" "mt-v-name" "m-v-name" "mt-e-estimate" "m-e-estimate" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify"))) #("t-df" 0 4 (help-echo cider--help-echo fontified t cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-vendor" "t-complete" "mt-c-photo" "m-c-photo" "mt-v-quote" "m-v-quote" "mt-v-number" "m-v-number" "mt-v-name" "m-v-name" "mt-e-estimate" "m-e-estimate" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify"))) #("t-complete" 0 10 (help-echo cider--help-echo fontified t cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-vendor" "t-complete" "mt-c-photo" "m-c-photo" "mt-v-quote" "m-v-quote" "mt-v-number" "m-v-number" "mt-v-name" "m-v-name" "mt-e-estimate" "m-e-estimate" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify"))) #("ids/t-ll-id" 0 3 (help-echo cider--help-echo fontified t cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-vendor" "t-complete" "mt-c-photo" "m-c-photo" "mt-v-quote" "m-v-quote" "mt-v-number" "m-v-number" "mt-v-name" "m-v-name" "mt-e-estimate" "m-e-estimate" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify") face font-lock-type-face) 3 4 (help-echo cider--help-echo fontified t cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-vendor" "t-complete" "mt-c-photo" "m-c-photo" "mt-v-quote" "m-v-quote" "mt-v-number" "m-v-number" "mt-v-name" "m-v-name" "mt-e-estimate" "m-e-estimate" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify") face default) 4 11 (help-echo cider--help-echo fontified t cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-vendor" "t-complete" "mt-c-photo" "m-c-photo" "mt-v-quote" "m-v-quote" "mt-v-number" "m-v-number" "mt-v-name" "m-v-name" "mt-e-estimate" "m-e-estimate" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify"))) #("m-c-photo" 0 9 (help-echo cider--help-echo fontified t cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-c-photo" "m-c-photo" "mt-v-quote" "m-v-quote" "mt-v-number" "m-v-number" "mt-v-name" "m-v-name" "mt-e-estimate" "m-e-estimate" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify"))) #("m-e-estimate" 0 1 (fontified t help-echo cider--help-echo cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-e-estimate" "m-e-estimate" "mt-v-number" "m-v-number" "mt-v-name" "m-v-name" "mt-e-estimate" "m-e-estimate" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify")) 1 12 (fontified t help-echo cider--help-echo cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-e-estimate" "m-e-estimate" "mt-v-number" "m-v-number" "mt-v-name" "m-v-name" "mt-e-estimate" "m-e-estimate" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify"))) #("m-i-number" 0 1 (help-echo cider--help-echo fontified t cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-i-number" "m-i-number" "mt-v-name" "m-v-name" "mt-e-estimate" "m-e-estimate" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify")) 1 10 (help-echo cider--help-echo fontified t cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-i-number" "m-i-number" "mt-v-name" "m-v-name" "mt-e-estimate" "m-e-estimate" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify"))) #("m-i-name" 0 1 (fontified t help-echo cider--help-echo cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-e-estimate" "m-e-estimate" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify")) 1 8 (fontified t help-echo cider--help-echo cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-e-estimate" "m-e-estimate" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify"))) #("m-wo-number" 0 11 (help-echo cider--help-echo fontified t cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify"))) #("m-number" 0 8 (help-echo cider--help-echo fontified t cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-i-name" "m-i-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify"))) #("m-name" 0 6 (help-echo cider--help-echo fontified t cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify"))) #("m-address" 0 9 (help-echo cider--help-echo fontified t cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify"))) #("mt-location" 0 11 (help-echo cider--help-echo fontified t cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify"))) #("m-a-ll" 0 6 (help-echo cider--help-echo fontified t cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify"))) #("m-a-vector" 0 3 (help-echo cider--help-echo fontified t cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-vector" "m-a-vector" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify")) 3 10 (fontified t help-echo cider--help-echo cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-vector" "m-a-vector" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify"))) #("m-a-df" 0 6 (help-echo cider--help-echo fontified t cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify"))) #("m-acost" 0 3 (help-echo cider--help-echo fontified t cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-acost" "m-acost" "mt-a-identify" "m-a-identify")) 3 7 (fontified t help-echo cider--help-echo cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-acost" "m-acost" "mt-a-identify" "m-a-identify"))) #("m-a-wo" 0 6 (help-echo cider--help-echo fontified t cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-identify" "m-a-identify"))) #("defs" 0 4 (fontified t help-echo cider--help-echo cider-locals ("util/str->uuid") font-lock-multiline t face font-lock-keyword-face)) #("util/str->uuid" 0 4 (fontified t help-echo cider--help-echo cider-locals ("util/str->uuid" "util/str->uuid") face font-lock-type-face) 4 5 (fontified t help-echo cider--help-echo cider-locals ("util/str->uuid" "util/str->uuid") face default) 5 14 (fontified t help-echo cider--help-echo cider-locals ("util/str->uuid" "util/str->uuid"))) #("ids/mhr-edu-w-id" 0 3 (fontified t face font-lock-type-face) 3 4 (fontified t face default) 4 16 (fontified t)) "hide" #("Id" 0 2 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face)) "octave" "oc" #("================================templates/projects==========================" 0 76 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face)) #("===============================templates/projects===========================" 0 76 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face)) "octave" #("task_tags" 0 9 (fontified t)) #("*" 0 1 (fontified t)) #(":task/id" 0 1 (help-echo cider--help-echo fontified t cider-locals ("emap" "fs" "m" "updated-m" "val" "f" "k" "emap" "vals-converted" "keys-needed" "keys-converted" "array-key" "cmap" "new-key" "array-key" "cmap" "emap" "vals-converted" "keys-needed" "keys-converted" "emap" "val-fs" "get-task-id" "keys-needed" "keys-converted" "emap" "vals-converted" "get-measurement-templates-ids" "keys-needed" "keys-converted" "emap" "keys-needed" "keys-converted" "entities" "attr" "entities" "convert-entities-f" "attr" "entities" "attr" "entities" "convert-entities-f" "attr" "emap" "vals-converted" "val-fs" "get-projects-ids" "keys-converted" "emap" "val-fs" "get-activities-ids" "get-states-ids" "keys-converted" "emap" "val-fs" "get-verticals-ids" "keys-converted" "emap" "val-fs" "get-users-ids" "keys-converted" "emap" "emap" "val-fs" "get-tags" "get-measurements-ids" "keys-converted" "emap" "val-fs" "get-owner" "root-task-id" "get-root" "keys-converted") face (clojure-keyword-face)) 1 5 (help-echo cider--help-echo fontified t cider-locals ("emap" "fs" "m" "updated-m" "val" "f" "k" "emap" "vals-converted" "keys-needed" "keys-converted" "array-key" "cmap" "new-key" "array-key" "cmap" "emap" "vals-converted" "keys-needed" "keys-converted" "emap" "val-fs" "get-task-id" "keys-needed" "keys-converted" "emap" "vals-converted" "get-measurement-templates-ids" "keys-needed" "keys-converted" "emap" "keys-needed" "keys-converted" "entities" "attr" "entities" "convert-entities-f" "attr" "entities" "attr" "entities" "convert-entities-f" "attr" "emap" "vals-converted" "val-fs" "get-projects-ids" "keys-converted" "emap" "val-fs" "get-activities-ids" "get-states-ids" "keys-converted" "emap" "val-fs" "get-verticals-ids" "keys-converted" "emap" "val-fs" "get-users-ids" "keys-converted" "emap" "emap" "val-fs" "get-tags" "get-measurements-ids" "keys-converted" "emap" "val-fs" "get-owner" "root-task-id" "get-root" "keys-converted") face (font-lock-type-face clojure-keyword-face)) 5 6 (help-echo cider--help-echo fontified t cider-locals ("emap" "fs" "m" "updated-m" "val" "f" "k" "emap" "vals-converted" "keys-needed" "keys-converted" "array-key" "cmap" "new-key" "array-key" "cmap" "emap" "vals-converted" "keys-needed" "keys-converted" "emap" "val-fs" "get-task-id" "keys-needed" "keys-converted" "emap" "vals-converted" "get-measurement-templates-ids" "keys-needed" "keys-converted" "emap" "keys-needed" "keys-converted" "entities" "attr" "entities" "convert-entities-f" "attr" "entities" "attr" "entities" "convert-entities-f" "attr" "emap" "vals-converted" "val-fs" "get-projects-ids" "keys-converted" "emap" "val-fs" "get-activities-ids" "get-states-ids" "keys-converted" "emap" "val-fs" "get-verticals-ids" "keys-converted" "emap" "val-fs" "get-users-ids" "keys-converted" "emap" "emap" "val-fs" "get-tags" "get-measurements-ids" "keys-converted" "emap" "val-fs" "get-owner" "root-task-id" "get-root" "keys-converted") face (default clojure-keyword-face)) 6 8 (help-echo cider--help-echo fontified t cider-locals ("emap" "fs" "m" "updated-m" "val" "f" "k" "emap" "vals-converted" "keys-needed" "keys-converted" "array-key" "cmap" "new-key" "array-key" "cmap" "emap" "vals-converted" "keys-needed" "keys-converted" "emap" "val-fs" "get-task-id" "keys-needed" "keys-converted" "emap" "vals-converted" "get-measurement-templates-ids" "keys-needed" "keys-converted" "emap" "keys-needed" "keys-converted" "entities" "attr" "entities" "convert-entities-f" "attr" "entities" "attr" "entities" "convert-entities-f" "attr" "emap" "vals-converted" "val-fs" "get-projects-ids" "keys-converted" "emap" "val-fs" "get-activities-ids" "get-states-ids" "keys-converted" "emap" "val-fs" "get-verticals-ids" "keys-converted" "emap" "val-fs" "get-users-ids" "keys-converted" "emap" "emap" "val-fs" "get-tags" "get-measurements-ids" "keys-converted" "emap" "val-fs" "get-owner" "root-task-id" "get-root" "keys-converted") face (clojure-keyword-face))) #("cmap" 0 4 (help-echo cider--help-echo fontified t cider-locals ("emap" "cmap"))) #("get-id-list" 0 11 (help-echo cider--help-echo fontified t cider-locals ("emap" "fs" "m" "updated-m" "val" "f" "k" "emap" "vals-converted" "keys-needed" "keys-converted" "array-key" "cmap" "new-key" "array-key" "cmap" "emap" "vals-converted" "keys-needed" "keys-converted" "emap" "val-fs" "get-task-id" "keys-needed" "keys-converted" "emap" "vals-converted" "get-measurement-templates-ids" "keys-needed" "keys-converted" "emap" "keys-needed" "keys-converted" "entities" "attr" "entities" "convert-entities-f" "attr") face font-lock-function-name-face)) #(":assigned-to" 0 12 (help-echo cider--help-echo fontified t cider-locals nil face (clojure-keyword-face))) #(":projects" 0 9 (help-echo cider--help-echo fontified t cider-locals nil face (clojure-keyword-face))) #("filter-nil" 0 10 (fontified t help-echo cider--help-echo cider-locals ("db" "val" "attr" "db" "value" "attr" "db" "eid" "e" "all" "manifest" "delete" "insert" "not-in-all?" "not-in-manifest?" "all-set" "manifest-set" "not-contains?" "cmap") face font-lock-function-name-face)) #("config/db-spec" 0 6 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 6 7 (fontified t help-echo cider--help-echo cider-locals nil face default) 7 14 (fontified t help-echo cider--help-echo cider-locals nil)) "cid" "cider" "888888" #("9898989898" 0 10 (fontified t help-echo cider--help-echo cider-locals ("let" "supervisors" "workers") face font-lock-string-face)) #("org.joda.time.DateTime" 0 22 (rear-nonsticky (font-lock-face) font-lock-face cider-repl-stdout-face fontified t)) #("User" 0 4 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t)) #("." 0 1 (face font-lock-string-face fontified t)) "gre" "apropos" "projectile" "projectile-grep" "clo" #("pfdin" 0 1 (face font-lock-string-face fontified t) 1 2 (face font-lock-string-face fontified t) 2 3 (face font-lock-string-face fontified t) 3 4 (face font-lock-string-face fontified t) 4 5 (face font-lock-string-face fontified t)) #("100" 0 3 (fontified t)) "buffer" "res" #(":id" 0 1 (face (clojure-keyword-face) cider-locals ("m" "tx" "m-id" "m-namespace" "m-details" "m-e" "db" "value" "valueType" "id" "t" "sibling-id" "first-child-id" "parent-id" "sibling" "firstChild" "parent" "details" "db" "status" "id" "mt" "activity" "tx" "task-id" "assignee" "measurementTemplates" "dueDate" "description" "name" "activity" "username" "tx" "dueDate" "description" "name" "projectId") fontified t help-echo cider--help-echo) 1 3 (face (clojure-keyword-face) cider-locals ("m" "tx" "m-id" "m-namespace" "m-details" "m-e" "db" "value" "valueType" "id" "t" "sibling-id" "first-child-id" "parent-id" "sibling" "firstChild" "parent" "details" "db" "status" "id" "mt" "activity" "tx" "task-id" "assignee" "measurementTemplates" "dueDate" "description" "name" "activity" "username" "tx" "dueDate" "description" "name" "projectId") fontified t help-echo cider--help-echo))))
(setq minibuffer-history '("dash" "/home/puneet/code/work/controlroom/controlroom-api-poc/src/api/handler.clj" "han" "/home/puneet/code/work/controlroom/controlroom-api-poc/src/dtm/util.clj" "rep" "evil" "uti" "pro" "han" "proje" "han" "write" "init" "write" "apiwri" "han" "apisc" "/home/puneet/code/work/controlroom/controlroom-api-poc/src/debug/trace.clj" "trac" "/home/puneet/code/work/controlroom/controlroom-api-poc/src/api/write.clj" "apiwri" "rep" "util" "han" "sch" "write" "apiwri" "sche" "han" "conve" "/home/puneet/code/work/controlroom/controlroom-api-poc/src/data/init.clj" "init" "rep" "han" "/home/puneet/code/work/controlroom/controlroom-api-poc/src/api/write.clj" "ini" #(":user/photo" 0 1 (cider-old-input 46 face (clojure-keyword-face) fontified t) 1 5 (cider-old-input 46 face (font-lock-type-face clojure-keyword-face) fontified t) 5 6 (cider-old-input 46 face (default clojure-keyword-face) fontified t) 6 11 (cider-old-input 46 face (clojure-keyword-face) fontified t)) "rep" "apiwr" "han" "apiwri" "ini" "api" "rep" "apisc" "apiut" "hand" "writ" "/home/puneet/code/work/controlroom/controlroom-api-poc/src/data/init.clj" "sche" "init" "repl" "util" "apisch" "sche" "dtmsch" "220" "1" "apisch" "init" "apiwri" "writ" "/home/puneet/code/work/controlroom/controlroom-api-poc/src/api/util.clj" "apit" "/home/puneet/code/work/controlroom/controlroom-api-poc/src/config/db_admin.clj" "con" "postg" "han" "wri" "dash" "init" "admin" "rep" "/home/puneet/code/work/controlroom/controlroom-api-poc/src/api/util.clj" "api.util" "/home/puneet/code/work/controlroom/controlroom-api-poc/src/config/admin.clj" "con" "init" "apiwri" "write" "hand" "sch" "sche" "apisch" "ini" "inin" "/home/puneet/code/work/controlroom/controlroom-api-poc/src/config/dtm" "con" "/home/puneet/code/work/controlroom/controlroom-api-poc/src/dtm/write.clj" "rep" #("============================user/password/update============================" 0 32 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 32 33 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 33 34 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 34 35 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 35 36 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 36 37 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 37 38 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 38 39 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 39 40 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 40 41 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 41 42 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 42 43 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 43 44 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 44 45 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 45 75 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 75 76 (fontified t rear-nonsticky t help-echo cider--help-echo cider-locals nil face font-lock-comment-face)) #("password" 0 8 (fontified t help-echo cider--help-echo cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties"))) "dtmwri" "write" "sch" "api" "con" #("db/get-user-auth" 0 2 (fontified t help-echo cider--help-echo cider-locals ("params" "logic" "auth" "check-api-key" "check-username" "credentials" "check-password" "check-username") face font-lock-type-face) 2 3 (fontified t help-echo cider--help-echo cider-locals ("params" "logic" "auth" "check-api-key" "check-username" "credentials" "check-password" "check-username") face default) 3 16 (fontified t help-echo cider--help-echo cider-locals ("params" "logic" "auth" "check-api-key" "check-username" "credentials" "check-password" "check-username"))) #("convert/user-auth" 0 7 (fontified t help-echo cider--help-echo cider-locals ("username") face font-lock-type-face) 7 8 (fontified t help-echo cider--help-echo cider-locals ("username") face default) 8 17 (fontified t help-echo cider--help-echo cider-locals ("username"))) "auth"))
(setq helm-occur-history '("get" "retr" "tra" "trans" "uploa" "uplo" "unaut" "photo" "user" "photo" "update" "photo" "util" "pass" "photo" #("defn" 0 4 (face font-lock-keyword-face cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties") help-echo cider--help-echo fontified t)) "defn pass" "update" "user" "user-" "jaya" "tasks-t" "org-uni" "get-all" "get-all-va" "tags" "get-all-" "tags" "task-ta" "tags" "init" "send-em" "send" "hih_" "init" "org-u" "get-all" "state-tx" "sex" "sim" "clie" "sim" "org" "user" "activitysub" "tags" #("t41921:" 0 7 (rear-nonsticky (font-lock-face) font-lock-face cider-repl-stdout-face fontified t)) #("t41881:" 0 7 (rear-nonsticky (font-lock-face) font-lock-face cider-repl-stdout-face fontified t)) "dynam" "tags" "dynamic" "user-deta" "activity" "[A-Z]" "mar" "[A-Z]" "*[A-Z]" "simpl" "dyna" "user" "activities" "activitysu" "activi" "get-org" "log" "user" "adduser" "crede" "put" "templat" "case" "nil" "user" "put " "dtm-util" "position" "etemp" "option" "(p " "activity" "submission" "submissi" "auth" "submi" "submission" "tasksub" "activity" "drop-all" "empty" "create" "updated" "[\"Wa" "init" "activity" "resu" "transact" "transa" "tran" "file" "fill"))
(setq kill-ring '(#("()" 0 1 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-4-face)) 1 2 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-4-face))) "7899238c-4c61-4f64-9826-80ee1e65ccd0" #("f7c62d95-03eb-4031-85be-3ab780f77653" 0 36 (fontified t face font-lock-string-face)) "7899238c-4c61-4f64-9826-80ee1e65ccd0" "\"f7c62d95-03eb-4031-85be-3ab780f7765c\"" #("#cors/wrap-cors %
" 0 1 (cider-locals ("c/api" "cors/wrap-cors") help-echo cider--help-echo fontified t) 1 5 (face font-lock-type-face cider-locals ("c/api" "cors/wrap-cors") help-echo cider--help-echo fontified t) 5 6 (face default cider-locals ("c/api" "cors/wrap-cors") help-echo cider--help-echo fontified t) 6 16 (cider-locals ("c/api" "cors/wrap-cors") help-echo cider--help-echo fontified t) 16 17 (face font-lock-variable-name-face cider-locals ("c/api" "cors/wrap-cors") fontified t help-echo cider--help-echo) 17 18 (cider-locals ("c/api" "cors/wrap-cors") fontified t help-echo cider--help-echo)) #("#(cors/wrap-cors %
                                                    :access-control-allow-origin [#\".*\"]
                                                    :access-control-allow-methods [:put])" 0 1 (help-echo cider--help-echo fontified t cider-locals ("c/api")) 1 2 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-6-face)) 2 6 (help-echo cider--help-echo fontified t cider-locals ("c/api") face font-lock-type-face) 6 7 (fontified t help-echo cider--help-echo cider-locals ("c/api") face default) 7 17 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 17 18 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-variable-name-face) 18 19 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 19 71 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 71 99 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (clojure-keyword-face)) 99 100 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 100 101 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-7-face)) 101 102 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 102 105 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-string-face) 105 106 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-string-face) 106 107 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-7-face)) 107 108 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 108 160 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 160 189 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (clojure-keyword-face)) 189 190 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 190 191 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-7-face)) 191 195 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (clojure-keyword-face)) 195 196 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-7-face)) 196 197 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-6-face))) "curl -H \"Origin: http://example.com\" --verbose \\
  https://www.googleapis.com/discovery/v1/apis?fields=" "{
  \"photo\": \"bbbbb\",
  \"username\": \"8736960000\",
  \"creds\": {
  \"username\": \"admin\",
  \"apiKey\": \"AgY4QqfSX2cxwdSrv29BcjHKdSVEUfqJA8GPN8jf\"
}
}" #(";;; ====================PUT user/password/update================================" 0 4 (face font-lock-comment-delimiter-face cider-locals ("c/api") help-echo cider--help-echo fontified t) 4 80 (face font-lock-comment-face cider-locals ("c/api") help-echo cider--help-echo fontified t)) #(" " 0 1 (face font-lock-string-face cider-locals ("c/api") fontified t help-echo cider--help-echo)) ";;; ====================PUT user/password/update================================


               (c/PUT \"/v0.1/user/password/update\" []
                      :return schema/SendApiKey
                      :body [password schema/UpdatePassword]
                      :summary \"Updates the password for a user.\"
                      (write/password password))" ";;; ============================user/password/update============================


(defn password [username password]
  (if (auth/user-exists? username)
    (let [api-key (gen-password 20)
          tx {:user/username username
              :user/password password
              :user/api-key  api-key}]
      (util/transact [tx])
      {:result true
       :apiKey api-key})
    ({:result false
      :error \"user does not exist\"})))" #(":apiKey api-key" 0 7 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "username" "photo" "auth" "tx") fontified t help-echo cider--help-echo) 7 15 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "username" "photo" "auth" "tx") fontified t help-echo cider--help-echo)) #("(transact [{:db/id #db/id[:db.part/db]
  :db/ident :user/photo
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db.install/_attribute :db.part/db}])" 0 1 (cider-old-input 40 fontified t) 1 12 (cider-old-input 40 fontified t) 12 13 (cider-old-input 40 face (clojure-keyword-face) fontified t) 13 15 (cider-old-input 40 face (font-lock-type-face clojure-keyword-face) fontified t) 15 16 (cider-old-input 40 face (default clojure-keyword-face) fontified t) 16 18 (cider-old-input 40 face (clojure-keyword-face) fontified t) 18 20 (cider-old-input 40 fontified t) 20 22 (cider-old-input 40 face font-lock-type-face fontified t) 22 23 (cider-old-input 40 face default fontified t) 23 26 (cider-old-input 40 fontified t) 26 27 (cider-old-input 40 face (clojure-keyword-face) fontified t) 27 34 (cider-old-input 40 face (font-lock-type-face clojure-keyword-face) fontified t) 34 35 (cider-old-input 40 face (default clojure-keyword-face) fontified t) 35 37 (cider-old-input 40 face (clojure-keyword-face) fontified t) 37 39 (cider-old-input 40 fontified t) 39 41 (cider-old-input 40 fontified t) 41 42 (cider-old-input 40 face (clojure-keyword-face) fontified t) 42 44 (cider-old-input 40 face (font-lock-type-face clojure-keyword-face) fontified t) 44 45 (cider-old-input 40 face (default clojure-keyword-face) fontified t) 45 50 (cider-old-input 40 face (clojure-keyword-face) fontified t) 50 51 (cider-old-input 40 fontified t) 51 52 (cider-old-input 40 face (clojure-keyword-face) fontified t) 52 56 (cider-old-input 40 face (font-lock-type-face clojure-keyword-face) fontified t) 56 57 (cider-old-input 40 face (default clojure-keyword-face) fontified t) 57 62 (cider-old-input 40 face (clojure-keyword-face) fontified t) 62 63 (cider-old-input 40 fontified t) 63 65 (cider-old-input 40 fontified t) 65 66 (cider-old-input 40 face (clojure-keyword-face) fontified t) 66 68 (cider-old-input 40 face (font-lock-type-face clojure-keyword-face) fontified t) 68 69 (cider-old-input 40 face (default clojure-keyword-face) fontified t) 69 78 (cider-old-input 40 face (clojure-keyword-face) fontified t) 78 79 (cider-old-input 40 fontified t) 79 80 (cider-old-input 40 face (clojure-keyword-face) fontified t) 80 87 (cider-old-input 40 face (font-lock-type-face clojure-keyword-face) fontified t) 87 88 (cider-old-input 40 face (default clojure-keyword-face) fontified t) 88 94 (cider-old-input 40 face (clojure-keyword-face) fontified t) 94 95 (cider-old-input 40 fontified t) 95 97 (cider-old-input 40 fontified t) 97 98 (cider-old-input 40 face (clojure-keyword-face) fontified t) 98 100 (cider-old-input 40 face (font-lock-type-face clojure-keyword-face) fontified t) 100 101 (cider-old-input 40 face (default clojure-keyword-face) fontified t) 101 112 (cider-old-input 40 face (clojure-keyword-face) fontified t) 112 113 (cider-old-input 40 fontified t) 113 114 (cider-old-input 40 face (clojure-keyword-face) fontified t) 114 128 (cider-old-input 40 face (font-lock-type-face clojure-keyword-face) fontified t) 128 129 (cider-old-input 40 face (default clojure-keyword-face) fontified t) 129 132 (cider-old-input 40 face (clojure-keyword-face) fontified t) 132 133 (cider-old-input 40 fontified t) 133 135 (cider-old-input 40 fontified t) 135 136 (cider-old-input 40 face (clojure-keyword-face) fontified t) 136 146 (cider-old-input 40 face (font-lock-type-face clojure-keyword-face) fontified t) 146 147 (cider-old-input 40 face (default clojure-keyword-face) fontified t) 147 157 (cider-old-input 40 face (clojure-keyword-face) fontified t) 157 158 (cider-old-input 40 fontified t) 158 159 (cider-old-input 40 face (clojure-keyword-face) fontified t) 159 166 (cider-old-input 40 face (font-lock-type-face clojure-keyword-face) fontified t) 166 167 (cider-old-input 40 face (default clojure-keyword-face) fontified t) 167 169 (cider-old-input 40 face (clojure-keyword-face) fontified t) 169 171 (cider-old-input 40 fontified t) 171 172 (cider-old-input 40 fontified t rear-nonsticky t)) #("(transact [{:db/id #db/id[:db.part/db]
  :db/ident :user/photo
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db.install/_attribute :db.part/db}])" 0 1 (cider-old-input 40 fontified t) 1 12 (cider-old-input 40 fontified t) 12 13 (cider-old-input 40 face (clojure-keyword-face) fontified t) 13 15 (cider-old-input 40 face (font-lock-type-face clojure-keyword-face) fontified t) 15 16 (cider-old-input 40 face (default clojure-keyword-face) fontified t) 16 18 (cider-old-input 40 face (clojure-keyword-face) fontified t) 18 20 (cider-old-input 40 fontified t) 20 22 (cider-old-input 40 face font-lock-type-face fontified t) 22 23 (cider-old-input 40 face default fontified t) 23 26 (cider-old-input 40 fontified t) 26 27 (cider-old-input 40 face (clojure-keyword-face) fontified t) 27 34 (cider-old-input 40 face (font-lock-type-face clojure-keyword-face) fontified t) 34 35 (cider-old-input 40 face (default clojure-keyword-face) fontified t) 35 37 (cider-old-input 40 face (clojure-keyword-face) fontified t) 37 39 (cider-old-input 40 fontified t) 39 41 (cider-old-input 40 fontified t) 41 42 (cider-old-input 40 face (clojure-keyword-face) fontified t) 42 44 (cider-old-input 40 face (font-lock-type-face clojure-keyword-face) fontified t) 44 45 (cider-old-input 40 face (default clojure-keyword-face) fontified t) 45 50 (cider-old-input 40 face (clojure-keyword-face) fontified t) 50 51 (cider-old-input 40 fontified t) 51 52 (cider-old-input 40 face (clojure-keyword-face) fontified t) 52 56 (cider-old-input 40 face (font-lock-type-face clojure-keyword-face) fontified t) 56 57 (cider-old-input 40 face (default clojure-keyword-face) fontified t) 57 62 (cider-old-input 40 face (clojure-keyword-face) fontified t) 62 63 (cider-old-input 40 fontified t) 63 65 (cider-old-input 40 fontified t) 65 66 (cider-old-input 40 face (clojure-keyword-face) fontified t) 66 68 (cider-old-input 40 face (font-lock-type-face clojure-keyword-face) fontified t) 68 69 (cider-old-input 40 face (default clojure-keyword-face) fontified t) 69 78 (cider-old-input 40 face (clojure-keyword-face) fontified t) 78 79 (cider-old-input 40 fontified t) 79 80 (cider-old-input 40 face (clojure-keyword-face) fontified t) 80 87 (cider-old-input 40 face (font-lock-type-face clojure-keyword-face) fontified t) 87 88 (cider-old-input 40 face (default clojure-keyword-face) fontified t) 88 94 (cider-old-input 40 face (clojure-keyword-face) fontified t) 94 95 (cider-old-input 40 fontified t) 95 97 (cider-old-input 40 fontified t) 97 98 (cider-old-input 40 face (clojure-keyword-face) fontified t) 98 100 (cider-old-input 40 face (font-lock-type-face clojure-keyword-face) fontified t) 100 101 (cider-old-input 40 face (default clojure-keyword-face) fontified t) 101 112 (cider-old-input 40 face (clojure-keyword-face) fontified t) 112 113 (cider-old-input 40 fontified t) 113 114 (cider-old-input 40 face (clojure-keyword-face) fontified t) 114 128 (cider-old-input 40 face (font-lock-type-face clojure-keyword-face) fontified t) 128 129 (cider-old-input 40 face (default clojure-keyword-face) fontified t) 129 132 (cider-old-input 40 face (clojure-keyword-face) fontified t) 132 133 (cider-old-input 40 fontified t) 133 135 (cider-old-input 40 fontified t) 135 136 (cider-old-input 40 face (clojure-keyword-face) fontified t) 136 146 (cider-old-input 40 face (font-lock-type-face clojure-keyword-face) fontified t) 146 147 (cider-old-input 40 face (default clojure-keyword-face) fontified t) 147 157 (cider-old-input 40 face (clojure-keyword-face) fontified t) 157 158 (cider-old-input 40 fontified t) 158 159 (cider-old-input 40 face (clojure-keyword-face) fontified t) 159 166 (cider-old-input 40 face (font-lock-type-face clojure-keyword-face) fontified t) 166 167 (cider-old-input 40 face (default clojure-keyword-face) fontified t) 167 169 (cider-old-input 40 face (clojure-keyword-face) fontified t) 169 171 (cider-old-input 40 fontified t) 171 172 (cider-old-input 40 fontified t rear-nonsticky t)) "(datomic/transact connection [{:db/id #db/id[:db.part/db]
  :db/ident :user-deets/enriched
  :db/valueType :db.type/boolean
  :db/cardinality :db.cardinality/one
  :db.install/_attribute :db.part/db}])" #("[?e :db.install/partition :db.part/db]" 0 4 (fontified t) 4 5 (face (clojure-keyword-face) fontified t) 5 15 (face (font-lock-type-face clojure-keyword-face) fontified t) 15 16 (face (default clojure-keyword-face) fontified t) 16 25 (face (clojure-keyword-face) fontified t) 25 26 (fontified t) 26 27 (face (clojure-keyword-face) fontified t) 27 34 (face (font-lock-type-face clojure-keyword-face) fontified t) 34 35 (face (default clojure-keyword-face) fontified t) 35 37 (face (clojure-keyword-face) fontified t) 37 38 (fontified t)) "(d/q '[:find ?ident :where
           [?e :db/ident ?ident]
           [_ :db.install/attribute ?e]
           [(.toString ?ident) ?val]
           [(.startsWith ?val \":user\")]] (d/db *conn*))
" "(defn get-user-schema [conn]
  (d/q '[:find ?id
         :where [?e :db/ident ?id]
                [_ :db.install/attribute ?e]
                [?e :db.install/partition :db.part/db]]
       (d/db conn)))" #(":user/password password
              :user/api-key  api-key" 0 1 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "username" "photo" "auth" "tx") fontified t help-echo cider--help-echo) 1 5 (face (font-lock-type-face clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "username" "photo" "auth" "tx") fontified t help-echo cider--help-echo) 5 6 (face (default clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "username" "photo" "auth" "tx") fontified t help-echo cider--help-echo) 6 8 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "username" "photo" "auth" "tx") fontified t help-echo cider--help-echo) 8 14 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "username" "photo" "auth" "tx") fontified t help-echo cider--help-echo) 14 15 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "username" "photo" "auth" "tx") fontified t help-echo cider--help-echo) 15 23 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "username" "photo" "auth" "tx") fontified t help-echo cider--help-echo) 23 24 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "username" "photo" "auth" "tx") fontified t help-echo cider--help-echo) 24 25 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "username" "photo" "auth" "tx")) 25 38 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "username" "photo" "auth" "tx")) 38 39 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "username" "photo" "auth" "tx") face (clojure-keyword-face)) 39 43 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "username" "photo" "auth" "tx") face (font-lock-type-face clojure-keyword-face)) 43 44 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "username" "photo" "auth" "tx") face (default clojure-keyword-face)) 44 49 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "username" "photo" "auth" "tx") face (clojure-keyword-face)) 49 51 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "username" "photo" "auth" "tx") face (clojure-keyword-face)) 51 60 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "username" "photo" "auth" "tx"))) #("api-key (gen-password 20)
          tx {:user/username username
              :user/password password
              :user/api-key  api-key}" 0 8 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx" "api-key") fontified t help-echo cider--help-echo) 8 9 (face (rainbow-delimiters-depth-5-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx" "api-key") fontified t help-echo cider--help-echo) 9 24 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx" "api-key") fontified t help-echo cider--help-echo) 24 25 (face (rainbow-delimiters-depth-5-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx" "api-key") fontified t help-echo cider--help-echo rear-nonsticky t) 25 26 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx") fontified t help-echo cider--help-echo) 26 36 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx")) 36 39 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx")) 39 40 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx") face (rainbow-delimiters-depth-5-face)) 40 41 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx") face (clojure-keyword-face)) 41 45 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx") face (font-lock-type-face clojure-keyword-face)) 45 46 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx") face (default clojure-keyword-face)) 46 54 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx") face (clojure-keyword-face)) 54 64 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx")) 64 78 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx")) 78 79 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx") face (clojure-keyword-face)) 79 83 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx") face (font-lock-type-face clojure-keyword-face)) 83 84 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx") face (default clojure-keyword-face)) 84 86 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx") face (clojure-keyword-face)) 86 92 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx") face (clojure-keyword-face)) 92 101 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx")) 101 102 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx")) 102 116 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx")) 116 117 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx") face (clojure-keyword-face)) 117 121 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx") face (font-lock-type-face clojure-keyword-face)) 121 122 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx") face (default clojure-keyword-face)) 122 127 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx") face (clojure-keyword-face)) 127 129 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx") face (clojure-keyword-face)) 129 138 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx")) 138 139 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx") face (rainbow-delimiters-depth-5-face))) #("auth/user-exists? username" 0 4 (face font-lock-type-face cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key" "photo" "auth") fontified t help-echo cider--help-echo) 4 5 (face default cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key" "photo" "auth") fontified t help-echo cider--help-echo) 5 26 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key" "photo" "auth") fontified t help-echo cider--help-echo)) #(";;; ============================user/password/update============================


(defn password [username password]
  (if (auth/user-exists? username)
    (let [api-key (gen-password 20)
          tx {:user/username username
              :user/password password
              :user/api-key  api-key}]
      (util/transact [tx])
      {:result true
       :apiKey api-key})
    ({:result false
      :error \"user does not exist\"})))" 0 4 (face font-lock-comment-delimiter-face cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties") help-echo cider--help-echo fontified t) 4 81 (face font-lock-comment-face cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties") help-echo cider--help-echo fontified t) 81 83 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties") help-echo cider--help-echo fontified t) 83 84 (face (rainbow-delimiters-depth-1-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties") help-echo cider--help-echo fontified t) 84 88 (face font-lock-keyword-face cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties") help-echo cider--help-echo fontified t) 88 89 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 89 97 (face font-lock-function-name-face cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 97 98 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 98 99 (face (rainbow-delimiters-depth-2-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 99 116 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 116 117 (face (rainbow-delimiters-depth-2-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 117 120 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 120 121 (face (rainbow-delimiters-depth-2-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 121 123 (face font-lock-keyword-face cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 123 124 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 124 125 (face (rainbow-delimiters-depth-3-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 125 129 (face font-lock-type-face cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 129 130 (face default cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 130 151 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 151 152 (face (rainbow-delimiters-depth-3-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 152 153 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 153 157 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 157 158 (face (rainbow-delimiters-depth-3-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 158 161 (face font-lock-keyword-face cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 161 162 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 162 163 (face (rainbow-delimiters-depth-4-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 163 171 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 171 172 (face (rainbow-delimiters-depth-5-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 172 187 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 187 188 (face (rainbow-delimiters-depth-5-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo rear-nonsticky t fontified t) 188 199 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 199 202 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 202 203 (face (rainbow-delimiters-depth-5-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 203 204 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 204 208 (face (font-lock-type-face clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 208 209 (face (default clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 209 217 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 217 227 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 227 241 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 241 242 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 242 246 (face (font-lock-type-face clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 246 247 (face (default clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 247 249 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 249 255 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 255 264 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 264 265 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 265 279 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 279 280 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 280 284 (face (font-lock-type-face clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 284 285 (face (default clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 285 290 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 290 292 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 292 301 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 301 302 (face (rainbow-delimiters-depth-5-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 302 303 (face (rainbow-delimiters-depth-4-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 303 304 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 304 310 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 310 311 (face (rainbow-delimiters-depth-4-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 311 315 (face font-lock-type-face cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 315 316 (face default cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 316 325 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 325 326 (face (rainbow-delimiters-depth-5-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 326 328 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 328 329 (face (rainbow-delimiters-depth-5-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 329 330 (face (rainbow-delimiters-depth-4-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 330 331 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 331 337 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 337 338 (face (rainbow-delimiters-depth-4-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 338 345 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 345 346 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 346 350 (face font-lock-constant-face cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 350 351 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 351 358 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 358 365 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 365 373 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 373 374 (face (rainbow-delimiters-depth-4-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 374 375 (face (rainbow-delimiters-depth-3-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 375 376 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 376 380 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 380 381 (face (rainbow-delimiters-depth-3-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 381 382 (face (rainbow-delimiters-depth-4-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 382 389 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 389 390 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 390 395 (face font-lock-constant-face cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 395 396 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 396 402 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 402 408 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 408 409 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 409 430 (face font-lock-string-face cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 430 431 (face (rainbow-delimiters-depth-4-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 431 432 (face (rainbow-delimiters-depth-3-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 432 433 (face (rainbow-delimiters-depth-2-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 433 434 (face (rainbow-delimiters-depth-1-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo)) #(";;; ============================user/password/update============================


(defn password [username password]
  (if (auth/user-exists? username)
    (let [api-key (gen-password 20)
          tx {:user/username username
              :user/password password
              :user/api-key  api-key}]
      (util/transact [tx])
      {:result true
       :apiKey api-key})
    ({:result false
      :error \"user does not exist\"})))" 0 4 (face font-lock-comment-delimiter-face cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties") help-echo cider--help-echo fontified t) 4 81 (face font-lock-comment-face cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties") help-echo cider--help-echo fontified t) 81 83 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties") help-echo cider--help-echo fontified t) 83 84 (face (rainbow-delimiters-depth-1-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties") help-echo cider--help-echo fontified t) 84 88 (face font-lock-keyword-face cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties") help-echo cider--help-echo fontified t) 88 89 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 89 97 (face font-lock-function-name-face cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 97 98 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 98 99 (face (rainbow-delimiters-depth-2-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 99 116 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 116 117 (face (rainbow-delimiters-depth-2-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 117 120 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 120 121 (face (rainbow-delimiters-depth-2-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 121 123 (face font-lock-keyword-face cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 123 124 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 124 125 (face (rainbow-delimiters-depth-3-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 125 129 (face font-lock-type-face cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 129 130 (face default cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 130 151 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 151 152 (face (rainbow-delimiters-depth-3-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 152 153 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 153 157 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 157 158 (face (rainbow-delimiters-depth-3-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 158 161 (face font-lock-keyword-face cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 161 162 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 162 163 (face (rainbow-delimiters-depth-4-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 163 171 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 171 172 (face (rainbow-delimiters-depth-5-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 172 187 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 187 188 (face (rainbow-delimiters-depth-5-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo rear-nonsticky t fontified t) 188 199 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 199 202 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 202 203 (face (rainbow-delimiters-depth-5-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 203 204 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 204 208 (face (font-lock-type-face clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 208 209 (face (default clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 209 217 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 217 227 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 227 241 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 241 242 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 242 246 (face (font-lock-type-face clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 246 247 (face (default clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 247 249 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 249 255 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 255 264 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 264 265 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 265 279 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 279 280 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 280 284 (face (font-lock-type-face clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 284 285 (face (default clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 285 290 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 290 292 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 292 301 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 301 302 (face (rainbow-delimiters-depth-5-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 302 303 (face (rainbow-delimiters-depth-4-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 303 304 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 304 310 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 310 311 (face (rainbow-delimiters-depth-4-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 311 315 (face font-lock-type-face cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 315 316 (face default cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 316 325 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 325 326 (face (rainbow-delimiters-depth-5-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 326 328 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 328 329 (face (rainbow-delimiters-depth-5-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 329 330 (face (rainbow-delimiters-depth-4-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 330 331 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 331 337 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 337 338 (face (rainbow-delimiters-depth-4-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 338 345 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 345 346 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 346 350 (face font-lock-constant-face cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 350 351 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 351 358 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 358 365 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 365 373 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 373 374 (face (rainbow-delimiters-depth-4-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 374 375 (face (rainbow-delimiters-depth-3-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 375 376 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 376 380 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 380 381 (face (rainbow-delimiters-depth-3-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 381 382 (face (rainbow-delimiters-depth-4-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 382 389 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 389 390 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 390 395 (face font-lock-constant-face cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 395 396 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 396 402 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 402 408 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 408 409 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 409 430 (face font-lock-string-face cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 430 431 (face (rainbow-delimiters-depth-4-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 431 432 (face (rainbow-delimiters-depth-3-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 432 433 (face (rainbow-delimiters-depth-2-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 433 434 (face (rainbow-delimiters-depth-1-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo)) #("(defn admin?
  ([admin]
   (= admin {:username config/username
             :password config/password}))

  ([username password]
   (and (= username config/username)
        (= password config/password))))" 0 1 (face (rainbow-delimiters-depth-1-face) cider-locals nil fontified t help-echo cider--help-echo) 1 5 (face font-lock-keyword-face cider-locals nil fontified t help-echo cider--help-echo) 5 6 (cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 6 12 (face font-lock-function-name-face cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 12 13 (cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 13 15 (cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 15 16 (face (rainbow-delimiters-depth-2-face) cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 16 17 (face (rainbow-delimiters-depth-3-face) cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 17 22 (cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 22 23 (face (rainbow-delimiters-depth-3-face) cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 23 24 (cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 24 27 (cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 27 28 (face (rainbow-delimiters-depth-3-face) cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 28 36 (cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 36 37 (face (rainbow-delimiters-depth-4-face) cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 37 46 (face (clojure-keyword-face) cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 46 47 (cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 47 53 (face font-lock-type-face cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 53 54 (face default cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 54 63 (cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 63 74 (cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 74 76 (cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 76 85 (face (clojure-keyword-face) cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 85 86 (cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 86 92 (face font-lock-type-face cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 92 93 (face default cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 93 101 (cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 101 102 (face (rainbow-delimiters-depth-4-face) cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 102 103 (face (rainbow-delimiters-depth-3-face) cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 103 104 (face (rainbow-delimiters-depth-2-face) cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 104 105 (cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 105 106 (cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 106 108 (cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 108 109 (face (rainbow-delimiters-depth-2-face) cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 109 110 (face (rainbow-delimiters-depth-3-face) cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 110 127 (cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 127 128 (face (rainbow-delimiters-depth-3-face) cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 128 129 (cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 129 132 (cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 132 133 (face (rainbow-delimiters-depth-3-face) cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 133 136 (face font-lock-keyword-face cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 136 137 (cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 137 138 (face (rainbow-delimiters-depth-4-face) cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 138 140 (cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 140 149 (cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 149 155 (face font-lock-type-face cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 155 156 (face default cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 156 164 (cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 164 165 (face (rainbow-delimiters-depth-4-face) cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 165 166 (cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 166 174 (cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 174 175 (face (rainbow-delimiters-depth-4-face) cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 175 186 (cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 186 192 (face font-lock-type-face cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 192 193 (face default cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 193 201 (cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 201 202 (face (rainbow-delimiters-depth-4-face) cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 202 203 (face (rainbow-delimiters-depth-3-face) cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 203 204 (face (rainbow-delimiters-depth-2-face) cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 204 205 (face (rainbow-delimiters-depth-1-face) cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo)) #("and (= username \"db-admin\")
           (= password \"\")" 0 3 (face font-lock-keyword-face cider-locals ("init" "password" "username") help-echo cider--help-echo fontified t) 3 4 (cider-locals ("init" "password" "username") help-echo cider--help-echo fontified t) 4 5 (face (rainbow-delimiters-depth-4-face) cider-locals ("init" "password" "username") help-echo cider--help-echo fontified t) 5 16 (cider-locals ("init" "password" "username") help-echo cider--help-echo fontified t) 16 26 (face font-lock-string-face cider-locals ("init" "password" "username") help-echo cider--help-echo fontified t) 26 27 (face (rainbow-delimiters-depth-4-face) cider-locals ("init" "password" "username") help-echo cider--help-echo fontified t) 27 28 (cider-locals ("init" "password" "username") help-echo cider--help-echo fontified t) 28 39 (fontified t help-echo cider--help-echo cider-locals ("init" "password" "username")) 39 40 (fontified t help-echo cider--help-echo cider-locals ("init" "password" "username") face (rainbow-delimiters-depth-4-face)) 40 51 (fontified t help-echo cider--help-echo cider-locals ("init" "password" "username")) 51 53 (fontified t help-echo cider--help-echo cider-locals ("init" "password" "username") face font-lock-string-face) 53 54 (fontified t help-echo cider--help-echo cider-locals ("init" "password" "username") face (rainbow-delimiters-depth-4-face))) #("update{DB}syvylyze<PostGres>" 0 28 (face font-lock-string-face cider-locals ("init" "password" "username") help-echo cider--help-echo fontified t)) #("AgY4QqfSX2cxwdSrv29BcjHKdSVEUfqJA8GPN8jf" 0 40 (face font-lock-doc-face cider-locals nil fontified t help-echo cider--help-echo)) #("AgY4QqfSX2cxwdSrv29BcjHKdSVEUfqJA8GPN8jf" 0 40 (face font-lock-doc-face cider-locals nil fontified t help-echo cider--help-echo)) #("(and (= username \"admin\")
            (= password ))" 0 1 (face (rainbow-delimiters-depth-4-face) cider-locals ("defn" "uri" "conn" "demo" "password" "username" "_" "demo" "uri" "conn") help-echo cider--help-echo fontified t) 1 4 (face font-lock-keyword-face cider-locals ("defn" "uri" "conn" "demo" "password" "username" "_" "demo" "uri" "conn") help-echo cider--help-echo fontified t) 4 5 (cider-locals ("defn" "uri" "conn" "demo" "password" "username" "_" "demo" "uri" "conn") help-echo cider--help-echo fontified t) 5 6 (face (rainbow-delimiters-depth-5-face) cider-locals ("defn" "uri" "conn" "demo" "password" "username" "_" "demo" "uri" "conn") help-echo cider--help-echo fontified t) 6 17 (cider-locals ("defn" "uri" "conn" "demo" "password" "username" "_" "demo" "uri" "conn") help-echo cider--help-echo fontified t) 17 24 (face font-lock-string-face cider-locals ("defn" "uri" "conn" "demo" "password" "username" "_" "demo" "uri" "conn") help-echo cider--help-echo fontified t) 24 25 (face (rainbow-delimiters-depth-5-face) cider-locals ("defn" "uri" "conn" "demo" "password" "username" "_" "demo" "uri" "conn") help-echo cider--help-echo fontified t) 25 26 (cider-locals ("defn" "uri" "conn" "demo" "password" "username" "_" "demo" "uri" "conn") help-echo cider--help-echo fontified t) 26 38 (cider-locals ("defn" "uri" "conn" "demo" "password" "username" "_" "demo" "uri" "conn") help-echo cider--help-echo fontified t) 38 39 (face (rainbow-delimiters-depth-5-face) cider-locals ("defn" "uri" "conn" "demo" "password" "username" "_" "demo" "uri" "conn") help-echo cider--help-echo fontified t) 39 50 (cider-locals ("defn" "uri" "conn" "demo" "password" "username" "_" "demo" "uri" "conn") help-echo cider--help-echo fontified t) 50 51 (face (rainbow-delimiters-depth-5-face) cider-locals ("defn" "uri" "conn" "demo" "password" "username" "_" "demo" "uri" "conn") help-echo cider--help-echo fontified t) 51 52 (face (rainbow-delimiters-depth-4-face) cider-locals ("defn" "uri" "conn" "demo" "password" "username" "_" "demo" "uri" "conn") help-echo cider--help-echo fontified t)) #("\"AgY4QqfSX2cxwdSrv29BcjHKdSVEUfqJA8GPN8jf\"" 0 42 (face font-lock-string-face cider-locals ("defn" "uri" "conn" "demo" "password" "username" "_" "demo" "uri" "conn") help-echo cider--help-echo fontified t)) #(";;; ============================user/password/update============================


(defn password [{:keys [auth password]}]
  (auth/authorize-and-respond auth db/password password))
" 0 4 (face font-lock-comment-delimiter-face cider-locals nil help-echo cider--help-echo fontified t) 4 81 (face font-lock-comment-face cider-locals nil help-echo cider--help-echo fontified t) 81 83 (cider-locals nil help-echo cider--help-echo fontified t) 83 84 (face (rainbow-delimiters-depth-1-face) cider-locals nil help-echo cider--help-echo fontified t) 84 88 (face font-lock-keyword-face cider-locals nil help-echo cider--help-echo fontified t) 88 89 (cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 89 97 (face font-lock-function-name-face cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 97 98 (cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 98 99 (face (rainbow-delimiters-depth-2-face) cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 99 100 (face (rainbow-delimiters-depth-3-face) cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 100 105 (face (clojure-keyword-face) cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 105 106 (cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 106 107 (face (rainbow-delimiters-depth-4-face) cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 107 120 (cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 120 121 (face (rainbow-delimiters-depth-4-face) cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 121 122 (face (rainbow-delimiters-depth-3-face) cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 122 123 (face (rainbow-delimiters-depth-2-face) cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 123 126 (cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 126 127 (face (rainbow-delimiters-depth-2-face) cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 127 131 (face font-lock-type-face cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 131 132 (face default cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 132 159 (cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 159 161 (face font-lock-type-face cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 161 162 (face default cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 162 179 (cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 179 180 (face (rainbow-delimiters-depth-2-face) cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 180 181 (face (rainbow-delimiters-depth-1-face) cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 181 182 (cider-locals nil help-echo cider--help-echo fontified t)) #(";;; ============================user/password/update============================


(defn password [{:keys [auth password]}]
  (auth/authorize-and-respond auth db/password password))
" 0 4 (face font-lock-comment-delimiter-face cider-locals nil help-echo cider--help-echo fontified t) 4 81 (face font-lock-comment-face cider-locals nil help-echo cider--help-echo fontified t) 81 83 (cider-locals nil help-echo cider--help-echo fontified t) 83 84 (face (rainbow-delimiters-depth-1-face) cider-locals nil help-echo cider--help-echo fontified t) 84 88 (face font-lock-keyword-face cider-locals nil help-echo cider--help-echo fontified t) 88 89 (cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 89 97 (face font-lock-function-name-face cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 97 98 (cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 98 99 (face (rainbow-delimiters-depth-2-face) cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 99 100 (face (rainbow-delimiters-depth-3-face) cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 100 105 (face (clojure-keyword-face) cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 105 106 (cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 106 107 (face (rainbow-delimiters-depth-4-face) cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 107 120 (cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 120 121 (face (rainbow-delimiters-depth-4-face) cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 121 122 (face (rainbow-delimiters-depth-3-face) cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 122 123 (face (rainbow-delimiters-depth-2-face) cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 123 126 (cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 126 127 (face (rainbow-delimiters-depth-2-face) cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 127 131 (face font-lock-type-face cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 131 132 (face default cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 132 159 (cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 159 161 (face font-lock-type-face cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 161 162 (face default cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 162 179 (cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 179 180 (face (rainbow-delimiters-depth-2-face) cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 180 181 (face (rainbow-delimiters-depth-1-face) cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 181 182 (cider-locals nil help-echo cider--help-echo fontified t)) #("(s/defschema SendApiKey
  {:result          s/Bool
   (s/optional-key
     :apiKey)       s/Str
   (s/optional-key
     :error)        s/Str})


" 0 1 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-1-face)) 1 2 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 2 3 (help-echo cider--help-echo fontified t cider-locals nil face default) 3 12 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-keyword-face) 12 13 (help-echo cider--help-echo fontified t cider-locals nil) 13 23 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-function-name-face) 23 24 (help-echo cider--help-echo fontified t cider-locals nil) 24 26 (help-echo cider--help-echo fontified t cider-locals nil) 26 27 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-2-face)) 27 34 (help-echo cider--help-echo fontified t cider-locals nil face (clojure-keyword-face)) 34 44 (help-echo cider--help-echo fontified t cider-locals nil) 44 45 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 45 46 (help-echo cider--help-echo fontified t cider-locals nil face default) 46 50 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 50 51 (help-echo cider--help-echo fontified t cider-locals nil) 51 54 (help-echo cider--help-echo fontified t cider-locals nil) 54 55 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 55 56 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 56 57 (help-echo cider--help-echo fontified t cider-locals nil face default) 57 70 (help-echo cider--help-echo fontified t cider-locals nil) 70 75 (help-echo cider--help-echo fontified t cider-locals nil) 75 82 (help-echo cider--help-echo fontified t cider-locals nil face (clojure-keyword-face)) 82 83 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 83 90 (help-echo cider--help-echo fontified t cider-locals nil) 90 91 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 91 92 (help-echo cider--help-echo fontified t cider-locals nil face default) 92 95 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 95 96 (help-echo cider--help-echo fontified t cider-locals nil) 96 99 (help-echo cider--help-echo fontified t cider-locals nil) 99 100 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 100 101 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 101 102 (help-echo cider--help-echo fontified t cider-locals nil face default) 102 115 (help-echo cider--help-echo fontified t cider-locals nil) 115 120 (help-echo cider--help-echo fontified t cider-locals nil) 120 126 (help-echo cider--help-echo fontified t cider-locals nil face (clojure-keyword-face)) 126 127 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 127 135 (help-echo cider--help-echo fontified t cider-locals nil) 135 136 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 136 137 (help-echo cider--help-echo fontified t cider-locals nil face default) 137 140 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 140 141 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-2-face)) 141 142 (rear-nonsticky t help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-1-face)) 142 143 (help-echo cider--help-echo fontified t cider-locals nil) 143 144 (cider-locals nil fontified t help-echo cider--help-echo) 144 145 (help-echo cider--help-echo fontified t cider-locals nil)) #(";;; ============================PUT user/password/update========================


(s/defschema UpdatePassword
  {:password s/Str
   :auth     Auth})

(s/defschema SendApiKey
  {:result          s/Bool
   (s/optional-key
     :apiKey)       s/Str
   (s/optional-key
     :error)        s/Str})" 0 4 (face font-lock-comment-delimiter-face cider-locals nil help-echo cider--help-echo fontified t) 4 81 (face font-lock-comment-face cider-locals nil help-echo cider--help-echo fontified t) 81 83 (cider-locals nil help-echo cider--help-echo fontified t) 83 84 (face (rainbow-delimiters-depth-1-face) cider-locals nil help-echo cider--help-echo fontified t) 84 85 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 85 86 (face default cider-locals nil help-echo cider--help-echo fontified t) 86 95 (face font-lock-keyword-face cider-locals nil help-echo cider--help-echo fontified t) 95 96 (cider-locals nil help-echo cider--help-echo fontified t) 96 110 (face font-lock-function-name-face cider-locals nil help-echo cider--help-echo fontified t) 110 111 (cider-locals nil help-echo cider--help-echo fontified t) 111 113 (cider-locals nil help-echo cider--help-echo fontified t) 113 114 (face (rainbow-delimiters-depth-2-face) cider-locals nil help-echo cider--help-echo fontified t) 114 123 (face (clojure-keyword-face) cider-locals nil help-echo cider--help-echo fontified t) 123 124 (cider-locals nil help-echo cider--help-echo fontified t) 124 125 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 125 126 (face default cider-locals nil help-echo cider--help-echo fontified t) 126 129 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 129 130 (cider-locals nil help-echo cider--help-echo fontified t) 130 133 (cider-locals nil help-echo cider--help-echo fontified t) 133 138 (face (clojure-keyword-face) cider-locals nil help-echo cider--help-echo fontified t) 138 143 (cider-locals nil help-echo cider--help-echo fontified t) 143 147 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 147 148 (face (rainbow-delimiters-depth-2-face) cider-locals nil help-echo cider--help-echo fontified t) 148 149 (face (rainbow-delimiters-depth-1-face) cider-locals nil help-echo cider--help-echo fontified t) 149 150 (cider-locals nil help-echo cider--help-echo fontified t) 150 151 (cider-locals nil help-echo cider--help-echo fontified t) 151 152 (face (rainbow-delimiters-depth-1-face) cider-locals nil help-echo cider--help-echo fontified t) 152 153 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 153 154 (face default cider-locals nil help-echo cider--help-echo fontified t) 154 163 (face font-lock-keyword-face cider-locals nil help-echo cider--help-echo fontified t) 163 164 (cider-locals nil help-echo cider--help-echo fontified t) 164 174 (face font-lock-function-name-face cider-locals nil help-echo cider--help-echo fontified t) 174 175 (cider-locals nil help-echo cider--help-echo fontified t) 175 177 (cider-locals nil help-echo cider--help-echo fontified t) 177 178 (face (rainbow-delimiters-depth-2-face) cider-locals nil help-echo cider--help-echo fontified t) 178 185 (face (clojure-keyword-face) cider-locals nil help-echo cider--help-echo fontified t) 185 195 (cider-locals nil help-echo cider--help-echo fontified t) 195 196 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 196 197 (face default cider-locals nil help-echo cider--help-echo fontified t) 197 201 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 201 202 (cider-locals nil help-echo cider--help-echo fontified t) 202 205 (cider-locals nil help-echo cider--help-echo fontified t) 205 206 (face (rainbow-delimiters-depth-3-face) cider-locals nil help-echo cider--help-echo fontified t) 206 207 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 207 208 (face default cider-locals nil help-echo cider--help-echo fontified t) 208 221 (cider-locals nil help-echo cider--help-echo fontified t) 221 226 (cider-locals nil help-echo cider--help-echo fontified t) 226 233 (face (clojure-keyword-face) cider-locals nil help-echo cider--help-echo fontified t) 233 234 (face (rainbow-delimiters-depth-3-face) cider-locals nil help-echo cider--help-echo fontified t) 234 241 (cider-locals nil help-echo cider--help-echo fontified t) 241 242 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 242 243 (face default cider-locals nil help-echo cider--help-echo fontified t) 243 246 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 246 247 (cider-locals nil help-echo cider--help-echo fontified t) 247 250 (cider-locals nil help-echo cider--help-echo fontified t) 250 251 (face (rainbow-delimiters-depth-3-face) cider-locals nil help-echo cider--help-echo fontified t) 251 252 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 252 253 (face default cider-locals nil help-echo cider--help-echo fontified t) 253 266 (cider-locals nil help-echo cider--help-echo fontified t) 266 271 (cider-locals nil help-echo cider--help-echo fontified t) 271 277 (face (clojure-keyword-face) cider-locals nil help-echo cider--help-echo fontified t) 277 278 (face (rainbow-delimiters-depth-3-face) cider-locals nil help-echo cider--help-echo fontified t) 278 286 (cider-locals nil help-echo cider--help-echo fontified t) 286 287 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 287 288 (face default cider-locals nil help-echo cider--help-echo fontified t) 288 291 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 291 292 (face (rainbow-delimiters-depth-2-face) cider-locals nil help-echo cider--help-echo fontified t) 292 293 (face (rainbow-delimiters-depth-1-face) cider-locals nil help-echo cider--help-echo fontified t)) #(";;; ============================PUT user/password/update========================


(s/defschema UpdatePassword
  {:password s/Str
   :auth     Auth})

(s/defschema SendApiKey
  {:result          s/Bool
   (s/optional-key
     :apiKey)       s/Str
   (s/optional-key
     :error)        s/Str})" 0 4 (face font-lock-comment-delimiter-face cider-locals nil help-echo cider--help-echo fontified t) 4 81 (face font-lock-comment-face cider-locals nil help-echo cider--help-echo fontified t) 81 83 (cider-locals nil help-echo cider--help-echo fontified t) 83 84 (face (rainbow-delimiters-depth-1-face) cider-locals nil help-echo cider--help-echo fontified t) 84 85 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 85 86 (face default cider-locals nil help-echo cider--help-echo fontified t) 86 95 (face font-lock-keyword-face cider-locals nil help-echo cider--help-echo fontified t) 95 96 (cider-locals nil help-echo cider--help-echo fontified t) 96 110 (face font-lock-function-name-face cider-locals nil help-echo cider--help-echo fontified t) 110 111 (cider-locals nil help-echo cider--help-echo fontified t) 111 113 (cider-locals nil help-echo cider--help-echo fontified t) 113 114 (face (rainbow-delimiters-depth-2-face) cider-locals nil help-echo cider--help-echo fontified t) 114 123 (face (clojure-keyword-face) cider-locals nil help-echo cider--help-echo fontified t) 123 124 (cider-locals nil help-echo cider--help-echo fontified t) 124 125 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 125 126 (face default cider-locals nil help-echo cider--help-echo fontified t) 126 129 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 129 130 (cider-locals nil help-echo cider--help-echo fontified t) 130 133 (cider-locals nil help-echo cider--help-echo fontified t) 133 138 (face (clojure-keyword-face) cider-locals nil help-echo cider--help-echo fontified t) 138 143 (cider-locals nil help-echo cider--help-echo fontified t) 143 147 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 147 148 (face (rainbow-delimiters-depth-2-face) cider-locals nil help-echo cider--help-echo fontified t) 148 149 (face (rainbow-delimiters-depth-1-face) cider-locals nil help-echo cider--help-echo fontified t) 149 150 (cider-locals nil help-echo cider--help-echo fontified t) 150 151 (cider-locals nil help-echo cider--help-echo fontified t) 151 152 (face (rainbow-delimiters-depth-1-face) cider-locals nil help-echo cider--help-echo fontified t) 152 153 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 153 154 (face default cider-locals nil help-echo cider--help-echo fontified t) 154 163 (face font-lock-keyword-face cider-locals nil help-echo cider--help-echo fontified t) 163 164 (cider-locals nil help-echo cider--help-echo fontified t) 164 174 (face font-lock-function-name-face cider-locals nil help-echo cider--help-echo fontified t) 174 175 (cider-locals nil help-echo cider--help-echo fontified t) 175 177 (cider-locals nil help-echo cider--help-echo fontified t) 177 178 (face (rainbow-delimiters-depth-2-face) cider-locals nil help-echo cider--help-echo fontified t) 178 185 (face (clojure-keyword-face) cider-locals nil help-echo cider--help-echo fontified t) 185 195 (cider-locals nil help-echo cider--help-echo fontified t) 195 196 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 196 197 (face default cider-locals nil help-echo cider--help-echo fontified t) 197 201 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 201 202 (cider-locals nil help-echo cider--help-echo fontified t) 202 205 (cider-locals nil help-echo cider--help-echo fontified t) 205 206 (face (rainbow-delimiters-depth-3-face) cider-locals nil help-echo cider--help-echo fontified t) 206 207 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 207 208 (face default cider-locals nil help-echo cider--help-echo fontified t) 208 221 (cider-locals nil help-echo cider--help-echo fontified t) 221 226 (cider-locals nil help-echo cider--help-echo fontified t) 226 233 (face (clojure-keyword-face) cider-locals nil help-echo cider--help-echo fontified t) 233 234 (face (rainbow-delimiters-depth-3-face) cider-locals nil help-echo cider--help-echo fontified t) 234 241 (cider-locals nil help-echo cider--help-echo fontified t) 241 242 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 242 243 (face default cider-locals nil help-echo cider--help-echo fontified t) 243 246 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 246 247 (cider-locals nil help-echo cider--help-echo fontified t) 247 250 (cider-locals nil help-echo cider--help-echo fontified t) 250 251 (face (rainbow-delimiters-depth-3-face) cider-locals nil help-echo cider--help-echo fontified t) 251 252 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 252 253 (face default cider-locals nil help-echo cider--help-echo fontified t) 253 266 (cider-locals nil help-echo cider--help-echo fontified t) 266 271 (cider-locals nil help-echo cider--help-echo fontified t) 271 277 (face (clojure-keyword-face) cider-locals nil help-echo cider--help-echo fontified t) 277 278 (face (rainbow-delimiters-depth-3-face) cider-locals nil help-echo cider--help-echo fontified t) 278 286 (cider-locals nil help-echo cider--help-echo fontified t) 286 287 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 287 288 (face default cider-locals nil help-echo cider--help-echo fontified t) 288 291 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 291 292 (face (rainbow-delimiters-depth-2-face) cider-locals nil help-echo cider--help-echo fontified t) 292 293 (face (rainbow-delimiters-depth-1-face) cider-locals nil help-echo cider--help-echo fontified t)) #("SendApiKey" 0 10 (face font-lock-type-face cider-locals ("c/api") fontified t help-echo cider--help-echo)) #(";;; ====================PUT user/password/update================================


               (c/PUT \"/v0.1/user/password/update\" []
                      :return schema/SendApiKey
                      :body [password schema/UpdatePassword]
                      :summary \"Updates the password for a user.\"
                      (write/password password))" 0 4 (face font-lock-comment-delimiter-face cider-locals ("c/api") help-echo cider--help-echo fontified t) 4 32 (face font-lock-comment-face cider-locals ("c/api") help-echo cider--help-echo fontified t) 32 41 (face font-lock-comment-face cider-locals ("c/api") help-echo cider--help-echo fontified t) 41 48 (face font-lock-comment-face cider-locals ("c/api") help-echo cider--help-echo fontified t) 48 81 (face font-lock-comment-face cider-locals ("c/api") help-echo cider--help-echo fontified t) 81 82 (cider-locals ("c/api") help-echo cider--help-echo fontified t) 82 98 (cider-locals ("c/api") fontified t help-echo cider--help-echo) 98 99 (face (rainbow-delimiters-depth-4-face) cider-locals ("c/api") fontified t help-echo cider--help-echo) 99 100 (face font-lock-type-face cider-locals ("c/api") fontified t help-echo cider--help-echo) 100 101 (face default cider-locals ("c/api") fontified t help-echo cider--help-echo) 101 104 (face font-lock-constant-face cider-locals ("c/api") fontified t help-echo cider--help-echo) 104 105 (cider-locals ("c/api") fontified t help-echo cider--help-echo) 105 133 (face font-lock-string-face cider-locals ("c/api") fontified t help-echo cider--help-echo) 133 134 (cider-locals ("c/api") fontified t help-echo cider--help-echo) 134 135 (face (rainbow-delimiters-depth-5-face) cider-locals ("c/api") fontified t help-echo cider--help-echo) 135 136 (face (rainbow-delimiters-depth-5-face) cider-locals ("c/api") fontified t help-echo cider--help-echo) 136 137 (cider-locals ("c/api") fontified t help-echo cider--help-echo) 137 159 (cider-locals ("c/api") fontified t help-echo cider--help-echo) 159 166 (face (clojure-keyword-face) cider-locals ("c/api") fontified t help-echo cider--help-echo) 166 167 (cider-locals ("c/api") fontified t help-echo cider--help-echo) 167 173 (face font-lock-type-face cider-locals ("c/api") fontified t help-echo cider--help-echo) 173 174 (face default cider-locals ("c/api") fontified t help-echo cider--help-echo) 174 184 (face font-lock-type-face cider-locals ("c/api") fontified t help-echo cider--help-echo) 184 185 (cider-locals ("c/api") fontified t help-echo cider--help-echo) 185 207 (cider-locals ("c/api") fontified t help-echo cider--help-echo) 207 212 (face (clojure-keyword-face) cider-locals ("c/api") fontified t help-echo cider--help-echo) 212 213 (cider-locals ("c/api") fontified t help-echo cider--help-echo) 213 214 (face (rainbow-delimiters-depth-5-face) cider-locals ("c/api") fontified t help-echo cider--help-echo) 214 223 (cider-locals ("c/api") fontified t help-echo cider--help-echo) 223 229 (face font-lock-type-face cider-locals ("c/api") fontified t help-echo cider--help-echo) 229 230 (face default cider-locals ("c/api") fontified t help-echo cider--help-echo) 230 244 (face font-lock-type-face cider-locals ("c/api") fontified t help-echo cider--help-echo) 244 245 (face (rainbow-delimiters-depth-5-face) cider-locals ("c/api") fontified t help-echo cider--help-echo) 245 246 (cider-locals ("c/api") fontified t help-echo cider--help-echo) 246 268 (cider-locals ("c/api") fontified t help-echo cider--help-echo) 268 276 (face (clojure-keyword-face) cider-locals ("c/api") fontified t help-echo cider--help-echo) 276 277 (cider-locals ("c/api") fontified t help-echo cider--help-echo) 277 311 (face font-lock-string-face cider-locals ("c/api") fontified t help-echo cider--help-echo) 311 334 (cider-locals ("c/api") fontified t help-echo cider--help-echo) 334 335 (face (rainbow-delimiters-depth-5-face) cider-locals ("c/api") fontified t help-echo cider--help-echo) 335 340 (face font-lock-type-face cider-locals ("c/api") fontified t help-echo cider--help-echo) 340 341 (face default cider-locals ("c/api") fontified t help-echo cider--help-echo) 341 358 (cider-locals ("c/api") fontified t help-echo cider--help-echo) 358 359 (face (rainbow-delimiters-depth-5-face) cider-locals ("c/api") fontified t help-echo cider--help-echo) 359 360 (face (rainbow-delimiters-depth-4-face) cider-locals ("c/api") fontified t help-echo cider--help-echo)) "|Q1I_o#Q4+xhYf[z.E}Z" #("(gen-password 20)" 0 1 (face (rainbow-delimiters-depth-6-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx") help-echo cider--help-echo fontified t) 1 16 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx") help-echo cider--help-echo fontified t) 16 17 (face (rainbow-delimiters-depth-6-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx") help-echo cider--help-echo fontified t)) "pomodoro mint applet" "8736960000" #(";;; ============================user/password/update============================" 0 4 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-delimiter-face) 4 36 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 36 37 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 37 38 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 38 39 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 39 40 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 40 41 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 41 42 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 42 43 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 43 44 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 44 45 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 45 46 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 46 47 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 47 48 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 48 49 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 49 80 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face)) #(";;; ===" 0 4 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-delimiter-face) 4 7 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face)) #(";;; ==================================user======================================


(defn user [{:keys [auth user]}]
  (auth/authorize-and-respond auth db/user user))" 0 4 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-delimiter-face) 4 81 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 81 83 (fontified t help-echo cider--help-echo cider-locals nil) 83 84 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-1-face)) 84 88 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-keyword-face) 88 89 (fontified t help-echo cider--help-echo cider-locals ("user" "auth")) 89 93 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face font-lock-function-name-face) 93 94 (fontified t help-echo cider--help-echo cider-locals ("user" "auth")) 94 95 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face (rainbow-delimiters-depth-2-face)) 95 96 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face (rainbow-delimiters-depth-3-face)) 96 101 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face (clojure-keyword-face)) 101 102 (fontified t help-echo cider--help-echo cider-locals ("user" "auth")) 102 103 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face (rainbow-delimiters-depth-4-face)) 103 112 (fontified t help-echo cider--help-echo cider-locals ("user" "auth")) 112 113 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face (rainbow-delimiters-depth-4-face)) 113 114 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face (rainbow-delimiters-depth-3-face)) 114 115 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face (rainbow-delimiters-depth-2-face)) 115 118 (fontified t help-echo cider--help-echo cider-locals ("user" "auth")) 118 119 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face (rainbow-delimiters-depth-2-face)) 119 123 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face font-lock-type-face) 123 124 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face default) 124 151 (fontified t help-echo cider--help-echo cider-locals ("user" "auth")) 151 153 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face font-lock-type-face) 153 154 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face default) 154 163 (fontified t help-echo cider--help-echo cider-locals ("user" "auth")) 163 164 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face (rainbow-delimiters-depth-2-face)) 164 165 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face (rainbow-delimiters-depth-1-face))) #(";;; ==================================user======================================


(defn user [{:keys [auth user]}]
  (auth/authorize-and-respond auth db/user user))" 0 4 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-delimiter-face) 4 81 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 81 83 (fontified t help-echo cider--help-echo cider-locals nil) 83 84 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-1-face)) 84 88 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-keyword-face) 88 89 (fontified t help-echo cider--help-echo cider-locals ("user" "auth")) 89 93 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face font-lock-function-name-face) 93 94 (fontified t help-echo cider--help-echo cider-locals ("user" "auth")) 94 95 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face (rainbow-delimiters-depth-2-face)) 95 96 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face (rainbow-delimiters-depth-3-face)) 96 101 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face (clojure-keyword-face)) 101 102 (fontified t help-echo cider--help-echo cider-locals ("user" "auth")) 102 103 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face (rainbow-delimiters-depth-4-face)) 103 112 (fontified t help-echo cider--help-echo cider-locals ("user" "auth")) 112 113 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face (rainbow-delimiters-depth-4-face)) 113 114 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face (rainbow-delimiters-depth-3-face)) 114 115 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face (rainbow-delimiters-depth-2-face)) 115 118 (fontified t help-echo cider--help-echo cider-locals ("user" "auth")) 118 119 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face (rainbow-delimiters-depth-2-face)) 119 123 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face font-lock-type-face) 123 124 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face default) 124 151 (fontified t help-echo cider--help-echo cider-locals ("user" "auth")) 151 153 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face font-lock-type-face) 153 154 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face default) 154 163 (fontified t help-echo cider--help-echo cider-locals ("user" "auth")) 163 164 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face (rainbow-delimiters-depth-2-face)) 164 165 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face (rainbow-delimiters-depth-1-face))) #("(s/defschema OptionalUser
  {(s/optional-key
     :firstName)    s/Str
   (s/optional-key
     :lastName)     s/Str
   (s/optional-key
     :title)        s/Str
   :phone           s/Str
   (s/optional-key
     :email)        s/Str
   (s/optional-key
     :orgUnit)      s/Str
   (s/optional-key
     :state)        s/Str
   (s/optional-key
     :password)     s/Str})" 0 1 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-1-face)) 1 2 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 2 3 (fontified t help-echo cider--help-echo cider-locals nil face default) 3 12 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-keyword-face) 12 13 (fontified t help-echo cider--help-echo cider-locals nil) 13 25 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-function-name-face) 25 28 (fontified t help-echo cider--help-echo cider-locals nil) 28 29 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-2-face)) 29 30 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-3-face)) 30 31 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 31 32 (fontified t help-echo cider--help-echo cider-locals nil face default) 32 45 (fontified t help-echo cider--help-echo cider-locals nil) 45 50 (fontified t help-echo cider--help-echo cider-locals nil) 50 60 (fontified t help-echo cider--help-echo cider-locals nil face (clojure-keyword-face)) 60 61 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-3-face)) 61 65 (fontified t help-echo cider--help-echo cider-locals nil) 65 66 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 66 67 (fontified t help-echo cider--help-echo cider-locals nil face default) 67 70 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 70 71 (fontified t help-echo cider--help-echo cider-locals nil) 71 74 (fontified t help-echo cider--help-echo cider-locals nil) 74 75 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-3-face)) 75 76 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 76 77 (fontified t help-echo cider--help-echo cider-locals nil face default) 77 90 (fontified t help-echo cider--help-echo cider-locals nil) 90 95 (fontified t help-echo cider--help-echo cider-locals nil) 95 104 (fontified t help-echo cider--help-echo cider-locals nil face (clojure-keyword-face)) 104 105 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-3-face)) 105 110 (fontified t help-echo cider--help-echo cider-locals nil) 110 111 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 111 112 (fontified t help-echo cider--help-echo cider-locals nil face default) 112 115 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 115 119 (fontified t help-echo cider--help-echo cider-locals nil) 119 120 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-3-face)) 120 121 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 121 122 (fontified t help-echo cider--help-echo cider-locals nil face default) 122 140 (fontified t help-echo cider--help-echo cider-locals nil) 140 146 (fontified t help-echo cider--help-echo cider-locals nil face (clojure-keyword-face)) 146 147 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-3-face)) 147 155 (fontified t help-echo cider--help-echo cider-locals nil) 155 156 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 156 157 (fontified t help-echo cider--help-echo cider-locals nil face default) 157 160 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 160 164 (fontified t help-echo cider--help-echo cider-locals nil) 164 170 (fontified t help-echo cider--help-echo cider-locals nil face (clojure-keyword-face)) 170 181 (fontified t help-echo cider--help-echo cider-locals nil) 181 182 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 182 183 (fontified t help-echo cider--help-echo cider-locals nil face default) 183 186 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 186 187 (fontified t help-echo cider--help-echo cider-locals nil) 187 190 (fontified t help-echo cider--help-echo cider-locals nil) 190 191 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-3-face)) 191 192 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 192 193 (fontified t help-echo cider--help-echo cider-locals nil face default) 193 206 (fontified t help-echo cider--help-echo cider-locals nil) 206 211 (fontified t help-echo cider--help-echo cider-locals nil) 211 217 (fontified t help-echo cider--help-echo cider-locals nil face (clojure-keyword-face)) 217 218 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-3-face)) 218 226 (fontified t help-echo cider--help-echo cider-locals nil) 226 227 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 227 228 (fontified t help-echo cider--help-echo cider-locals nil face default) 228 231 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 231 232 (fontified t help-echo cider--help-echo cider-locals nil) 232 235 (fontified t help-echo cider--help-echo cider-locals nil) 235 236 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-3-face)) 236 237 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 237 238 (fontified t help-echo cider--help-echo cider-locals nil face default) 238 251 (fontified t help-echo cider--help-echo cider-locals nil) 251 256 (fontified t help-echo cider--help-echo cider-locals nil) 256 264 (fontified t help-echo cider--help-echo cider-locals nil face (clojure-keyword-face)) 264 265 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-3-face)) 265 271 (fontified t help-echo cider--help-echo cider-locals nil) 271 272 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 272 273 (fontified t help-echo cider--help-echo cider-locals nil face default) 273 276 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 276 280 (fontified t help-echo cider--help-echo cider-locals nil) 280 281 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-3-face)) 281 282 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 282 283 (fontified t help-echo cider--help-echo cider-locals nil face default) 283 296 (fontified t help-echo cider--help-echo cider-locals nil) 296 301 (fontified t help-echo cider--help-echo cider-locals nil) 301 307 (fontified t help-echo cider--help-echo cider-locals nil face (clojure-keyword-face)) 307 308 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-3-face)) 308 316 (fontified t help-echo cider--help-echo cider-locals nil) 316 317 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 317 318 (fontified t help-echo cider--help-echo cider-locals nil face default) 318 321 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 321 322 (fontified t help-echo cider--help-echo cider-locals nil) 322 325 (fontified t help-echo cider--help-echo cider-locals nil) 325 326 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-3-face)) 326 327 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 327 328 (fontified t help-echo cider--help-echo cider-locals nil face default) 328 341 (fontified t help-echo cider--help-echo cider-locals nil) 341 346 (fontified t help-echo cider--help-echo cider-locals nil) 346 355 (fontified t help-echo cider--help-echo cider-locals nil face (clojure-keyword-face)) 355 356 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-3-face)) 356 361 (fontified t help-echo cider--help-echo cider-locals nil) 361 362 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 362 363 (fontified t help-echo cider--help-echo cider-locals nil face default) 363 366 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 366 367 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-2-face)) 367 368 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-1-face))) #(";;; ================================PUT user====================================


(s/defschema OptionalUser
  {(s/optional-key
     :firstName)    s/Str
   (s/optional-key
     :lastName)     s/Str
   (s/optional-key
     :title)        s/Str
   :phone           s/Str
   (s/optional-key
     :email)        s/Str
   (s/optional-key
     :orgUnit)      s/Str
   (s/optional-key
     :state)        s/Str
   (s/optional-key
     :password)     s/Str})

(s/defschema AddUser
  {:user  OptionalUser
   :auth  Auth})" 0 4 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-delimiter-face) 4 81 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face) 81 83 (help-echo cider--help-echo fontified t cider-locals nil) 83 84 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-1-face)) 84 85 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 85 86 (help-echo cider--help-echo fontified t cider-locals nil face default) 86 95 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-keyword-face) 95 96 (help-echo cider--help-echo fontified t cider-locals nil) 96 108 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-function-name-face) 108 111 (help-echo cider--help-echo fontified t cider-locals nil) 111 112 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-2-face)) 112 113 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 113 114 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 114 115 (help-echo cider--help-echo fontified t cider-locals nil face default) 115 128 (help-echo cider--help-echo fontified t cider-locals nil) 128 133 (help-echo cider--help-echo fontified t cider-locals nil) 133 143 (help-echo cider--help-echo fontified t cider-locals nil face (clojure-keyword-face)) 143 144 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 144 148 (help-echo cider--help-echo fontified t cider-locals nil) 148 149 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 149 150 (help-echo cider--help-echo fontified t cider-locals nil face default) 150 153 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 153 154 (help-echo cider--help-echo fontified t cider-locals nil) 154 157 (help-echo cider--help-echo fontified t cider-locals nil) 157 158 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 158 159 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 159 160 (help-echo cider--help-echo fontified t cider-locals nil face default) 160 173 (help-echo cider--help-echo fontified t cider-locals nil) 173 178 (help-echo cider--help-echo fontified t cider-locals nil) 178 187 (help-echo cider--help-echo fontified t cider-locals nil face (clojure-keyword-face)) 187 188 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 188 193 (help-echo cider--help-echo fontified t cider-locals nil) 193 194 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 194 195 (help-echo cider--help-echo fontified t cider-locals nil face default) 195 198 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 198 202 (help-echo cider--help-echo fontified t cider-locals nil) 202 203 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 203 204 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 204 205 (help-echo cider--help-echo fontified t cider-locals nil face default) 205 223 (help-echo cider--help-echo fontified t cider-locals nil) 223 229 (help-echo cider--help-echo fontified t cider-locals nil face (clojure-keyword-face)) 229 230 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 230 238 (help-echo cider--help-echo fontified t cider-locals nil) 238 239 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 239 240 (help-echo cider--help-echo fontified t cider-locals nil face default) 240 243 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 243 247 (help-echo cider--help-echo fontified t cider-locals nil) 247 253 (help-echo cider--help-echo fontified t cider-locals nil face (clojure-keyword-face)) 253 264 (help-echo cider--help-echo fontified t cider-locals nil) 264 265 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 265 266 (help-echo cider--help-echo fontified t cider-locals nil face default) 266 269 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 269 270 (help-echo cider--help-echo fontified t cider-locals nil) 270 273 (help-echo cider--help-echo fontified t cider-locals nil) 273 274 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 274 275 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 275 276 (help-echo cider--help-echo fontified t cider-locals nil face default) 276 289 (help-echo cider--help-echo fontified t cider-locals nil) 289 294 (help-echo cider--help-echo fontified t cider-locals nil) 294 300 (help-echo cider--help-echo fontified t cider-locals nil face (clojure-keyword-face)) 300 301 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 301 309 (help-echo cider--help-echo fontified t cider-locals nil) 309 310 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 310 311 (help-echo cider--help-echo fontified t cider-locals nil face default) 311 314 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 314 315 (help-echo cider--help-echo fontified t cider-locals nil) 315 318 (help-echo cider--help-echo fontified t cider-locals nil) 318 319 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 319 320 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 320 321 (help-echo cider--help-echo fontified t cider-locals nil face default) 321 334 (help-echo cider--help-echo fontified t cider-locals nil) 334 339 (help-echo cider--help-echo fontified t cider-locals nil) 339 347 (help-echo cider--help-echo fontified t cider-locals nil face (clojure-keyword-face)) 347 348 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 348 354 (help-echo cider--help-echo fontified t cider-locals nil) 354 355 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 355 356 (help-echo cider--help-echo fontified t cider-locals nil face default) 356 359 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 359 363 (help-echo cider--help-echo fontified t cider-locals nil) 363 364 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 364 365 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 365 366 (help-echo cider--help-echo fontified t cider-locals nil face default) 366 379 (help-echo cider--help-echo fontified t cider-locals nil) 379 384 (help-echo cider--help-echo fontified t cider-locals nil) 384 390 (help-echo cider--help-echo fontified t cider-locals nil face (clojure-keyword-face)) 390 391 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 391 399 (help-echo cider--help-echo fontified t cider-locals nil) 399 400 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 400 401 (help-echo cider--help-echo fontified t cider-locals nil face default) 401 404 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 404 405 (help-echo cider--help-echo fontified t cider-locals nil) 405 408 (help-echo cider--help-echo fontified t cider-locals nil) 408 409 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 409 410 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 410 411 (help-echo cider--help-echo fontified t cider-locals nil face default) 411 424 (help-echo cider--help-echo fontified t cider-locals nil) 424 429 (help-echo cider--help-echo fontified t cider-locals nil) 429 438 (help-echo cider--help-echo fontified t cider-locals nil face (clojure-keyword-face)) 438 439 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 439 444 (help-echo cider--help-echo fontified t cider-locals nil) 444 445 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 445 446 (help-echo cider--help-echo fontified t cider-locals nil face default) 446 449 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 449 450 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-2-face)) 450 451 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-1-face)) 451 452 (help-echo cider--help-echo fontified t cider-locals nil) 452 453 (help-echo cider--help-echo fontified t cider-locals nil) 453 454 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-1-face)) 454 455 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 455 456 (help-echo cider--help-echo fontified t cider-locals nil face default) 456 465 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-keyword-face) 465 466 (help-echo cider--help-echo fontified t cider-locals nil) 466 473 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-function-name-face) 473 474 (help-echo cider--help-echo fontified t cider-locals nil) 474 476 (help-echo cider--help-echo fontified t cider-locals nil) 476 477 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-2-face)) 477 482 (help-echo cider--help-echo fontified t cider-locals nil face (clojure-keyword-face)) 482 484 (help-echo cider--help-echo fontified t cider-locals nil) 484 496 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 496 497 (help-echo cider--help-echo fontified t cider-locals nil) 497 500 (help-echo cider--help-echo fontified t cider-locals nil) 500 505 (help-echo cider--help-echo fontified t cider-locals nil face (clojure-keyword-face)) 505 507 (help-echo cider--help-echo fontified t cider-locals nil) 507 511 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 511 512 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-2-face)) 512 513 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-1-face))) #(";;; ================================PUT user====================================


(s/defschema OptionalUser
  {(s/optional-key
     :firstName)    s/Str
   (s/optional-key
     :lastName)     s/Str
   (s/optional-key
     :title)        s/Str
   :phone           s/Str
   (s/optional-key
     :email)        s/Str
   (s/optional-key
     :orgUnit)      s/Str
   (s/optional-key
     :state)        s/Str
   (s/optional-key
     :password)     s/Str})

(s/defschema AddUser
  {:user  OptionalUser
   :auth  Auth})" 0 4 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-delimiter-face) 4 81 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face) 81 83 (help-echo cider--help-echo fontified t cider-locals nil) 83 84 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-1-face)) 84 85 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 85 86 (help-echo cider--help-echo fontified t cider-locals nil face default) 86 95 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-keyword-face) 95 96 (help-echo cider--help-echo fontified t cider-locals nil) 96 108 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-function-name-face) 108 111 (help-echo cider--help-echo fontified t cider-locals nil) 111 112 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-2-face)) 112 113 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 113 114 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 114 115 (help-echo cider--help-echo fontified t cider-locals nil face default) 115 128 (help-echo cider--help-echo fontified t cider-locals nil) 128 133 (help-echo cider--help-echo fontified t cider-locals nil) 133 143 (help-echo cider--help-echo fontified t cider-locals nil face (clojure-keyword-face)) 143 144 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 144 148 (help-echo cider--help-echo fontified t cider-locals nil) 148 149 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 149 150 (help-echo cider--help-echo fontified t cider-locals nil face default) 150 153 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 153 154 (help-echo cider--help-echo fontified t cider-locals nil) 154 157 (help-echo cider--help-echo fontified t cider-locals nil) 157 158 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 158 159 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 159 160 (help-echo cider--help-echo fontified t cider-locals nil face default) 160 173 (help-echo cider--help-echo fontified t cider-locals nil) 173 178 (help-echo cider--help-echo fontified t cider-locals nil) 178 187 (help-echo cider--help-echo fontified t cider-locals nil face (clojure-keyword-face)) 187 188 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 188 193 (help-echo cider--help-echo fontified t cider-locals nil) 193 194 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 194 195 (help-echo cider--help-echo fontified t cider-locals nil face default) 195 198 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 198 202 (help-echo cider--help-echo fontified t cider-locals nil) 202 203 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 203 204 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 204 205 (help-echo cider--help-echo fontified t cider-locals nil face default) 205 223 (help-echo cider--help-echo fontified t cider-locals nil) 223 229 (help-echo cider--help-echo fontified t cider-locals nil face (clojure-keyword-face)) 229 230 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 230 238 (help-echo cider--help-echo fontified t cider-locals nil) 238 239 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 239 240 (help-echo cider--help-echo fontified t cider-locals nil face default) 240 243 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 243 247 (help-echo cider--help-echo fontified t cider-locals nil) 247 253 (help-echo cider--help-echo fontified t cider-locals nil face (clojure-keyword-face)) 253 264 (help-echo cider--help-echo fontified t cider-locals nil) 264 265 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 265 266 (help-echo cider--help-echo fontified t cider-locals nil face default) 266 269 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 269 270 (help-echo cider--help-echo fontified t cider-locals nil) 270 273 (help-echo cider--help-echo fontified t cider-locals nil) 273 274 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 274 275 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 275 276 (help-echo cider--help-echo fontified t cider-locals nil face default) 276 289 (help-echo cider--help-echo fontified t cider-locals nil) 289 294 (help-echo cider--help-echo fontified t cider-locals nil) 294 300 (help-echo cider--help-echo fontified t cider-locals nil face (clojure-keyword-face)) 300 301 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 301 309 (help-echo cider--help-echo fontified t cider-locals nil) 309 310 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 310 311 (help-echo cider--help-echo fontified t cider-locals nil face default) 311 314 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 314 315 (help-echo cider--help-echo fontified t cider-locals nil) 315 318 (help-echo cider--help-echo fontified t cider-locals nil) 318 319 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 319 320 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 320 321 (help-echo cider--help-echo fontified t cider-locals nil face default) 321 334 (help-echo cider--help-echo fontified t cider-locals nil) 334 339 (help-echo cider--help-echo fontified t cider-locals nil) 339 347 (help-echo cider--help-echo fontified t cider-locals nil face (clojure-keyword-face)) 347 348 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 348 354 (help-echo cider--help-echo fontified t cider-locals nil) 354 355 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 355 356 (help-echo cider--help-echo fontified t cider-locals nil face default) 356 359 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 359 363 (help-echo cider--help-echo fontified t cider-locals nil) 363 364 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 364 365 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 365 366 (help-echo cider--help-echo fontified t cider-locals nil face default) 366 379 (help-echo cider--help-echo fontified t cider-locals nil) 379 384 (help-echo cider--help-echo fontified t cider-locals nil) 384 390 (help-echo cider--help-echo fontified t cider-locals nil face (clojure-keyword-face)) 390 391 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 391 399 (help-echo cider--help-echo fontified t cider-locals nil) 399 400 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 400 401 (help-echo cider--help-echo fontified t cider-locals nil face default) 401 404 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 404 405 (help-echo cider--help-echo fontified t cider-locals nil) 405 408 (help-echo cider--help-echo fontified t cider-locals nil) 408 409 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 409 410 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 410 411 (help-echo cider--help-echo fontified t cider-locals nil face default) 411 424 (help-echo cider--help-echo fontified t cider-locals nil) 424 429 (help-echo cider--help-echo fontified t cider-locals nil) 429 438 (help-echo cider--help-echo fontified t cider-locals nil face (clojure-keyword-face)) 438 439 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 439 444 (help-echo cider--help-echo fontified t cider-locals nil) 444 445 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 445 446 (help-echo cider--help-echo fontified t cider-locals nil face default) 446 449 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 449 450 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-2-face)) 450 451 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-1-face)) 451 452 (help-echo cider--help-echo fontified t cider-locals nil) 452 453 (help-echo cider--help-echo fontified t cider-locals nil) 453 454 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-1-face)) 454 455 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 455 456 (help-echo cider--help-echo fontified t cider-locals nil face default) 456 465 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-keyword-face) 465 466 (help-echo cider--help-echo fontified t cider-locals nil) 466 473 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-function-name-face) 473 474 (help-echo cider--help-echo fontified t cider-locals nil) 474 476 (help-echo cider--help-echo fontified t cider-locals nil) 476 477 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-2-face)) 477 482 (help-echo cider--help-echo fontified t cider-locals nil face (clojure-keyword-face)) 482 484 (help-echo cider--help-echo fontified t cider-locals nil) 484 496 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 496 497 (help-echo cider--help-echo fontified t cider-locals nil) 497 500 (help-echo cider--help-echo fontified t cider-locals nil) 500 505 (help-echo cider--help-echo fontified t cider-locals nil face (clojure-keyword-face)) 505 507 (help-echo cider--help-echo fontified t cider-locals nil) 507 511 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 511 512 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-2-face)) 512 513 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-1-face))) #(";;; ================================PUT user====================================


               (c/PUT \"/v0.1/user\" []
                      :return schema/Credentials
                      :body [user-details schema/AddUser]
                      :summary \"Returns the user data.\"
                      (write/user user-details))
" 0 4 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-comment-delimiter-face) 4 81 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-comment-face) 81 98 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 98 99 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-4-face)) 99 100 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 100 101 (fontified t help-echo cider--help-echo cider-locals ("c/api") face default) 101 104 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-constant-face) 104 105 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 105 117 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-string-face) 117 118 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 118 119 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 119 120 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 120 143 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 143 150 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (clojure-keyword-face)) 150 151 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 151 157 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 157 158 (fontified t help-echo cider--help-echo cider-locals ("c/api") face default) 158 169 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 169 192 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 192 197 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (clojure-keyword-face)) 197 198 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 198 199 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 199 212 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 212 218 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 218 219 (fontified t help-echo cider--help-echo cider-locals ("c/api") face default) 219 226 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 226 227 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 227 250 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 250 258 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (clojure-keyword-face)) 258 259 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 259 283 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-string-face) 283 284 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 284 306 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 306 307 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 307 312 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 312 313 (fontified t help-echo cider--help-echo cider-locals ("c/api") face default) 313 330 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 330 331 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 331 332 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-4-face)) 332 333 (fontified t help-echo cider--help-echo cider-locals ("c/api"))) #(";;; ================================PUT user====================================


               (c/PUT \"/v0.1/user\" []
                      :return schema/Credentials
                      :body [user-details schema/AddUser]
                      :summary \"Returns the user data.\"
                      (write/user user-details))
" 0 4 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-comment-delimiter-face) 4 81 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-comment-face) 81 98 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 98 99 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-4-face)) 99 100 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 100 101 (fontified t help-echo cider--help-echo cider-locals ("c/api") face default) 101 104 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-constant-face) 104 105 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 105 117 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-string-face) 117 118 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 118 119 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 119 120 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 120 143 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 143 150 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (clojure-keyword-face)) 150 151 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 151 157 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 157 158 (fontified t help-echo cider--help-echo cider-locals ("c/api") face default) 158 169 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 169 192 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 192 197 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (clojure-keyword-face)) 197 198 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 198 199 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 199 212 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 212 218 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 218 219 (fontified t help-echo cider--help-echo cider-locals ("c/api") face default) 219 226 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 226 227 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 227 250 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 250 258 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (clojure-keyword-face)) 258 259 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 259 283 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-string-face) 283 284 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 284 306 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 306 307 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 307 312 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 312 313 (fontified t help-echo cider--help-echo cider-locals ("c/api") face default) 313 330 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 330 331 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 331 332 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-4-face)) 332 333 (fontified t help-echo cider--help-echo cider-locals ("c/api"))) #("               (c/PUT \"/v0.1/user\" []
                      :return schema/Credentials
                      :body [user-details schema/AddUser]
                      :summary \"Returns the user data.\"
                      (write/user user-details))" 0 15 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 15 16 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-4-face)) 16 17 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 17 18 (fontified t help-echo cider--help-echo cider-locals ("c/api") face default) 18 21 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-constant-face) 21 22 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 22 34 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-string-face) 34 35 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 35 36 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 36 37 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 37 60 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 60 67 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (clojure-keyword-face)) 67 68 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 68 74 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 74 75 (fontified t help-echo cider--help-echo cider-locals ("c/api") face default) 75 86 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 86 109 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 109 114 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (clojure-keyword-face)) 114 115 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 115 116 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 116 129 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 129 135 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 135 136 (fontified t help-echo cider--help-echo cider-locals ("c/api") face default) 136 143 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 143 144 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 144 167 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 167 175 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (clojure-keyword-face)) 175 176 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 176 200 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-string-face) 200 201 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 201 223 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 223 224 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 224 229 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 229 230 (fontified t help-echo cider--help-echo cider-locals ("c/api") face default) 230 247 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 247 248 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 248 249 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-4-face))) #("               (c/PUT \"/v0.1/user\" []
                      :return schema/Credentials
                      :body [user-details schema/AddUser]
                      :summary \"Returns the user data.\"
                      (write/user user-details))" 0 15 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 15 16 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-4-face)) 16 17 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 17 18 (fontified t help-echo cider--help-echo cider-locals ("c/api") face default) 18 21 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-constant-face) 21 22 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 22 34 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-string-face) 34 35 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 35 36 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 36 37 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 37 60 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 60 67 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (clojure-keyword-face)) 67 68 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 68 74 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 74 75 (fontified t help-echo cider--help-echo cider-locals ("c/api") face default) 75 86 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 86 109 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 109 114 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (clojure-keyword-face)) 114 115 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 115 116 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 116 129 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 129 135 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 135 136 (fontified t help-echo cider--help-echo cider-locals ("c/api") face default) 136 143 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 143 144 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 144 167 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 167 175 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (clojure-keyword-face)) 175 176 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 176 200 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-string-face) 200 201 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 201 223 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 223 224 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 224 229 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 229 230 (fontified t help-echo cider--help-echo cider-locals ("c/api") face default) 230 247 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 247 248 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 248 249 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-4-face))) "com.amazonaws.services.s3.model.S3ObjectInputStream" #("java.io.BufferedInputStream" 0 8 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 8 16 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 16 27 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t)) #("wW24ZjLKDrRpq8etFZ7u3GGNzAWiQwejgL7HHmVn527W7jYz.jpg" 0 52 (fontified t face font-lock-string-face)) "=tpX{p}TAd" "8736960000" "(map #(apply data.parse-users-csv/send-email %)"))
