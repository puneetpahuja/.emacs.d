;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

<<<<<<< Updated upstream
(setq savehist-minibuffer-history-variables '(ido-file-history compile-history bookmark-history helm-file-name-history coding-system-history query-replace-history minibuffer-history-search-history file-name-history extended-command-history heroku-command-hist heroku-app-hist read-expression-history magit-revision-history cider-minibuffer-history search-ring buffer-name-history ido-buffer-history face-name-history helm-M-x-input-history minibuffer-history helm-occur-history))
=======
(setq savehist-minibuffer-history-variables '(evil-ex-history ido-file-history compile-history bookmark-history helm-file-name-history coding-system-history query-replace-history minibuffer-history-search-history file-name-history extended-command-history heroku-command-hist heroku-app-hist read-expression-history magit-revision-history cider-minibuffer-history search-ring buffer-name-history ido-buffer-history face-name-history helm-M-x-input-history minibuffer-history helm-occur-history))
(setq evil-ex-history '(#("w" 0 1 (ex-index 1))))
>>>>>>> Stashed changes
(setq bookmark-history '("proj" "Helm-find-files: ~/code/work/controlroom/controlroom-dummy-api/"))
(setq helm-file-name-history '("init.el" ".emacs~" "project.clj" "datomic_tx_generator.clj" "datomic_testdata_generator.clj" "schema.clj" "datomic_schema_generator.clj" "project.clj" "COMMIT_EDITMSG" "COMMIT_EDITMSG" "bst.hs" "COMMIT_EDITMSG" "scratch.hs" "repl-dump" "put-task-payload" "io.clj" "handler.clj" ".bash_aliases" "exercises.hs" "cipher.hs" "COMMIT_EDITMSG" "COMMIT_EDITMSG" "COMMIT_EDITMSG" "examples.hs" "COMMIT_EDITMSG" "run_docker_container.sh" "COMMIT_EDITMSG" "data.clj" "COMMIT_EDITMSG" "exercises.hs" "test.hs" "exercises.hs" "COMMIT_EDITMSG" "MERGE_MSG" "COMMIT_EDITMSG" "Dockerfile" "build_docker_image.sh" "auth.clj" "COMMIT_EDITMSG" "db_schema.clj" "COMMIT_EDITMSG" "transaction_schema.clj" "COMMIT_EDITMSG" ".keep_this_file_here_for_git" "COMMIT_EDITMSG" ".gitignore" "COMMIT_EDITMSG" "COMMIT_EDITMSG" "core.clj" "utils.clj" "manual_schema.clj" "dummy.dtm" "COMMIT_EDITMSG" "COMMIT_EDITMSG" "hih.dtm" "project.clj" "core.clj" "COMMIT_EDITMSG" "README.md" "auth.clj" "schema-core.dtm" "project.clj" "toy_schema.dtm" "db.clj" "user_schema.dtm" "data.clj" "COMMIT_EDITMSG" "data.clj" "project.clj" "handler.clj" "handler.clj" "README.md" "ast_generator.clj" "indent.clj" "core.clj" "api_dataweave.clj" "COMMIT_EDITMSG" "project.clj" "core.clj" "schema.dtm" "project.clj" "db_test.clj" "db_test.clj" "handler.clj" "sql-transactor.properties" "credentials.clj" "sql-transactor.properties" "db.clj" "sql-transactor-template.properties" "core.cljs" "whip.js" "index.html" "Dockerfile" "project.clj" "core.clj" "server.clj" "core.clj" "project.clj" "openresty.conf" "nginx.conf"))
(setq coding-system-history '("utf-8" "utf-8-hfs-unix" "utf-8-hfs" "utf-8-hfs-dos" "utf-8" "chinese-iso-8bit" "th-tis620"))
(setq query-replace-history '("tasks-" "template-" "template-" "p" "println" "println" "tree" "cmap" "cmap" "u" "util/str->uuid" "util/str->uuid" "11111111-1111-1111-1111-1111111101" "11111111-1111-1111-1111-1111111100" "11111111-1111-1111-1111-1111111100" "11111111-1111-1111-1111-111111110" "99b1b2e5-bcfb-4f3f-b4af-fadfa90dd" "99b1b2e5-bcfb-4f3f-b4af-fadfa90dd" "11111111-1111-1111-1111-111111110" "15b1b2e5-1111-4f3f-b4af-0000090dd" "15b1b2e5-1111-4f3f-b4af-0000090dd" "11111111-1111-1111-1111-111111110" "14b1b2e5-1111-4f3f-b4af-0000090dd" "14b1b2e5-1111-4f3f-b4af-0000090dd" "11111111-1111-1111-1111-111111110" "12b1b2e5-1111-4f3f-b4af-0000090dd" "12b1b2e5-1111-4f3f-b4af-0000090dd" "11111111-1111-1111-1111-111111110" "11b1b2e5-1111-4f3f-b4af-0000090dd" "11b1b2e5-1111-4f3f-b4af-0000090dd" "11111111-1111-1111-1111-111111110" "10b1b2e5-1111-4f3f-b4af-0000090dd" "10b1b2e5-1111-4f3f-b4af-0000090dd" "11111111-1111-1111-1111-111111110" "15b1b2e5-1111-4f3f-b4af-fadfa90dd" "15b1b2e5-1111-4f3f-b4af-fadfa90dd" "11111111-1111-1111-1111-111111110" "14b1b2e5-1111-4f3f-b4af-fadfa90dd" "14b1b2e5-1111-4f3f-b4af-fadfa90dd" "11111111-1111-1111-1111-111111110" "12b1b2e5-1111-4f3f-b4af-fadfa90dd" "12b1b2e5-1111-4f3f-b4af-fadfa90dd" "11111111-1111-1111-1111-111111110" "11b1b2e5-1111-4f3f-b4af-fadfa90dd" "11b1b2e5-1111-4f3f-b4af-fadfa90dd" "11111111-1111-1111-1111-111111110" "10b1b2e5-1111-4f3f-b4af-fadfa90dd" "10b1b2e5-1111-4f3f-b4af-fadfa90dd" "11111111-1111-1111-1111-11111111" "15b1b2e5-bcfb-4f3f-b4af-fadfa90" "15b1b2e5-bcfb-4f3f-b4af-fadfa90" "11111111-1111-1111-1111-111111110" "14b1b2e5-bcfb-4f3f-b4af-fadfa90dd" "14b1b2e5-bcfb-4f3f-b4af-fadfa90dd" "11111111-1111-1111-1111-111111110" "13b1b2e5-bcfb-4f3f-b4af-fadfa90dd" "13b1b2e5-bcfb-4f3f-b4af-fadfa90dd" "11111111-1111-1111-1111-111111110" "12b1b2e5-bcfb-4f3f-b4af-fadfa90dd" "12b1b2e5-bcfb-4f3f-b4af-fadfa90dd" "00" "10" "10" "000" "100" "100" "11111111-1111-1111-1111-111111111" "11b1b2e5-bcfb-4f3f-b4af-fadfa90dd" "11b1b2e5-bcfb-4f3f-b4af-fadfa90dd" "11111111-1111-1111-1111-111111111" "10b1b2e5-bcfb-4f3f-b4af-fadfa90dd" "10b1b2e5-bcfb-4f3f-b4af-fadfa90dd" "school" "tree" "tree" "c-photo" "v-quote" "v-quote" "com-photo" "com-photo" "v-number" "digging-photo" "digging-photo" "v-name" "sp-cost" "sp-cost" "e-estimate" "sp-n-" "sp-n-" "i-number" "sp-snum" "sp-snum" "i-name" "sp-sname" "sp-sname" "-i-address" "-s-photo" "-s-photo" "-fadfa" "-00000"))
<<<<<<< Updated upstream
(setq file-name-history '("~/code/work/controlroom/controlroom-api-poc/src/api/handler.clj" "~/code/work/controlroom/controlroom-api-poc/src/dtm/util.clj" "~/code/work/controlroom/controlroom-api-poc/src/debug/trace.clj" "~/code/work/controlroom/controlroom-api-poc/src/api/write.clj" "~/code/work/controlroom/controlroom-api-poc/src/data/init.clj" "~/code/work/controlroom/controlroom-api-poc/src/api/util.clj" "~/code/work/controlroom/controlroom-api-poc/src/config/dtm.clj" "~/code/work/controlroom/controlroom-api-poc/src/dtm/write.clj" "~/code/work/controlroom/controlroom-api-poc/src/api/schema.clj" "~/code/work/controlroom/controlroom-api-poc/src/fileserver/s3.clj" "~/code/work/controlroom/controlroom-api-poc/src/fileserver/file.clj" "~/code/work/controlroom/controlroom-api-poc/src/config/digital_ocean_spaces.clj" "~/code/work/controlroom/controlroom-api-poc/src/data/hih_users.clj" "~/code/work/controlroom/controlroom-api-poc/src/data/parse_users_csv.clj" "~/code/geekskool/best_plan/src/best_plan/server.clj" "~/code/work/controlroom/controlroom-api-poc/src/dtm/read.clj" "~/code/work/controlroom/controlroom-api-poc/src/tmp/test.clj" "~/code/work/controlroom/controlroom-api-poc/src/data/test.clj" "~/code/work/controlroom/controlroom-api-poc/src/dashboard/postgres.clj" "~/code/work/controlroom/controlroom-api-poc/src/config/words.clj" "~/code/work/controlroom/controlroom-api-poc/src/config/postgres.clj" "~/code/work/controlroom/sms-api/handler.js" "~/code/work/controlroom/controlroom-api-poc/src/dtm/convert.clj" "~/code/work/controlroom/controlroom-api-poc/src/data/demo/test.clj" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/geekskool/haskell_first_principles/.git/COMMIT_EDITMSG" "~/code/geekskool/haskell_first_principles/README.md" "~/code/haskell_graham_hutton/LICENSE.md" "~/code/haskell_classes/FileSort.hs" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "~/code/work/controlroom/controlroom-api-poc/src/data/ids.clj" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "~/code/work/controlroom/controlroom-api-poc/project.clj" "~/code/work/controlroom/controlroom-api-poc/src/data/demo/ids.clj" "~/code/work/controlroom/controlroom-api-poc/src/data/util.clj" "~/code/work/controlroom/controlroom-api-poc/src/api/read.clj" "~/code/work/controlroom/controlroom-api-poc/src/data/generator.clj" "~/code/ML/3/ex3/predict.m" "~/code/ML/3/ex3/predictOneVsAll.m" "~/code/ML/3/ex3/oneVsAll.m" "~/code/ML/3/ex3/lrCostFunction.m" "~/code/work/controlroom/controlroom-api-poc/docs/design" "~/code/ML/2/ex2/costFunction.m" "~/code/ML/2/ex2/ex2_reg.m" "~/code/ML/2/ex2/costFunctionReg.m" "~/code/ML/2/ex2/mapFeature.m" "~/code/ML/2/ex2/predict.m" "~/code/ML/2/ex2/ex2.m" "~/code/ML/2/ex2/plotData.m" "~/code/ML/2/ex2/sigmoid.m" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "~/code/work/controlroom/controlroom-api-poc/src/dashboard/convert.clj" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "~/code/work/controlroom/controlroom-api-poc/docs/design profiler" "~/code/work/controlroom/controlroom-api-poc/docs/todo" "~/.emacs.d/init.el" "~/code/haskell_classes/mergeSortOnDisk.hs" "~/code/haskell_classes/march-13-mergesort-disk.hs" "~/code/haskell_classes/numberInWords.hs" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "~/code/work/controlroom/controlroom-api-poc/src/fileserver/digital_ocean_spaces.clj" "~/code/work/controlroom/controlroom-api-poc/src/fileserver/do_spaces.clj" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "~/Downloads/parser.hs" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "~/code/work/controlroom/controlroom-api-poc/src/data/repl_commands.clj" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "~/code/haskell_classes/monoid.hs" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "~/code/work/controlroom/Dockerfile" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/MERGE_MSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "~/code/work/controlroom/controlroom-dummy-api/src/controlroom_dummy_api/api_schema.clj" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "~/code/work/controlroom/controlroom-api-poc/src/api/auth.clj" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/haskell_classes/.git/COMMIT_EDITMSG" "~/code/haskell_classes/printJson.hs" "~/code/work/controlroom/controlroom-api-poc/src/dtm/config.clj"))
(setq extended-command-history '("cider-restart" "goto-line" "query-replace-regexp" "eshell" "shell" "hs-hide-all" "octave-mode" "xml-mode" "projectile-grep" "apropos" "clojure-mode" "eval-buffer" "flycheck-mode" "replace-regexp" "haskell-mode" "revert-buffer" "hs-show-all" "hs-show-block" "pkg-info-package-version" "helm-bookmarks" "bookmark-bmenu-list" "ansi-term" "term" "paredit-mode" "lockstep-popup" "lockstep" "yank" "cider-load-file" "cider-eval-file" "cider-load-buffer" "helm-find-files" "display-buffer" "haskell-compile" "electric-newline-and-maybe-indent" "newline-and-indent" "kill-buffer" "term-send-ctrl-x" "describe-variable" "customize-mode" "package-install" "haskell-mode-stylish-buffer" "package-refresh-contents"))
=======
(setq file-name-history '("~/code/adori/README_TO_CLONE_DEV_VM" "~/.emacs.d/init.el" "~/code/work/controlroom/controlroom-api-poc/src/api/schema.clj" "~/code/work/controlroom/controlroom-api-poc/src/fileserver/s3.clj" "~/code/work/controlroom/controlroom-api-poc/src/dtm/util.clj" "~/code/work/controlroom/controlroom-api-poc/src/config/dtm.clj" "~/code/work/controlroom/controlroom-api-poc/src/fileserver/file.clj" "~/code/work/controlroom/controlroom-api-poc/src/config/digital_ocean_spaces.clj" "~/code/work/controlroom/controlroom-api-poc/src/data/hih_users.clj" "~/code/work/controlroom/controlroom-api-poc/src/data/parse_users_csv.clj" "~/code/geekskool/best_plan/src/best_plan/server.clj" "~/code/work/controlroom/controlroom-api-poc/src/api/handler.clj" "~/code/work/controlroom/controlroom-api-poc/src/data/init.clj" "~/code/work/controlroom/controlroom-api-poc/src/dtm/read.clj" "~/code/work/controlroom/controlroom-api-poc/src/tmp/test.clj" "~/code/work/controlroom/controlroom-api-poc/src/data/test.clj" "~/code/work/controlroom/controlroom-api-poc/src/dashboard/postgres.clj" "~/code/work/controlroom/controlroom-api-poc/src/dtm/write.clj" "~/code/work/controlroom/controlroom-api-poc/src/config/words.clj" "~/code/work/controlroom/controlroom-api-poc/src/config/postgres.clj" "~/code/work/controlroom/sms-api/handler.js" "~/code/work/controlroom/controlroom-api-poc/src/debug/trace.clj" "~/code/work/controlroom/controlroom-api-poc/src/dtm/convert.clj" "~/code/work/controlroom/controlroom-api-poc/src/data/demo/test.clj" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/geekskool/haskell_first_principles/.git/COMMIT_EDITMSG" "~/code/geekskool/haskell_first_principles/README.md" "~/code/haskell_graham_hutton/LICENSE.md" "~/code/haskell_classes/FileSort.hs" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "~/code/work/controlroom/controlroom-api-poc/src/data/ids.clj" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "~/code/work/controlroom/controlroom-api-poc/project.clj" "~/code/work/controlroom/controlroom-api-poc/src/data/demo/ids.clj" "~/code/work/controlroom/controlroom-api-poc/src/api/write.clj" "~/code/work/controlroom/controlroom-api-poc/src/data/util.clj" "~/code/work/controlroom/controlroom-api-poc/src/api/read.clj" "~/code/work/controlroom/controlroom-api-poc/src/data/generator.clj" "~/code/ML/3/ex3/predict.m" "~/code/ML/3/ex3/predictOneVsAll.m" "~/code/ML/3/ex3/oneVsAll.m" "~/code/ML/3/ex3/lrCostFunction.m" "~/code/work/controlroom/controlroom-api-poc/docs/design" "~/code/ML/2/ex2/costFunction.m" "~/code/ML/2/ex2/ex2_reg.m" "~/code/ML/2/ex2/costFunctionReg.m" "~/code/ML/2/ex2/mapFeature.m" "~/code/ML/2/ex2/predict.m" "~/code/ML/2/ex2/ex2.m" "~/code/ML/2/ex2/plotData.m" "~/code/ML/2/ex2/sigmoid.m" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "~/code/work/controlroom/controlroom-api-poc/src/dashboard/convert.clj" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "~/code/work/controlroom/controlroom-api-poc/docs/design profiler" "~/code/work/controlroom/controlroom-api-poc/docs/todo" "~/code/haskell_classes/mergeSortOnDisk.hs" "~/code/haskell_classes/march-13-mergesort-disk.hs" "~/code/haskell_classes/numberInWords.hs" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "~/code/work/controlroom/controlroom-api-poc/src/fileserver/digital_ocean_spaces.clj" "~/code/work/controlroom/controlroom-api-poc/src/fileserver/do_spaces.clj" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "~/Downloads/parser.hs" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "~/code/work/controlroom/controlroom-api-poc/src/data/repl_commands.clj" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "~/code/haskell_classes/monoid.hs" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "~/code/work/controlroom/Dockerfile" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/MERGE_MSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "~/code/work/controlroom/controlroom-dummy-api/src/controlroom_dummy_api/api_schema.clj" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "~/code/work/controlroom/controlroom-api-poc/src/api/auth.clj" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/work/controlroom/controlroom-api-poc/.git/COMMIT_EDITMSG" "/home/puneet/code/haskell_classes/.git/COMMIT_EDITMSG" "~/code/haskell_classes/printJson.hs" "~/code/work/controlroom/controlroom-api-poc/src/dtm/config.clj"))
(setq extended-command-history '("eval-buffer" "cider-restart" "query-replace-regexp" "eshell" "shell" "hs-hide-all" "octave-mode" "xml-mode" "projectile-grep" "apropos" "clojure-mode" "flycheck-mode" "replace-regexp" "haskell-mode" "revert-buffer" "hs-show-all" "hs-show-block" "pkg-info-package-version" "helm-bookmarks" "bookmark-bmenu-list" "ansi-term" "term" "goto-line" "paredit-mode" "lockstep-popup" "lockstep" "yank" "cider-load-file" "cider-eval-file" "cider-load-buffer" "helm-find-files" "display-buffer" "haskell-compile" "electric-newline-and-maybe-indent" "newline-and-indent" "kill-buffer" "term-send-ctrl-x" "describe-variable" "customize-mode" "package-install" "haskell-mode-stylish-buffer" "package-refresh-contents"))
>>>>>>> Stashed changes
(setq heroku-command-hist '("bash"))
(setq heroku-app-hist '("bestplan"))
(setq read-expression-history '("(setq line-spacing -1.0)" "(setq line-spacing 0.5)"))
(setq magit-revision-history '("origin/put-templates-activities" "dashboard" "origin/download" "origin/dashboard" "origin/upload" "origin/tags" "put-activities" "origin/put-user" "origin/features" "origin/fileserver" "debug" "tasks-assigned-completed" "todos" "origin/tasks-assigned-completed" "design-change" "todos" "design-change" "bug-fixes" "refactor" "todos" "origin/put-activities" "origin/misc" "debug" "debug" "origin/todos" "origin/init-and-init-plus" "origin/debug" "origin/reset" "deploy" "origin/deploy-test" "deploy" "deploy-test" "design-change" "origin/dev" "origin/data-generation" "origin/put-tasks" "origin/bug-fixes" "put-tasks" "refactor" "origin/refactor" "tasks-assigned" "origin/tasks-assigned" "diff" "tasks-assigned" "tasks-assigned" "origin/diff" "tasks-assigned" "manifest-diff-logic" "design-change" "tasks-assigned" "origin/design-change" "origin/org-units" "logout" "org-units" "logout" "master" "origin/logout" "login" "logout" "origin/master" "origin/preliminary-datomic-layer" "origin/master" "manifest-diff-logic" "test" "origin/manifest-diff-logic" "manifest-diff-logic" "origin/documentation" "documentation" "manifest-diff-logic" "origin/dev" "dev" "origin/everything-is-a-thing" "everything-is-a-thing" "origin/dev" "documentation" "everything-is-a-thing" "everything-is-a-thing" "everything-is-a-thing" "everything-is-a-thing" "dev" "everything-is-a-thing" "dev" "everything-is-a-thing" "master" "everything-is-a-thing" "deploy" "origin/everything-is-a-thing" "dev" "everything-is-a-task" "dev" "deploy" "dev" "deploy" "master" "dev" "deploy" "master" "dev" "deploy" "dev"))
<<<<<<< Updated upstream
(setq cider-minibuffer-history '("data/init" "db/photo" "photo-details" "db/photo" "write/photo" "file/download" "read/download" "schema/FileManifest" "object-store/put-object" "file/upload" "util/get-all-vals" "convert/project" "clojure.string/trim" "convert/user-auth" "db/get-user-auth" "convert/user-auth" "db/get-user-auth" "auth/login" "data/init" "dashboard/update-db" "write/init" "util/milliseconds-from" "convert/template-activity" "db/templates-activities" "read/templates-activities" "keys-emap" "read/templates-activities" "transform-map" "transform-map-plus" "c/tag" "c/task-tags" "dtm.util/sort-by-position" "assoc" "util/uuid" "util/filter-nil" "db/user" "auth/authorize-and-respond" "util/get-task-assigned-to-eid" "db/tasks-pending" "util/get-project-eid" "convert/task-completed" "auth/authorize-and-respond" "util/get-project-eid" "db/org-units" "read/org-units" "db/org-units" "org-units-manifest" "measurement" "db/tasks" "write/tasks" "get-project-eid" "util/get-assigner-eid" "db/tasks-pending" "read/tasks-pending" "util/assignee-details" "db/tasks-assigned" "read/tasks-assigned" "write/init" "key" "db/tasks" "db/templates-projects" "read/templates-projects" "project-templates-manifest" "auth/authorize-and-respond" "read/templates-projects" "schema/ProjectTemplatesDiff" "db/templates-projects" "read/templates-projects" "db/templates-projects" "read/templates-projects" "db/templates-projects" "read/templates-projects" "schema/ProjectTemplatesDiff" "db/templates-projects" "read/templates-projects" "convert/template-project" "template-project" "db/templates-projects" "read/templates-projects" "data/init" "write/tasks" "if-not" "db/tasks-assigned" "read/tasks-assigned" "db/tasks-completed" "read/tasks-completed" "db/tasks-pending" "read/tasks-pending" "read/org-units" "db/org-units" "util/diff" "read/tasks-pending" "read/org-units" "s/defschema" "util/get-org-unit-eid" "db/tasks-pending" "read/tasks-pending" "util/get-completed-tasks-ids" "db/tasks-completed" "read/tasks-completed"))
(setq search-ring '("rename" "delete" "combina"))
(setq buffer-name-history '("*unsent mail*" "inin" "hih-users" "test.clj" "core.clj" "*cider-repl controlroom-api-poc*" "*unsent mail*" "*shell*" "data/ids.clj" "data/test.clj" "*unsent mail*" "*cider-repl controlroom-api-poc*" "*Ibuffer*" "*magit: controlroom-api-poc" "file.clj" "*Ibuffer*" "*haskell-process-log*" "*haskell*" "*Messages*" "*scratch*" "TAGS" "*Messages*" "*haskell*" "config.clj" "config" "*cider-error*" "init.el" "core.clj" "repl_commands.clj" "*cider-repl controlroom-api-poc*<2>" "*cider-repl controlroom-api-poc*" "*cider-error*" "api_schema.clj" "core.clj" "*Flycheck error messages*" "data" "test.clj" "api_schema.clj" "*cider-repl controlroom-dummy-api*" "*Flycheck error messages*" "*haskell*" "prime.hs" "*cider-repl controlroom-api-poc*" "project.clj" "*haskell*" "repl-dump" "*Bookmark List*" ".emacs~" "testrun.clj" "*cider-repl controlroom-dummy-api*" "datomic_schema_generator.clj" "repl-dump" "bst.hs" "mygram" "io" "exercises.hs" "*ansi-term*" "*terminal*" "scratch" "*Flycheck error messages*" "*magit-process: controlroom-dummy-api" "*magit-diff: controlroom-dummy-api" "*magit: controlroom-dummy-api" "pom.xml.asc" ".lei" "*cider-repl docker-compojure-hello-world-master*" "*unsent mail*" "ch" "ch3.hs" "*haskell*" "*terminal*" "ac-comphist.dat" "ch2.hs" "*cider-repl best_plan*" "*terminal*" "*ansi-term*" "*terminal*" "*shell*" "*grep*" "*magit: best_plan" "*heroku bash: bestplan*" "powerline-themes.el" "server.clj" "test.clj" "*Customize Face: Default*" "init.el" "*magit: .emacs.d" "*Customize Face: Default*" "isd.csv" "csv_gen.clj" "csv_gen.clj"))
(setq ido-buffer-history '("*unsent mail*" "inin" "hih-users" "test.clj" "core.clj" "*cider-repl controlroom-api-poc*" "*unsent mail*" "*shell*" "data/ids.clj" "data/test.clj" "*unsent mail*" "*cider-repl controlroom-api-poc*" "*Ibuffer*" "*magit: controlroom-api-poc" "file.clj" "*Ibuffer*" "*haskell-process-log*" "*haskell*" "*Messages*" "*scratch*" "TAGS" "*Messages*" "*haskell*" "config.clj" "config" "*cider-error*" "init.el" "core.clj" "repl_commands.clj" "*cider-repl controlroom-api-poc*<2>" "*cider-repl controlroom-api-poc*" "*cider-error*" "api_schema.clj" "core.clj" "*Flycheck error messages*" "data" "test.clj" "api_schema.clj" "*cider-repl controlroom-dummy-api*" "*Flycheck error messages*" "*haskell*" "prime.hs" "*cider-repl controlroom-api-poc*" "project.clj" "*haskell*" "repl-dump" "*Bookmark List*" ".emacs~" "testrun.clj" "*cider-repl controlroom-dummy-api*" "datomic_schema_generator.clj" "repl-dump" "bst.hs" "mygram" "io" "exercises.hs" "*ansi-term*" "*terminal*" "scratch" "*Flycheck error messages*" "*magit-process: controlroom-dummy-api" "*magit-diff: controlroom-dummy-api" "*magit: controlroom-dummy-api" "pom.xml.asc" ".lei" "*cider-repl docker-compojure-hello-world-master*" "*unsent mail*" "ch" "ch3.hs" "*haskell*" "ac-comphist.dat" "ch2.hs" "*cider-repl best_plan*" "*terminal*" "*ansi-term*" "*terminal*" "*shell*" "*grep*" "*magit: best_plan" "*heroku bash: bestplan*" "powerline-themes.el" "server.clj" "test.clj" "*Customize Face: Default*" "init.el" "*magit: .emacs.d" "*Customize Face: Default*" "isd.csv" "*Custom Themes*"))
(setq face-name-history '("default" "all faces" "default" "all faces" "default"))
(setq helm-M-x-input-history '("insta" "cid" "go" "ci" "cider" "b" "kill-ema" "eshell" "she" #("dtm-linking-tx" 0 14 (cider-locals ("tx" "a-task-id" "m-task-a-measument-id" "m-task-id" "kvs" "val" "key" "cmap" "val" "key" "cmap" "n" "chars" "user-details" "_" "pass" "password" "state" "orgUnit" "email" "phone" "title" "lastName" "firstName" "tree" "uuid" "children" "template" "owner" "dtm-linking-tx" "template-with-ids" "tasks") fontified t help-echo cider--help-echo)) #("template-with-ids" 0 17 (cider-locals ("tx" "a-task-id" "m-task-a-measument-id" "m-task-id" "kvs" "val" "key" "cmap" "val" "key" "cmap" "n" "chars" "user-details" "_" "pass" "password" "state" "orgUnit" "email" "phone" "title" "lastName" "firstName" "tree" "uuid" "children" "template" "owner" "dtm-linking-tx" "template-with-ids" "tasks") fontified t help-echo cider--help-echo)) #("map?" 0 4 (face font-lock-builtin-face cider-locals ("tree") fontified t help-echo cider--help-echo)) #("util/str->uuid" 0 4 (fontified t help-echo cider--help-echo cider-locals ("bindings" "init" "sym") face font-lock-type-face) 4 5 (fontified t help-echo cider--help-echo cider-locals ("bindings" "init" "sym") face default) 5 14 (fontified t help-echo cider--help-echo cider-locals ("bindings" "init" "sym"))) #("11111111-1111-1111-1111-111111110099" 0 33 (face font-lock-string-face cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid") fontified t help-echo cider--help-echo) 33 36 (face font-lock-string-face cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid") fontified t help-echo cider--help-echo)) #("users" 0 5 (face font-lock-comment-face cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid" "util/str->uuid") fontified t help-echo cider--help-echo)) #("15b1b2e5-1111-4f3f-b4af-0000090dd070" 0 36 (face font-lock-string-face cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid") fontified t help-echo cider--help-echo)) #("11111111-1111-1111-1111-111111110024" 0 33 (face font-lock-string-face cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid") help-echo cider--help-echo fontified t) 33 36 (face font-lock-string-face cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid") fontified t help-echo cider--help-echo)) #("11111111-1111-1111-1111-111111110005" 0 33 (face font-lock-string-face cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid") help-echo cider--help-echo fontified t) 33 36 (face font-lock-string-face cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid") fontified t help-echo cider--help-echo)) #("defs" 0 4 (face font-lock-keyword-face font-lock-multiline t cider-locals ("util/str->uuid" "util/str->uuid") fontified t help-echo cider--help-echo)) #("11111111-1111-1111-1111-111111110024" 0 33 (face font-lock-string-face cider-locals ("util/str->uuid" "util/str->uuid") help-echo cider--help-echo fontified t) 33 36 (face font-lock-string-face cider-locals ("util/str->uuid" "util/str->uuid") fontified t help-echo cider--help-echo)) #("11111111-1111-1111-1111-111111110005" 0 33 (face font-lock-string-face cider-locals ("util/str->uuid" "util/str->uuid") help-echo cider--help-echo fontified t) 33 36 (face font-lock-string-face cider-locals ("util/str->uuid" "util/str->uuid") fontified t help-echo cider--help-echo)) #("defs" 0 4 (face font-lock-keyword-face font-lock-multiline t cider-locals ("util/str->uuid") fontified t help-echo cider--help-echo)) #("util/str->uuid" 0 4 (face font-lock-type-face cider-locals ("util/str->uuid") fontified t help-echo cider--help-echo) 4 5 (face default cider-locals ("util/str->uuid") fontified t help-echo cider--help-echo) 5 14 (cider-locals ("util/str->uuid") fontified t help-echo cider--help-echo)) #("15b1b2e5-bcfb-4f3f-b4af-fadfa90dd070" 0 36 (face font-lock-string-face cider-locals ("util/str->uuid") fontified t help-echo cider--help-echo)) #("util/str->uuid" 0 4 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid") face font-lock-type-face) 4 5 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid") face default) 5 14 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid"))) #("14b1b2e5-bcfb-4f3f-b4af-fadfa90dd040" 0 33 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid") face font-lock-string-face) 33 36 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid") face font-lock-string-face)) #("util/str->uuid" 0 4 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid") face font-lock-type-face) 4 5 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid") face default) 5 14 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid"))) #("user> " 0 6 (fontified t font-lock-face cider-repl-prompt-face read-only t intangible t field cider-repl-prompt rear-nonsticky (field read-only font-lock-face intangible))) #("12b1b2e5-bcfb-4f3f-b4af-fadfa90dd020" 0 36 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid") face font-lock-string-face)) #("11111111-1111-1111-1111-111111111010" 0 33 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid") face font-lock-string-face) 33 36 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid") face font-lock-string-face)) #("11111111-1111-1111-1111-111111111000" 0 33 (fontified t help-echo cider--help-echo cider-locals ("util/str->uuid") face font-lock-string-face) 33 36 (fontified t help-echo cider--help-echo cider-locals ("util/str->uuid") face font-lock-string-face)) #("util/str->uuid" 0 4 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid") face font-lock-type-face) 4 5 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid") face default) 5 14 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid"))) #("11b1b2e5-bcfb-4f3f-b4af-fadfa90dd010" 0 36 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid") face font-lock-string-face)) #("util/str->uuid" 0 4 (fontified t help-echo cider--help-echo cider-locals ("util/str->uuid") face font-lock-type-face) 4 5 (fontified t help-echo cider--help-echo cider-locals ("util/str->uuid") face default) 5 14 (fontified t help-echo cider--help-echo cider-locals ("util/str->uuid"))) #("10b1b2e5-bcfb-4f3f-b4af-fadfa90dd000" 0 36 (fontified t help-echo cider--help-echo cider-locals ("util/str->uuid") face font-lock-string-face)) #("m-v-quote-id" 0 2 (fontified t help-echo cider--help-echo cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid")) 2 9 (fontified t help-echo cider--help-echo cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid")) 9 12 (fontified t help-echo cider--help-echo cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid"))) #("mt-v-number-id" 0 3 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid")) 3 11 (fontified t help-echo cider--help-echo cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid")) 11 14 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid"))) #("mt-v-name-id" 0 3 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid")) 3 9 (fontified t help-echo cider--help-echo cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid")) 9 12 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid"))) #("m-sp-cost-id" 0 12 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid"))) #("mt-i-number-id" 0 3 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid")) 3 11 (fontified t help-echo cider--help-echo cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid")) 11 14 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid"))) #("mt-i-name-id" 0 3 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid")) 3 9 (fontified t help-echo cider--help-echo cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid")) 9 12 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid"))) #("mt-i-address-id" 0 2 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid")) 2 12 (fontified t help-echo cider--help-echo cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid")) 12 15 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid"))) #("mt-i-location-id" 0 16 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid"))) #("99b1b2e5-bcfb-4f3f-b4af-0000090dd014" 0 24 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid" "util/str->uuid") face font-lock-string-face) 24 29 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid" "util/str->uuid") face font-lock-string-face) 29 36 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid" "util/str->uuid") face font-lock-string-face)) #("m-a-sidewalk-id" 0 15 (fontified t help-echo cider--help-echo cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid") font-lock-multiline t face font-lock-function-name-face)) #("ids/t-school-id" 0 3 (help-echo cider--help-echo fontified t cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-school" "t-identify" "t-cost" "t-vendor" "t-complete" "mt-c-photo" "m-c-photo" "mt-v-quote" "m-v-quote" "mt-v-number" "m-v-number" "mt-v-name" "m-v-name" "mt-e-estimate" "m-e-estimate" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify") face font-lock-type-face) 3 4 (help-echo cider--help-echo fontified t cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-school" "t-identify" "t-cost" "t-vendor" "t-complete" "mt-c-photo" "m-c-photo" "mt-v-quote" "m-v-quote" "mt-v-number" "m-v-number" "mt-v-name" "m-v-name" "mt-e-estimate" "m-e-estimate" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify") face default) 4 15 (help-echo cider--help-echo fontified t cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-school" "t-identify" "t-cost" "t-vendor" "t-complete" "mt-c-photo" "m-c-photo" "mt-v-quote" "m-v-quote" "mt-v-number" "m-v-number" "mt-v-name" "m-v-name" "mt-e-estimate" "m-e-estimate" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify"))) #("t-wo" 0 4 (help-echo cider--help-echo fontified t cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-cost" "t-vendor" "t-complete" "mt-c-photo" "m-c-photo" "mt-v-quote" "m-v-quote" "mt-v-number" "m-v-number" "mt-v-name" "m-v-name" "mt-e-estimate" "m-e-estimate" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify"))) #("t-df" 0 4 (help-echo cider--help-echo fontified t cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-vendor" "t-complete" "mt-c-photo" "m-c-photo" "mt-v-quote" "m-v-quote" "mt-v-number" "m-v-number" "mt-v-name" "m-v-name" "mt-e-estimate" "m-e-estimate" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify"))) #("t-complete" 0 10 (help-echo cider--help-echo fontified t cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-vendor" "t-complete" "mt-c-photo" "m-c-photo" "mt-v-quote" "m-v-quote" "mt-v-number" "m-v-number" "mt-v-name" "m-v-name" "mt-e-estimate" "m-e-estimate" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify"))) #("ids/t-ll-id" 0 3 (help-echo cider--help-echo fontified t cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-vendor" "t-complete" "mt-c-photo" "m-c-photo" "mt-v-quote" "m-v-quote" "mt-v-number" "m-v-number" "mt-v-name" "m-v-name" "mt-e-estimate" "m-e-estimate" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify") face font-lock-type-face) 3 4 (help-echo cider--help-echo fontified t cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-vendor" "t-complete" "mt-c-photo" "m-c-photo" "mt-v-quote" "m-v-quote" "mt-v-number" "m-v-number" "mt-v-name" "m-v-name" "mt-e-estimate" "m-e-estimate" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify") face default) 4 11 (help-echo cider--help-echo fontified t cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-vendor" "t-complete" "mt-c-photo" "m-c-photo" "mt-v-quote" "m-v-quote" "mt-v-number" "m-v-number" "mt-v-name" "m-v-name" "mt-e-estimate" "m-e-estimate" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify"))) #("m-c-photo" 0 9 (help-echo cider--help-echo fontified t cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-c-photo" "m-c-photo" "mt-v-quote" "m-v-quote" "mt-v-number" "m-v-number" "mt-v-name" "m-v-name" "mt-e-estimate" "m-e-estimate" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify"))) #("m-e-estimate" 0 1 (fontified t help-echo cider--help-echo cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-e-estimate" "m-e-estimate" "mt-v-number" "m-v-number" "mt-v-name" "m-v-name" "mt-e-estimate" "m-e-estimate" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify")) 1 12 (fontified t help-echo cider--help-echo cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-e-estimate" "m-e-estimate" "mt-v-number" "m-v-number" "mt-v-name" "m-v-name" "mt-e-estimate" "m-e-estimate" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify"))) #("m-i-number" 0 1 (help-echo cider--help-echo fontified t cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-i-number" "m-i-number" "mt-v-name" "m-v-name" "mt-e-estimate" "m-e-estimate" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify")) 1 10 (help-echo cider--help-echo fontified t cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-i-number" "m-i-number" "mt-v-name" "m-v-name" "mt-e-estimate" "m-e-estimate" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify"))) #("m-i-name" 0 1 (fontified t help-echo cider--help-echo cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-e-estimate" "m-e-estimate" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify")) 1 8 (fontified t help-echo cider--help-echo cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-e-estimate" "m-e-estimate" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify"))) #("m-wo-number" 0 11 (help-echo cider--help-echo fontified t cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify"))) #("m-number" 0 8 (help-echo cider--help-echo fontified t cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-i-name" "m-i-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify"))) #("m-name" 0 6 (help-echo cider--help-echo fontified t cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify"))) #("m-address" 0 9 (help-echo cider--help-echo fontified t cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify"))) #("mt-location" 0 11 (help-echo cider--help-echo fontified t cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify"))) #("m-a-ll" 0 6 (help-echo cider--help-echo fontified t cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify"))) #("m-a-vector" 0 3 (help-echo cider--help-echo fontified t cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-vector" "m-a-vector" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify")) 3 10 (fontified t help-echo cider--help-echo cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-vector" "m-a-vector" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify"))) #("m-a-df" 0 6 (help-echo cider--help-echo fontified t cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify"))) #("m-acost" 0 3 (help-echo cider--help-echo fontified t cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-acost" "m-acost" "mt-a-identify" "m-a-identify")) 3 7 (fontified t help-echo cider--help-echo cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-acost" "m-acost" "mt-a-identify" "m-a-identify"))) #("m-a-wo" 0 6 (help-echo cider--help-echo fontified t cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-identify" "m-a-identify"))) #("defs" 0 4 (fontified t help-echo cider--help-echo cider-locals ("util/str->uuid") font-lock-multiline t face font-lock-keyword-face)) #("util/str->uuid" 0 4 (fontified t help-echo cider--help-echo cider-locals ("util/str->uuid" "util/str->uuid") face font-lock-type-face) 4 5 (fontified t help-echo cider--help-echo cider-locals ("util/str->uuid" "util/str->uuid") face default) 5 14 (fontified t help-echo cider--help-echo cider-locals ("util/str->uuid" "util/str->uuid"))) #("ids/mhr-edu-w-id" 0 3 (fontified t face font-lock-type-face) 3 4 (fontified t face default) 4 16 (fontified t)) "hide" #("Id" 0 2 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face)) "octave" "oc" #("================================templates/projects==========================" 0 76 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face)) #("===============================templates/projects===========================" 0 76 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face)) "octave" #("task_tags" 0 9 (fontified t)) #("*" 0 1 (fontified t)) #(":task/id" 0 1 (help-echo cider--help-echo fontified t cider-locals ("emap" "fs" "m" "updated-m" "val" "f" "k" "emap" "vals-converted" "keys-needed" "keys-converted" "array-key" "cmap" "new-key" "array-key" "cmap" "emap" "vals-converted" "keys-needed" "keys-converted" "emap" "val-fs" "get-task-id" "keys-needed" "keys-converted" "emap" "vals-converted" "get-measurement-templates-ids" "keys-needed" "keys-converted" "emap" "keys-needed" "keys-converted" "entities" "attr" "entities" "convert-entities-f" "attr" "entities" "attr" "entities" "convert-entities-f" "attr" "emap" "vals-converted" "val-fs" "get-projects-ids" "keys-converted" "emap" "val-fs" "get-activities-ids" "get-states-ids" "keys-converted" "emap" "val-fs" "get-verticals-ids" "keys-converted" "emap" "val-fs" "get-users-ids" "keys-converted" "emap" "emap" "val-fs" "get-tags" "get-measurements-ids" "keys-converted" "emap" "val-fs" "get-owner" "root-task-id" "get-root" "keys-converted") face (clojure-keyword-face)) 1 5 (help-echo cider--help-echo fontified t cider-locals ("emap" "fs" "m" "updated-m" "val" "f" "k" "emap" "vals-converted" "keys-needed" "keys-converted" "array-key" "cmap" "new-key" "array-key" "cmap" "emap" "vals-converted" "keys-needed" "keys-converted" "emap" "val-fs" "get-task-id" "keys-needed" "keys-converted" "emap" "vals-converted" "get-measurement-templates-ids" "keys-needed" "keys-converted" "emap" "keys-needed" "keys-converted" "entities" "attr" "entities" "convert-entities-f" "attr" "entities" "attr" "entities" "convert-entities-f" "attr" "emap" "vals-converted" "val-fs" "get-projects-ids" "keys-converted" "emap" "val-fs" "get-activities-ids" "get-states-ids" "keys-converted" "emap" "val-fs" "get-verticals-ids" "keys-converted" "emap" "val-fs" "get-users-ids" "keys-converted" "emap" "emap" "val-fs" "get-tags" "get-measurements-ids" "keys-converted" "emap" "val-fs" "get-owner" "root-task-id" "get-root" "keys-converted") face (font-lock-type-face clojure-keyword-face)) 5 6 (help-echo cider--help-echo fontified t cider-locals ("emap" "fs" "m" "updated-m" "val" "f" "k" "emap" "vals-converted" "keys-needed" "keys-converted" "array-key" "cmap" "new-key" "array-key" "cmap" "emap" "vals-converted" "keys-needed" "keys-converted" "emap" "val-fs" "get-task-id" "keys-needed" "keys-converted" "emap" "vals-converted" "get-measurement-templates-ids" "keys-needed" "keys-converted" "emap" "keys-needed" "keys-converted" "entities" "attr" "entities" "convert-entities-f" "attr" "entities" "attr" "entities" "convert-entities-f" "attr" "emap" "vals-converted" "val-fs" "get-projects-ids" "keys-converted" "emap" "val-fs" "get-activities-ids" "get-states-ids" "keys-converted" "emap" "val-fs" "get-verticals-ids" "keys-converted" "emap" "val-fs" "get-users-ids" "keys-converted" "emap" "emap" "val-fs" "get-tags" "get-measurements-ids" "keys-converted" "emap" "val-fs" "get-owner" "root-task-id" "get-root" "keys-converted") face (default clojure-keyword-face)) 6 8 (help-echo cider--help-echo fontified t cider-locals ("emap" "fs" "m" "updated-m" "val" "f" "k" "emap" "vals-converted" "keys-needed" "keys-converted" "array-key" "cmap" "new-key" "array-key" "cmap" "emap" "vals-converted" "keys-needed" "keys-converted" "emap" "val-fs" "get-task-id" "keys-needed" "keys-converted" "emap" "vals-converted" "get-measurement-templates-ids" "keys-needed" "keys-converted" "emap" "keys-needed" "keys-converted" "entities" "attr" "entities" "convert-entities-f" "attr" "entities" "attr" "entities" "convert-entities-f" "attr" "emap" "vals-converted" "val-fs" "get-projects-ids" "keys-converted" "emap" "val-fs" "get-activities-ids" "get-states-ids" "keys-converted" "emap" "val-fs" "get-verticals-ids" "keys-converted" "emap" "val-fs" "get-users-ids" "keys-converted" "emap" "emap" "val-fs" "get-tags" "get-measurements-ids" "keys-converted" "emap" "val-fs" "get-owner" "root-task-id" "get-root" "keys-converted") face (clojure-keyword-face))) #("cmap" 0 4 (help-echo cider--help-echo fontified t cider-locals ("emap" "cmap"))) #("get-id-list" 0 11 (help-echo cider--help-echo fontified t cider-locals ("emap" "fs" "m" "updated-m" "val" "f" "k" "emap" "vals-converted" "keys-needed" "keys-converted" "array-key" "cmap" "new-key" "array-key" "cmap" "emap" "vals-converted" "keys-needed" "keys-converted" "emap" "val-fs" "get-task-id" "keys-needed" "keys-converted" "emap" "vals-converted" "get-measurement-templates-ids" "keys-needed" "keys-converted" "emap" "keys-needed" "keys-converted" "entities" "attr" "entities" "convert-entities-f" "attr") face font-lock-function-name-face)) #(":assigned-to" 0 12 (help-echo cider--help-echo fontified t cider-locals nil face (clojure-keyword-face))) #(":projects" 0 9 (help-echo cider--help-echo fontified t cider-locals nil face (clojure-keyword-face))) #("filter-nil" 0 10 (fontified t help-echo cider--help-echo cider-locals ("db" "val" "attr" "db" "value" "attr" "db" "eid" "e" "all" "manifest" "delete" "insert" "not-in-all?" "not-in-manifest?" "all-set" "manifest-set" "not-contains?" "cmap") face font-lock-function-name-face)) #("config/db-spec" 0 6 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 6 7 (fontified t help-echo cider--help-echo cider-locals nil face default) 7 14 (fontified t help-echo cider--help-echo cider-locals nil)) "cid" "cider" "888888" #("9898989898" 0 10 (fontified t help-echo cider--help-echo cider-locals ("let" "supervisors" "workers") face font-lock-string-face)) #("org.joda.time.DateTime" 0 22 (rear-nonsticky (font-lock-face) font-lock-face cider-repl-stdout-face fontified t)) #("User" 0 4 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t)) #("." 0 1 (face font-lock-string-face fontified t)) "gre" "apropos" "projectile" "projectile-grep" "clo" #("pfdin" 0 1 (face font-lock-string-face fontified t) 1 2 (face font-lock-string-face fontified t) 2 3 (face font-lock-string-face fontified t) 3 4 (face font-lock-string-face fontified t) 4 5 (face font-lock-string-face fontified t)) #("100" 0 3 (fontified t)) "buffer" "res" #(":id" 0 1 (face (clojure-keyword-face) cider-locals ("m" "tx" "m-id" "m-namespace" "m-details" "m-e" "db" "value" "valueType" "id" "t" "sibling-id" "first-child-id" "parent-id" "sibling" "firstChild" "parent" "details" "db" "status" "id" "mt" "activity" "tx" "task-id" "assignee" "measurementTemplates" "dueDate" "description" "name" "activity" "username" "tx" "dueDate" "description" "name" "projectId") fontified t help-echo cider--help-echo) 1 3 (face (clojure-keyword-face) cider-locals ("m" "tx" "m-id" "m-namespace" "m-details" "m-e" "db" "value" "valueType" "id" "t" "sibling-id" "first-child-id" "parent-id" "sibling" "firstChild" "parent" "details" "db" "status" "id" "mt" "activity" "tx" "task-id" "assignee" "measurementTemplates" "dueDate" "description" "name" "activity" "username" "tx" "dueDate" "description" "name" "projectId") fontified t help-echo cider--help-echo))))
(setq minibuffer-history '("dash" "/home/puneet/code/work/controlroom/controlroom-api-poc/src/api/handler.clj" "han" "/home/puneet/code/work/controlroom/controlroom-api-poc/src/dtm/util.clj" "rep" "evil" "uti" "pro" "han" "proje" "han" "write" "init" "write" "apiwri" "han" "apisc" "/home/puneet/code/work/controlroom/controlroom-api-poc/src/debug/trace.clj" "trac" "/home/puneet/code/work/controlroom/controlroom-api-poc/src/api/write.clj" "apiwri" "rep" "util" "han" "sch" "write" "apiwri" "sche" "han" "conve" "/home/puneet/code/work/controlroom/controlroom-api-poc/src/data/init.clj" "init" "rep" "han" "/home/puneet/code/work/controlroom/controlroom-api-poc/src/api/write.clj" "ini" #(":user/photo" 0 1 (cider-old-input 46 face (clojure-keyword-face) fontified t) 1 5 (cider-old-input 46 face (font-lock-type-face clojure-keyword-face) fontified t) 5 6 (cider-old-input 46 face (default clojure-keyword-face) fontified t) 6 11 (cider-old-input 46 face (clojure-keyword-face) fontified t)) "rep" "apiwr" "han" "apiwri" "ini" "api" "rep" "apisc" "apiut" "hand" "writ" "/home/puneet/code/work/controlroom/controlroom-api-poc/src/data/init.clj" "sche" "init" "repl" "util" "apisch" "sche" "dtmsch" "220" "1" "apisch" "init" "apiwri" "writ" "/home/puneet/code/work/controlroom/controlroom-api-poc/src/api/util.clj" "apit" "/home/puneet/code/work/controlroom/controlroom-api-poc/src/config/db_admin.clj" "con" "postg" "han" "wri" "dash" "init" "admin" "rep" "/home/puneet/code/work/controlroom/controlroom-api-poc/src/api/util.clj" "api.util" "/home/puneet/code/work/controlroom/controlroom-api-poc/src/config/admin.clj" "con" "init" "apiwri" "write" "hand" "sch" "sche" "apisch" "ini" "inin" "/home/puneet/code/work/controlroom/controlroom-api-poc/src/config/dtm" "con" "/home/puneet/code/work/controlroom/controlroom-api-poc/src/dtm/write.clj" "rep" #("============================user/password/update============================" 0 32 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 32 33 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 33 34 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 34 35 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 35 36 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 36 37 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 37 38 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 38 39 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 39 40 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 40 41 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 41 42 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 42 43 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 43 44 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 44 45 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 45 75 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 75 76 (fontified t rear-nonsticky t help-echo cider--help-echo cider-locals nil face font-lock-comment-face)) #("password" 0 8 (fontified t help-echo cider--help-echo cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties"))) "dtmwri" "write" "sch" "api" "con" #("db/get-user-auth" 0 2 (fontified t help-echo cider--help-echo cider-locals ("params" "logic" "auth" "check-api-key" "check-username" "credentials" "check-password" "check-username") face font-lock-type-face) 2 3 (fontified t help-echo cider--help-echo cider-locals ("params" "logic" "auth" "check-api-key" "check-username" "credentials" "check-password" "check-username") face default) 3 16 (fontified t help-echo cider--help-echo cider-locals ("params" "logic" "auth" "check-api-key" "check-username" "credentials" "check-password" "check-username"))) #("convert/user-auth" 0 7 (fontified t help-echo cider--help-echo cider-locals ("username") face font-lock-type-face) 7 8 (fontified t help-echo cider--help-echo cider-locals ("username") face default) 8 17 (fontified t help-echo cider--help-echo cider-locals ("username"))) "auth"))
(setq helm-occur-history '("get" "retr" "tra" "trans" "uploa" "uplo" "unaut" "photo" "user" "photo" "update" "photo" "util" "pass" "photo" #("defn" 0 4 (face font-lock-keyword-face cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties") help-echo cider--help-echo fontified t)) "defn pass" "update" "user" "user-" "jaya" "tasks-t" "org-uni" "get-all" "get-all-va" "tags" "get-all-" "tags" "task-ta" "tags" "init" "send-em" "send" "hih_" "init" "org-u" "get-all" "state-tx" "sex" "sim" "clie" "sim" "org" "user" "activitysub" "tags" #("t41921:" 0 7 (rear-nonsticky (font-lock-face) font-lock-face cider-repl-stdout-face fontified t)) #("t41881:" 0 7 (rear-nonsticky (font-lock-face) font-lock-face cider-repl-stdout-face fontified t)) "dynam" "tags" "dynamic" "user-deta" "activity" "[A-Z]" "mar" "[A-Z]" "*[A-Z]" "simpl" "dyna" "user" "activities" "activitysu" "activi" "get-org" "log" "user" "adduser" "crede" "put" "templat" "case" "nil" "user" "put " "dtm-util" "position" "etemp" "option" "(p " "activity" "submission" "submissi" "auth" "submi" "submission" "tasksub" "activity" "drop-all" "empty" "create" "updated" "[\"Wa" "init" "activity" "resu" "transact" "transa" "tran" "file" "fill"))
(setq kill-ring '(#("()" 0 1 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-4-face)) 1 2 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-4-face))) "7899238c-4c61-4f64-9826-80ee1e65ccd0" #("f7c62d95-03eb-4031-85be-3ab780f77653" 0 36 (fontified t face font-lock-string-face)) "7899238c-4c61-4f64-9826-80ee1e65ccd0" "\"f7c62d95-03eb-4031-85be-3ab780f7765c\"" #("#cors/wrap-cors %
" 0 1 (cider-locals ("c/api" "cors/wrap-cors") help-echo cider--help-echo fontified t) 1 5 (face font-lock-type-face cider-locals ("c/api" "cors/wrap-cors") help-echo cider--help-echo fontified t) 5 6 (face default cider-locals ("c/api" "cors/wrap-cors") help-echo cider--help-echo fontified t) 6 16 (cider-locals ("c/api" "cors/wrap-cors") help-echo cider--help-echo fontified t) 16 17 (face font-lock-variable-name-face cider-locals ("c/api" "cors/wrap-cors") fontified t help-echo cider--help-echo) 17 18 (cider-locals ("c/api" "cors/wrap-cors") fontified t help-echo cider--help-echo)) #("#(cors/wrap-cors %
                                                    :access-control-allow-origin [#\".*\"]
                                                    :access-control-allow-methods [:put])" 0 1 (help-echo cider--help-echo fontified t cider-locals ("c/api")) 1 2 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-6-face)) 2 6 (help-echo cider--help-echo fontified t cider-locals ("c/api") face font-lock-type-face) 6 7 (fontified t help-echo cider--help-echo cider-locals ("c/api") face default) 7 17 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 17 18 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-variable-name-face) 18 19 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 19 71 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 71 99 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (clojure-keyword-face)) 99 100 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 100 101 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-7-face)) 101 102 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 102 105 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-string-face) 105 106 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-string-face) 106 107 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-7-face)) 107 108 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 108 160 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 160 189 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (clojure-keyword-face)) 189 190 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 190 191 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-7-face)) 191 195 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (clojure-keyword-face)) 195 196 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-7-face)) 196 197 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-6-face))) "curl -H \"Origin: http://example.com\" --verbose \\
  https://www.googleapis.com/discovery/v1/apis?fields=" "{
  \"photo\": \"bbbbb\",
  \"username\": \"8736960000\",
  \"creds\": {
  \"username\": \"admin\",
  \"apiKey\": \"AgY4QqfSX2cxwdSrv29BcjHKdSVEUfqJA8GPN8jf\"
}
}" #(";;; ====================PUT user/password/update================================" 0 4 (face font-lock-comment-delimiter-face cider-locals ("c/api") help-echo cider--help-echo fontified t) 4 80 (face font-lock-comment-face cider-locals ("c/api") help-echo cider--help-echo fontified t)) #(" " 0 1 (face font-lock-string-face cider-locals ("c/api") fontified t help-echo cider--help-echo)) ";;; ====================PUT user/password/update================================


               (c/PUT \"/v0.1/user/password/update\" []
                      :return schema/SendApiKey
                      :body [password schema/UpdatePassword]
                      :summary \"Updates the password for a user.\"
                      (write/password password))" ";;; ============================user/password/update============================


(defn password [username password]
  (if (auth/user-exists? username)
    (let [api-key (gen-password 20)
          tx {:user/username username
              :user/password password
              :user/api-key  api-key}]
      (util/transact [tx])
      {:result true
       :apiKey api-key})
    ({:result false
      :error \"user does not exist\"})))" #(":apiKey api-key" 0 7 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "username" "photo" "auth" "tx") fontified t help-echo cider--help-echo) 7 15 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "username" "photo" "auth" "tx") fontified t help-echo cider--help-echo)) #("(transact [{:db/id #db/id[:db.part/db]
  :db/ident :user/photo
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db.install/_attribute :db.part/db}])" 0 1 (cider-old-input 40 fontified t) 1 12 (cider-old-input 40 fontified t) 12 13 (cider-old-input 40 face (clojure-keyword-face) fontified t) 13 15 (cider-old-input 40 face (font-lock-type-face clojure-keyword-face) fontified t) 15 16 (cider-old-input 40 face (default clojure-keyword-face) fontified t) 16 18 (cider-old-input 40 face (clojure-keyword-face) fontified t) 18 20 (cider-old-input 40 fontified t) 20 22 (cider-old-input 40 face font-lock-type-face fontified t) 22 23 (cider-old-input 40 face default fontified t) 23 26 (cider-old-input 40 fontified t) 26 27 (cider-old-input 40 face (clojure-keyword-face) fontified t) 27 34 (cider-old-input 40 face (font-lock-type-face clojure-keyword-face) fontified t) 34 35 (cider-old-input 40 face (default clojure-keyword-face) fontified t) 35 37 (cider-old-input 40 face (clojure-keyword-face) fontified t) 37 39 (cider-old-input 40 fontified t) 39 41 (cider-old-input 40 fontified t) 41 42 (cider-old-input 40 face (clojure-keyword-face) fontified t) 42 44 (cider-old-input 40 face (font-lock-type-face clojure-keyword-face) fontified t) 44 45 (cider-old-input 40 face (default clojure-keyword-face) fontified t) 45 50 (cider-old-input 40 face (clojure-keyword-face) fontified t) 50 51 (cider-old-input 40 fontified t) 51 52 (cider-old-input 40 face (clojure-keyword-face) fontified t) 52 56 (cider-old-input 40 face (font-lock-type-face clojure-keyword-face) fontified t) 56 57 (cider-old-input 40 face (default clojure-keyword-face) fontified t) 57 62 (cider-old-input 40 face (clojure-keyword-face) fontified t) 62 63 (cider-old-input 40 fontified t) 63 65 (cider-old-input 40 fontified t) 65 66 (cider-old-input 40 face (clojure-keyword-face) fontified t) 66 68 (cider-old-input 40 face (font-lock-type-face clojure-keyword-face) fontified t) 68 69 (cider-old-input 40 face (default clojure-keyword-face) fontified t) 69 78 (cider-old-input 40 face (clojure-keyword-face) fontified t) 78 79 (cider-old-input 40 fontified t) 79 80 (cider-old-input 40 face (clojure-keyword-face) fontified t) 80 87 (cider-old-input 40 face (font-lock-type-face clojure-keyword-face) fontified t) 87 88 (cider-old-input 40 face (default clojure-keyword-face) fontified t) 88 94 (cider-old-input 40 face (clojure-keyword-face) fontified t) 94 95 (cider-old-input 40 fontified t) 95 97 (cider-old-input 40 fontified t) 97 98 (cider-old-input 40 face (clojure-keyword-face) fontified t) 98 100 (cider-old-input 40 face (font-lock-type-face clojure-keyword-face) fontified t) 100 101 (cider-old-input 40 face (default clojure-keyword-face) fontified t) 101 112 (cider-old-input 40 face (clojure-keyword-face) fontified t) 112 113 (cider-old-input 40 fontified t) 113 114 (cider-old-input 40 face (clojure-keyword-face) fontified t) 114 128 (cider-old-input 40 face (font-lock-type-face clojure-keyword-face) fontified t) 128 129 (cider-old-input 40 face (default clojure-keyword-face) fontified t) 129 132 (cider-old-input 40 face (clojure-keyword-face) fontified t) 132 133 (cider-old-input 40 fontified t) 133 135 (cider-old-input 40 fontified t) 135 136 (cider-old-input 40 face (clojure-keyword-face) fontified t) 136 146 (cider-old-input 40 face (font-lock-type-face clojure-keyword-face) fontified t) 146 147 (cider-old-input 40 face (default clojure-keyword-face) fontified t) 147 157 (cider-old-input 40 face (clojure-keyword-face) fontified t) 157 158 (cider-old-input 40 fontified t) 158 159 (cider-old-input 40 face (clojure-keyword-face) fontified t) 159 166 (cider-old-input 40 face (font-lock-type-face clojure-keyword-face) fontified t) 166 167 (cider-old-input 40 face (default clojure-keyword-face) fontified t) 167 169 (cider-old-input 40 face (clojure-keyword-face) fontified t) 169 171 (cider-old-input 40 fontified t) 171 172 (cider-old-input 40 fontified t rear-nonsticky t)) #("(transact [{:db/id #db/id[:db.part/db]
  :db/ident :user/photo
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db.install/_attribute :db.part/db}])" 0 1 (cider-old-input 40 fontified t) 1 12 (cider-old-input 40 fontified t) 12 13 (cider-old-input 40 face (clojure-keyword-face) fontified t) 13 15 (cider-old-input 40 face (font-lock-type-face clojure-keyword-face) fontified t) 15 16 (cider-old-input 40 face (default clojure-keyword-face) fontified t) 16 18 (cider-old-input 40 face (clojure-keyword-face) fontified t) 18 20 (cider-old-input 40 fontified t) 20 22 (cider-old-input 40 face font-lock-type-face fontified t) 22 23 (cider-old-input 40 face default fontified t) 23 26 (cider-old-input 40 fontified t) 26 27 (cider-old-input 40 face (clojure-keyword-face) fontified t) 27 34 (cider-old-input 40 face (font-lock-type-face clojure-keyword-face) fontified t) 34 35 (cider-old-input 40 face (default clojure-keyword-face) fontified t) 35 37 (cider-old-input 40 face (clojure-keyword-face) fontified t) 37 39 (cider-old-input 40 fontified t) 39 41 (cider-old-input 40 fontified t) 41 42 (cider-old-input 40 face (clojure-keyword-face) fontified t) 42 44 (cider-old-input 40 face (font-lock-type-face clojure-keyword-face) fontified t) 44 45 (cider-old-input 40 face (default clojure-keyword-face) fontified t) 45 50 (cider-old-input 40 face (clojure-keyword-face) fontified t) 50 51 (cider-old-input 40 fontified t) 51 52 (cider-old-input 40 face (clojure-keyword-face) fontified t) 52 56 (cider-old-input 40 face (font-lock-type-face clojure-keyword-face) fontified t) 56 57 (cider-old-input 40 face (default clojure-keyword-face) fontified t) 57 62 (cider-old-input 40 face (clojure-keyword-face) fontified t) 62 63 (cider-old-input 40 fontified t) 63 65 (cider-old-input 40 fontified t) 65 66 (cider-old-input 40 face (clojure-keyword-face) fontified t) 66 68 (cider-old-input 40 face (font-lock-type-face clojure-keyword-face) fontified t) 68 69 (cider-old-input 40 face (default clojure-keyword-face) fontified t) 69 78 (cider-old-input 40 face (clojure-keyword-face) fontified t) 78 79 (cider-old-input 40 fontified t) 79 80 (cider-old-input 40 face (clojure-keyword-face) fontified t) 80 87 (cider-old-input 40 face (font-lock-type-face clojure-keyword-face) fontified t) 87 88 (cider-old-input 40 face (default clojure-keyword-face) fontified t) 88 94 (cider-old-input 40 face (clojure-keyword-face) fontified t) 94 95 (cider-old-input 40 fontified t) 95 97 (cider-old-input 40 fontified t) 97 98 (cider-old-input 40 face (clojure-keyword-face) fontified t) 98 100 (cider-old-input 40 face (font-lock-type-face clojure-keyword-face) fontified t) 100 101 (cider-old-input 40 face (default clojure-keyword-face) fontified t) 101 112 (cider-old-input 40 face (clojure-keyword-face) fontified t) 112 113 (cider-old-input 40 fontified t) 113 114 (cider-old-input 40 face (clojure-keyword-face) fontified t) 114 128 (cider-old-input 40 face (font-lock-type-face clojure-keyword-face) fontified t) 128 129 (cider-old-input 40 face (default clojure-keyword-face) fontified t) 129 132 (cider-old-input 40 face (clojure-keyword-face) fontified t) 132 133 (cider-old-input 40 fontified t) 133 135 (cider-old-input 40 fontified t) 135 136 (cider-old-input 40 face (clojure-keyword-face) fontified t) 136 146 (cider-old-input 40 face (font-lock-type-face clojure-keyword-face) fontified t) 146 147 (cider-old-input 40 face (default clojure-keyword-face) fontified t) 147 157 (cider-old-input 40 face (clojure-keyword-face) fontified t) 157 158 (cider-old-input 40 fontified t) 158 159 (cider-old-input 40 face (clojure-keyword-face) fontified t) 159 166 (cider-old-input 40 face (font-lock-type-face clojure-keyword-face) fontified t) 166 167 (cider-old-input 40 face (default clojure-keyword-face) fontified t) 167 169 (cider-old-input 40 face (clojure-keyword-face) fontified t) 169 171 (cider-old-input 40 fontified t) 171 172 (cider-old-input 40 fontified t rear-nonsticky t)) "(datomic/transact connection [{:db/id #db/id[:db.part/db]
  :db/ident :user-deets/enriched
  :db/valueType :db.type/boolean
  :db/cardinality :db.cardinality/one
  :db.install/_attribute :db.part/db}])" #("[?e :db.install/partition :db.part/db]" 0 4 (fontified t) 4 5 (face (clojure-keyword-face) fontified t) 5 15 (face (font-lock-type-face clojure-keyword-face) fontified t) 15 16 (face (default clojure-keyword-face) fontified t) 16 25 (face (clojure-keyword-face) fontified t) 25 26 (fontified t) 26 27 (face (clojure-keyword-face) fontified t) 27 34 (face (font-lock-type-face clojure-keyword-face) fontified t) 34 35 (face (default clojure-keyword-face) fontified t) 35 37 (face (clojure-keyword-face) fontified t) 37 38 (fontified t)) "(d/q '[:find ?ident :where
           [?e :db/ident ?ident]
           [_ :db.install/attribute ?e]
           [(.toString ?ident) ?val]
           [(.startsWith ?val \":user\")]] (d/db *conn*))
" "(defn get-user-schema [conn]
  (d/q '[:find ?id
         :where [?e :db/ident ?id]
                [_ :db.install/attribute ?e]
                [?e :db.install/partition :db.part/db]]
       (d/db conn)))" #(":user/password password
              :user/api-key  api-key" 0 1 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "username" "photo" "auth" "tx") fontified t help-echo cider--help-echo) 1 5 (face (font-lock-type-face clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "username" "photo" "auth" "tx") fontified t help-echo cider--help-echo) 5 6 (face (default clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "username" "photo" "auth" "tx") fontified t help-echo cider--help-echo) 6 8 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "username" "photo" "auth" "tx") fontified t help-echo cider--help-echo) 8 14 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "username" "photo" "auth" "tx") fontified t help-echo cider--help-echo) 14 15 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "username" "photo" "auth" "tx") fontified t help-echo cider--help-echo) 15 23 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "username" "photo" "auth" "tx") fontified t help-echo cider--help-echo) 23 24 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "username" "photo" "auth" "tx") fontified t help-echo cider--help-echo) 24 25 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "username" "photo" "auth" "tx")) 25 38 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "username" "photo" "auth" "tx")) 38 39 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "username" "photo" "auth" "tx") face (clojure-keyword-face)) 39 43 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "username" "photo" "auth" "tx") face (font-lock-type-face clojure-keyword-face)) 43 44 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "username" "photo" "auth" "tx") face (default clojure-keyword-face)) 44 49 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "username" "photo" "auth" "tx") face (clojure-keyword-face)) 49 51 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "username" "photo" "auth" "tx") face (clojure-keyword-face)) 51 60 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "username" "photo" "auth" "tx"))) #("api-key (gen-password 20)
          tx {:user/username username
              :user/password password
              :user/api-key  api-key}" 0 8 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx" "api-key") fontified t help-echo cider--help-echo) 8 9 (face (rainbow-delimiters-depth-5-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx" "api-key") fontified t help-echo cider--help-echo) 9 24 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx" "api-key") fontified t help-echo cider--help-echo) 24 25 (face (rainbow-delimiters-depth-5-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx" "api-key") fontified t help-echo cider--help-echo rear-nonsticky t) 25 26 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx") fontified t help-echo cider--help-echo) 26 36 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx")) 36 39 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx")) 39 40 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx") face (rainbow-delimiters-depth-5-face)) 40 41 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx") face (clojure-keyword-face)) 41 45 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx") face (font-lock-type-face clojure-keyword-face)) 45 46 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx") face (default clojure-keyword-face)) 46 54 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx") face (clojure-keyword-face)) 54 64 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx")) 64 78 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx")) 78 79 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx") face (clojure-keyword-face)) 79 83 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx") face (font-lock-type-face clojure-keyword-face)) 83 84 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx") face (default clojure-keyword-face)) 84 86 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx") face (clojure-keyword-face)) 86 92 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx") face (clojure-keyword-face)) 92 101 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx")) 101 102 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx")) 102 116 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx")) 116 117 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx") face (clojure-keyword-face)) 117 121 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx") face (font-lock-type-face clojure-keyword-face)) 121 122 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx") face (default clojure-keyword-face)) 122 127 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx") face (clojure-keyword-face)) 127 129 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx") face (clojure-keyword-face)) 129 138 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx")) 138 139 (help-echo cider--help-echo fontified t cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "photo" "auth" "tx") face (rainbow-delimiters-depth-5-face))) #("auth/user-exists? username" 0 4 (face font-lock-type-face cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key" "photo" "auth") fontified t help-echo cider--help-echo) 4 5 (face default cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key" "photo" "auth") fontified t help-echo cider--help-echo) 5 26 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key" "photo" "auth") fontified t help-echo cider--help-echo)) #(";;; ============================user/password/update============================


(defn password [username password]
  (if (auth/user-exists? username)
    (let [api-key (gen-password 20)
          tx {:user/username username
              :user/password password
              :user/api-key  api-key}]
      (util/transact [tx])
      {:result true
       :apiKey api-key})
    ({:result false
      :error \"user does not exist\"})))" 0 4 (face font-lock-comment-delimiter-face cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties") help-echo cider--help-echo fontified t) 4 81 (face font-lock-comment-face cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties") help-echo cider--help-echo fontified t) 81 83 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties") help-echo cider--help-echo fontified t) 83 84 (face (rainbow-delimiters-depth-1-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties") help-echo cider--help-echo fontified t) 84 88 (face font-lock-keyword-face cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties") help-echo cider--help-echo fontified t) 88 89 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 89 97 (face font-lock-function-name-face cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 97 98 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 98 99 (face (rainbow-delimiters-depth-2-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 99 116 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 116 117 (face (rainbow-delimiters-depth-2-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 117 120 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 120 121 (face (rainbow-delimiters-depth-2-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 121 123 (face font-lock-keyword-face cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 123 124 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 124 125 (face (rainbow-delimiters-depth-3-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 125 129 (face font-lock-type-face cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 129 130 (face default cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 130 151 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 151 152 (face (rainbow-delimiters-depth-3-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 152 153 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 153 157 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 157 158 (face (rainbow-delimiters-depth-3-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 158 161 (face font-lock-keyword-face cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 161 162 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 162 163 (face (rainbow-delimiters-depth-4-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 163 171 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 171 172 (face (rainbow-delimiters-depth-5-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 172 187 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 187 188 (face (rainbow-delimiters-depth-5-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo rear-nonsticky t fontified t) 188 199 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 199 202 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 202 203 (face (rainbow-delimiters-depth-5-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 203 204 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 204 208 (face (font-lock-type-face clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 208 209 (face (default clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 209 217 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 217 227 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 227 241 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 241 242 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 242 246 (face (font-lock-type-face clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 246 247 (face (default clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 247 249 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 249 255 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 255 264 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 264 265 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 265 279 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 279 280 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 280 284 (face (font-lock-type-face clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 284 285 (face (default clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 285 290 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 290 292 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 292 301 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 301 302 (face (rainbow-delimiters-depth-5-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 302 303 (face (rainbow-delimiters-depth-4-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 303 304 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 304 310 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 310 311 (face (rainbow-delimiters-depth-4-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 311 315 (face font-lock-type-face cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 315 316 (face default cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 316 325 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 325 326 (face (rainbow-delimiters-depth-5-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 326 328 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 328 329 (face (rainbow-delimiters-depth-5-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 329 330 (face (rainbow-delimiters-depth-4-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 330 331 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 331 337 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 337 338 (face (rainbow-delimiters-depth-4-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 338 345 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 345 346 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 346 350 (face font-lock-constant-face cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 350 351 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 351 358 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 358 365 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 365 373 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 373 374 (face (rainbow-delimiters-depth-4-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 374 375 (face (rainbow-delimiters-depth-3-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 375 376 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 376 380 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 380 381 (face (rainbow-delimiters-depth-3-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 381 382 (face (rainbow-delimiters-depth-4-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 382 389 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 389 390 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 390 395 (face font-lock-constant-face cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 395 396 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 396 402 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 402 408 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 408 409 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 409 430 (face font-lock-string-face cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 430 431 (face (rainbow-delimiters-depth-4-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 431 432 (face (rainbow-delimiters-depth-3-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 432 433 (face (rainbow-delimiters-depth-2-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 433 434 (face (rainbow-delimiters-depth-1-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo)) #(";;; ============================user/password/update============================


(defn password [username password]
  (if (auth/user-exists? username)
    (let [api-key (gen-password 20)
          tx {:user/username username
              :user/password password
              :user/api-key  api-key}]
      (util/transact [tx])
      {:result true
       :apiKey api-key})
    ({:result false
      :error \"user does not exist\"})))" 0 4 (face font-lock-comment-delimiter-face cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties") help-echo cider--help-echo fontified t) 4 81 (face font-lock-comment-face cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties") help-echo cider--help-echo fontified t) 81 83 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties") help-echo cider--help-echo fontified t) 83 84 (face (rainbow-delimiters-depth-1-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties") help-echo cider--help-echo fontified t) 84 88 (face font-lock-keyword-face cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties") help-echo cider--help-echo fontified t) 88 89 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 89 97 (face font-lock-function-name-face cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 97 98 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 98 99 (face (rainbow-delimiters-depth-2-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 99 116 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 116 117 (face (rainbow-delimiters-depth-2-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 117 120 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 120 121 (face (rainbow-delimiters-depth-2-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 121 123 (face font-lock-keyword-face cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 123 124 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 124 125 (face (rainbow-delimiters-depth-3-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 125 129 (face font-lock-type-face cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 129 130 (face default cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 130 151 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 151 152 (face (rainbow-delimiters-depth-3-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 152 153 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 153 157 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 157 158 (face (rainbow-delimiters-depth-3-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 158 161 (face font-lock-keyword-face cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username") help-echo cider--help-echo fontified t) 161 162 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 162 163 (face (rainbow-delimiters-depth-4-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 163 171 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 171 172 (face (rainbow-delimiters-depth-5-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 172 187 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 187 188 (face (rainbow-delimiters-depth-5-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo rear-nonsticky t fontified t) 188 199 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 199 202 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 202 203 (face (rainbow-delimiters-depth-5-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 203 204 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 204 208 (face (font-lock-type-face clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 208 209 (face (default clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 209 217 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 217 227 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 227 241 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 241 242 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 242 246 (face (font-lock-type-face clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 246 247 (face (default clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 247 249 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") help-echo cider--help-echo fontified t) 249 255 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 255 264 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 264 265 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 265 279 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 279 280 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 280 284 (face (font-lock-type-face clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 284 285 (face (default clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 285 290 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 290 292 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 292 301 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 301 302 (face (rainbow-delimiters-depth-5-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 302 303 (face (rainbow-delimiters-depth-4-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 303 304 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 304 310 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 310 311 (face (rainbow-delimiters-depth-4-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 311 315 (face font-lock-type-face cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 315 316 (face default cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 316 325 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 325 326 (face (rainbow-delimiters-depth-5-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 326 328 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 328 329 (face (rainbow-delimiters-depth-5-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 329 330 (face (rainbow-delimiters-depth-4-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 330 331 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 331 337 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 337 338 (face (rainbow-delimiters-depth-4-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 338 345 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 345 346 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 346 350 (face font-lock-constant-face cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 350 351 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 351 358 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 358 365 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 365 373 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 373 374 (face (rainbow-delimiters-depth-4-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 374 375 (face (rainbow-delimiters-depth-3-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 375 376 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 376 380 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 380 381 (face (rainbow-delimiters-depth-3-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 381 382 (face (rainbow-delimiters-depth-4-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 382 389 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 389 390 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 390 395 (face font-lock-constant-face cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 395 396 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 396 402 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 402 408 (face (clojure-keyword-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 408 409 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 409 430 (face font-lock-string-face cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 430 431 (face (rainbow-delimiters-depth-4-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 431 432 (face (rainbow-delimiters-depth-3-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 432 433 (face (rainbow-delimiters-depth-2-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo) 433 434 (face (rainbow-delimiters-depth-1-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx" "api-key") fontified t help-echo cider--help-echo)) #("(defn admin?
  ([admin]
   (= admin {:username config/username
             :password config/password}))

  ([username password]
   (and (= username config/username)
        (= password config/password))))" 0 1 (face (rainbow-delimiters-depth-1-face) cider-locals nil fontified t help-echo cider--help-echo) 1 5 (face font-lock-keyword-face cider-locals nil fontified t help-echo cider--help-echo) 5 6 (cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 6 12 (face font-lock-function-name-face cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 12 13 (cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 13 15 (cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 15 16 (face (rainbow-delimiters-depth-2-face) cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 16 17 (face (rainbow-delimiters-depth-3-face) cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 17 22 (cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 22 23 (face (rainbow-delimiters-depth-3-face) cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 23 24 (cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 24 27 (cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 27 28 (face (rainbow-delimiters-depth-3-face) cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 28 36 (cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 36 37 (face (rainbow-delimiters-depth-4-face) cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 37 46 (face (clojure-keyword-face) cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 46 47 (cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 47 53 (face font-lock-type-face cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 53 54 (face default cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 54 63 (cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 63 74 (cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 74 76 (cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 76 85 (face (clojure-keyword-face) cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 85 86 (cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 86 92 (face font-lock-type-face cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 92 93 (face default cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 93 101 (cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 101 102 (face (rainbow-delimiters-depth-4-face) cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 102 103 (face (rainbow-delimiters-depth-3-face) cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 103 104 (face (rainbow-delimiters-depth-2-face) cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 104 105 (cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 105 106 (cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 106 108 (cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 108 109 (face (rainbow-delimiters-depth-2-face) cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 109 110 (face (rainbow-delimiters-depth-3-face) cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 110 127 (cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 127 128 (face (rainbow-delimiters-depth-3-face) cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 128 129 (cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 129 132 (cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 132 133 (face (rainbow-delimiters-depth-3-face) cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 133 136 (face font-lock-keyword-face cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 136 137 (cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 137 138 (face (rainbow-delimiters-depth-4-face) cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 138 140 (cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 140 149 (cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 149 155 (face font-lock-type-face cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 155 156 (face default cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 156 164 (cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 164 165 (face (rainbow-delimiters-depth-4-face) cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 165 166 (cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 166 174 (cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 174 175 (face (rainbow-delimiters-depth-4-face) cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 175 186 (cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 186 192 (face font-lock-type-face cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 192 193 (face default cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 193 201 (cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 201 202 (face (rainbow-delimiters-depth-4-face) cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 202 203 (face (rainbow-delimiters-depth-3-face) cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 203 204 (face (rainbow-delimiters-depth-2-face) cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo) 204 205 (face (rainbow-delimiters-depth-1-face) cider-locals ("password" "username" "admin") fontified t help-echo cider--help-echo)) #("and (= username \"db-admin\")
           (= password \"\")" 0 3 (face font-lock-keyword-face cider-locals ("init" "password" "username") help-echo cider--help-echo fontified t) 3 4 (cider-locals ("init" "password" "username") help-echo cider--help-echo fontified t) 4 5 (face (rainbow-delimiters-depth-4-face) cider-locals ("init" "password" "username") help-echo cider--help-echo fontified t) 5 16 (cider-locals ("init" "password" "username") help-echo cider--help-echo fontified t) 16 26 (face font-lock-string-face cider-locals ("init" "password" "username") help-echo cider--help-echo fontified t) 26 27 (face (rainbow-delimiters-depth-4-face) cider-locals ("init" "password" "username") help-echo cider--help-echo fontified t) 27 28 (cider-locals ("init" "password" "username") help-echo cider--help-echo fontified t) 28 39 (fontified t help-echo cider--help-echo cider-locals ("init" "password" "username")) 39 40 (fontified t help-echo cider--help-echo cider-locals ("init" "password" "username") face (rainbow-delimiters-depth-4-face)) 40 51 (fontified t help-echo cider--help-echo cider-locals ("init" "password" "username")) 51 53 (fontified t help-echo cider--help-echo cider-locals ("init" "password" "username") face font-lock-string-face) 53 54 (fontified t help-echo cider--help-echo cider-locals ("init" "password" "username") face (rainbow-delimiters-depth-4-face))) #("update{DB}syvylyze<PostGres>" 0 28 (face font-lock-string-face cider-locals ("init" "password" "username") help-echo cider--help-echo fontified t)) #("AgY4QqfSX2cxwdSrv29BcjHKdSVEUfqJA8GPN8jf" 0 40 (face font-lock-doc-face cider-locals nil fontified t help-echo cider--help-echo)) #("AgY4QqfSX2cxwdSrv29BcjHKdSVEUfqJA8GPN8jf" 0 40 (face font-lock-doc-face cider-locals nil fontified t help-echo cider--help-echo)) #("(and (= username \"admin\")
            (= password ))" 0 1 (face (rainbow-delimiters-depth-4-face) cider-locals ("defn" "uri" "conn" "demo" "password" "username" "_" "demo" "uri" "conn") help-echo cider--help-echo fontified t) 1 4 (face font-lock-keyword-face cider-locals ("defn" "uri" "conn" "demo" "password" "username" "_" "demo" "uri" "conn") help-echo cider--help-echo fontified t) 4 5 (cider-locals ("defn" "uri" "conn" "demo" "password" "username" "_" "demo" "uri" "conn") help-echo cider--help-echo fontified t) 5 6 (face (rainbow-delimiters-depth-5-face) cider-locals ("defn" "uri" "conn" "demo" "password" "username" "_" "demo" "uri" "conn") help-echo cider--help-echo fontified t) 6 17 (cider-locals ("defn" "uri" "conn" "demo" "password" "username" "_" "demo" "uri" "conn") help-echo cider--help-echo fontified t) 17 24 (face font-lock-string-face cider-locals ("defn" "uri" "conn" "demo" "password" "username" "_" "demo" "uri" "conn") help-echo cider--help-echo fontified t) 24 25 (face (rainbow-delimiters-depth-5-face) cider-locals ("defn" "uri" "conn" "demo" "password" "username" "_" "demo" "uri" "conn") help-echo cider--help-echo fontified t) 25 26 (cider-locals ("defn" "uri" "conn" "demo" "password" "username" "_" "demo" "uri" "conn") help-echo cider--help-echo fontified t) 26 38 (cider-locals ("defn" "uri" "conn" "demo" "password" "username" "_" "demo" "uri" "conn") help-echo cider--help-echo fontified t) 38 39 (face (rainbow-delimiters-depth-5-face) cider-locals ("defn" "uri" "conn" "demo" "password" "username" "_" "demo" "uri" "conn") help-echo cider--help-echo fontified t) 39 50 (cider-locals ("defn" "uri" "conn" "demo" "password" "username" "_" "demo" "uri" "conn") help-echo cider--help-echo fontified t) 50 51 (face (rainbow-delimiters-depth-5-face) cider-locals ("defn" "uri" "conn" "demo" "password" "username" "_" "demo" "uri" "conn") help-echo cider--help-echo fontified t) 51 52 (face (rainbow-delimiters-depth-4-face) cider-locals ("defn" "uri" "conn" "demo" "password" "username" "_" "demo" "uri" "conn") help-echo cider--help-echo fontified t)) #("\"AgY4QqfSX2cxwdSrv29BcjHKdSVEUfqJA8GPN8jf\"" 0 42 (face font-lock-string-face cider-locals ("defn" "uri" "conn" "demo" "password" "username" "_" "demo" "uri" "conn") help-echo cider--help-echo fontified t)) #(";;; ============================user/password/update============================


(defn password [{:keys [auth password]}]
  (auth/authorize-and-respond auth db/password password))
" 0 4 (face font-lock-comment-delimiter-face cider-locals nil help-echo cider--help-echo fontified t) 4 81 (face font-lock-comment-face cider-locals nil help-echo cider--help-echo fontified t) 81 83 (cider-locals nil help-echo cider--help-echo fontified t) 83 84 (face (rainbow-delimiters-depth-1-face) cider-locals nil help-echo cider--help-echo fontified t) 84 88 (face font-lock-keyword-face cider-locals nil help-echo cider--help-echo fontified t) 88 89 (cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 89 97 (face font-lock-function-name-face cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 97 98 (cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 98 99 (face (rainbow-delimiters-depth-2-face) cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 99 100 (face (rainbow-delimiters-depth-3-face) cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 100 105 (face (clojure-keyword-face) cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 105 106 (cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 106 107 (face (rainbow-delimiters-depth-4-face) cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 107 120 (cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 120 121 (face (rainbow-delimiters-depth-4-face) cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 121 122 (face (rainbow-delimiters-depth-3-face) cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 122 123 (face (rainbow-delimiters-depth-2-face) cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 123 126 (cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 126 127 (face (rainbow-delimiters-depth-2-face) cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 127 131 (face font-lock-type-face cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 131 132 (face default cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 132 159 (cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 159 161 (face font-lock-type-face cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 161 162 (face default cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 162 179 (cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 179 180 (face (rainbow-delimiters-depth-2-face) cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 180 181 (face (rainbow-delimiters-depth-1-face) cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 181 182 (cider-locals nil help-echo cider--help-echo fontified t)) #(";;; ============================user/password/update============================


(defn password [{:keys [auth password]}]
  (auth/authorize-and-respond auth db/password password))
" 0 4 (face font-lock-comment-delimiter-face cider-locals nil help-echo cider--help-echo fontified t) 4 81 (face font-lock-comment-face cider-locals nil help-echo cider--help-echo fontified t) 81 83 (cider-locals nil help-echo cider--help-echo fontified t) 83 84 (face (rainbow-delimiters-depth-1-face) cider-locals nil help-echo cider--help-echo fontified t) 84 88 (face font-lock-keyword-face cider-locals nil help-echo cider--help-echo fontified t) 88 89 (cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 89 97 (face font-lock-function-name-face cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 97 98 (cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 98 99 (face (rainbow-delimiters-depth-2-face) cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 99 100 (face (rainbow-delimiters-depth-3-face) cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 100 105 (face (clojure-keyword-face) cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 105 106 (cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 106 107 (face (rainbow-delimiters-depth-4-face) cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 107 120 (cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 120 121 (face (rainbow-delimiters-depth-4-face) cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 121 122 (face (rainbow-delimiters-depth-3-face) cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 122 123 (face (rainbow-delimiters-depth-2-face) cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 123 126 (cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 126 127 (face (rainbow-delimiters-depth-2-face) cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 127 131 (face font-lock-type-face cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 131 132 (face default cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 132 159 (cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 159 161 (face font-lock-type-face cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 161 162 (face default cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 162 179 (cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 179 180 (face (rainbow-delimiters-depth-2-face) cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 180 181 (face (rainbow-delimiters-depth-1-face) cider-locals ("password" "auth") help-echo cider--help-echo fontified t) 181 182 (cider-locals nil help-echo cider--help-echo fontified t)) #("(s/defschema SendApiKey
  {:result          s/Bool
   (s/optional-key
     :apiKey)       s/Str
   (s/optional-key
     :error)        s/Str})


" 0 1 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-1-face)) 1 2 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 2 3 (help-echo cider--help-echo fontified t cider-locals nil face default) 3 12 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-keyword-face) 12 13 (help-echo cider--help-echo fontified t cider-locals nil) 13 23 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-function-name-face) 23 24 (help-echo cider--help-echo fontified t cider-locals nil) 24 26 (help-echo cider--help-echo fontified t cider-locals nil) 26 27 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-2-face)) 27 34 (help-echo cider--help-echo fontified t cider-locals nil face (clojure-keyword-face)) 34 44 (help-echo cider--help-echo fontified t cider-locals nil) 44 45 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 45 46 (help-echo cider--help-echo fontified t cider-locals nil face default) 46 50 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 50 51 (help-echo cider--help-echo fontified t cider-locals nil) 51 54 (help-echo cider--help-echo fontified t cider-locals nil) 54 55 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 55 56 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 56 57 (help-echo cider--help-echo fontified t cider-locals nil face default) 57 70 (help-echo cider--help-echo fontified t cider-locals nil) 70 75 (help-echo cider--help-echo fontified t cider-locals nil) 75 82 (help-echo cider--help-echo fontified t cider-locals nil face (clojure-keyword-face)) 82 83 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 83 90 (help-echo cider--help-echo fontified t cider-locals nil) 90 91 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 91 92 (help-echo cider--help-echo fontified t cider-locals nil face default) 92 95 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 95 96 (help-echo cider--help-echo fontified t cider-locals nil) 96 99 (help-echo cider--help-echo fontified t cider-locals nil) 99 100 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 100 101 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 101 102 (help-echo cider--help-echo fontified t cider-locals nil face default) 102 115 (help-echo cider--help-echo fontified t cider-locals nil) 115 120 (help-echo cider--help-echo fontified t cider-locals nil) 120 126 (help-echo cider--help-echo fontified t cider-locals nil face (clojure-keyword-face)) 126 127 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 127 135 (help-echo cider--help-echo fontified t cider-locals nil) 135 136 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 136 137 (help-echo cider--help-echo fontified t cider-locals nil face default) 137 140 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 140 141 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-2-face)) 141 142 (rear-nonsticky t help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-1-face)) 142 143 (help-echo cider--help-echo fontified t cider-locals nil) 143 144 (cider-locals nil fontified t help-echo cider--help-echo) 144 145 (help-echo cider--help-echo fontified t cider-locals nil)) #(";;; ============================PUT user/password/update========================


(s/defschema UpdatePassword
  {:password s/Str
   :auth     Auth})

(s/defschema SendApiKey
  {:result          s/Bool
   (s/optional-key
     :apiKey)       s/Str
   (s/optional-key
     :error)        s/Str})" 0 4 (face font-lock-comment-delimiter-face cider-locals nil help-echo cider--help-echo fontified t) 4 81 (face font-lock-comment-face cider-locals nil help-echo cider--help-echo fontified t) 81 83 (cider-locals nil help-echo cider--help-echo fontified t) 83 84 (face (rainbow-delimiters-depth-1-face) cider-locals nil help-echo cider--help-echo fontified t) 84 85 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 85 86 (face default cider-locals nil help-echo cider--help-echo fontified t) 86 95 (face font-lock-keyword-face cider-locals nil help-echo cider--help-echo fontified t) 95 96 (cider-locals nil help-echo cider--help-echo fontified t) 96 110 (face font-lock-function-name-face cider-locals nil help-echo cider--help-echo fontified t) 110 111 (cider-locals nil help-echo cider--help-echo fontified t) 111 113 (cider-locals nil help-echo cider--help-echo fontified t) 113 114 (face (rainbow-delimiters-depth-2-face) cider-locals nil help-echo cider--help-echo fontified t) 114 123 (face (clojure-keyword-face) cider-locals nil help-echo cider--help-echo fontified t) 123 124 (cider-locals nil help-echo cider--help-echo fontified t) 124 125 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 125 126 (face default cider-locals nil help-echo cider--help-echo fontified t) 126 129 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 129 130 (cider-locals nil help-echo cider--help-echo fontified t) 130 133 (cider-locals nil help-echo cider--help-echo fontified t) 133 138 (face (clojure-keyword-face) cider-locals nil help-echo cider--help-echo fontified t) 138 143 (cider-locals nil help-echo cider--help-echo fontified t) 143 147 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 147 148 (face (rainbow-delimiters-depth-2-face) cider-locals nil help-echo cider--help-echo fontified t) 148 149 (face (rainbow-delimiters-depth-1-face) cider-locals nil help-echo cider--help-echo fontified t) 149 150 (cider-locals nil help-echo cider--help-echo fontified t) 150 151 (cider-locals nil help-echo cider--help-echo fontified t) 151 152 (face (rainbow-delimiters-depth-1-face) cider-locals nil help-echo cider--help-echo fontified t) 152 153 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 153 154 (face default cider-locals nil help-echo cider--help-echo fontified t) 154 163 (face font-lock-keyword-face cider-locals nil help-echo cider--help-echo fontified t) 163 164 (cider-locals nil help-echo cider--help-echo fontified t) 164 174 (face font-lock-function-name-face cider-locals nil help-echo cider--help-echo fontified t) 174 175 (cider-locals nil help-echo cider--help-echo fontified t) 175 177 (cider-locals nil help-echo cider--help-echo fontified t) 177 178 (face (rainbow-delimiters-depth-2-face) cider-locals nil help-echo cider--help-echo fontified t) 178 185 (face (clojure-keyword-face) cider-locals nil help-echo cider--help-echo fontified t) 185 195 (cider-locals nil help-echo cider--help-echo fontified t) 195 196 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 196 197 (face default cider-locals nil help-echo cider--help-echo fontified t) 197 201 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 201 202 (cider-locals nil help-echo cider--help-echo fontified t) 202 205 (cider-locals nil help-echo cider--help-echo fontified t) 205 206 (face (rainbow-delimiters-depth-3-face) cider-locals nil help-echo cider--help-echo fontified t) 206 207 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 207 208 (face default cider-locals nil help-echo cider--help-echo fontified t) 208 221 (cider-locals nil help-echo cider--help-echo fontified t) 221 226 (cider-locals nil help-echo cider--help-echo fontified t) 226 233 (face (clojure-keyword-face) cider-locals nil help-echo cider--help-echo fontified t) 233 234 (face (rainbow-delimiters-depth-3-face) cider-locals nil help-echo cider--help-echo fontified t) 234 241 (cider-locals nil help-echo cider--help-echo fontified t) 241 242 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 242 243 (face default cider-locals nil help-echo cider--help-echo fontified t) 243 246 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 246 247 (cider-locals nil help-echo cider--help-echo fontified t) 247 250 (cider-locals nil help-echo cider--help-echo fontified t) 250 251 (face (rainbow-delimiters-depth-3-face) cider-locals nil help-echo cider--help-echo fontified t) 251 252 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 252 253 (face default cider-locals nil help-echo cider--help-echo fontified t) 253 266 (cider-locals nil help-echo cider--help-echo fontified t) 266 271 (cider-locals nil help-echo cider--help-echo fontified t) 271 277 (face (clojure-keyword-face) cider-locals nil help-echo cider--help-echo fontified t) 277 278 (face (rainbow-delimiters-depth-3-face) cider-locals nil help-echo cider--help-echo fontified t) 278 286 (cider-locals nil help-echo cider--help-echo fontified t) 286 287 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 287 288 (face default cider-locals nil help-echo cider--help-echo fontified t) 288 291 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 291 292 (face (rainbow-delimiters-depth-2-face) cider-locals nil help-echo cider--help-echo fontified t) 292 293 (face (rainbow-delimiters-depth-1-face) cider-locals nil help-echo cider--help-echo fontified t)) #(";;; ============================PUT user/password/update========================


(s/defschema UpdatePassword
  {:password s/Str
   :auth     Auth})

(s/defschema SendApiKey
  {:result          s/Bool
   (s/optional-key
     :apiKey)       s/Str
   (s/optional-key
     :error)        s/Str})" 0 4 (face font-lock-comment-delimiter-face cider-locals nil help-echo cider--help-echo fontified t) 4 81 (face font-lock-comment-face cider-locals nil help-echo cider--help-echo fontified t) 81 83 (cider-locals nil help-echo cider--help-echo fontified t) 83 84 (face (rainbow-delimiters-depth-1-face) cider-locals nil help-echo cider--help-echo fontified t) 84 85 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 85 86 (face default cider-locals nil help-echo cider--help-echo fontified t) 86 95 (face font-lock-keyword-face cider-locals nil help-echo cider--help-echo fontified t) 95 96 (cider-locals nil help-echo cider--help-echo fontified t) 96 110 (face font-lock-function-name-face cider-locals nil help-echo cider--help-echo fontified t) 110 111 (cider-locals nil help-echo cider--help-echo fontified t) 111 113 (cider-locals nil help-echo cider--help-echo fontified t) 113 114 (face (rainbow-delimiters-depth-2-face) cider-locals nil help-echo cider--help-echo fontified t) 114 123 (face (clojure-keyword-face) cider-locals nil help-echo cider--help-echo fontified t) 123 124 (cider-locals nil help-echo cider--help-echo fontified t) 124 125 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 125 126 (face default cider-locals nil help-echo cider--help-echo fontified t) 126 129 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 129 130 (cider-locals nil help-echo cider--help-echo fontified t) 130 133 (cider-locals nil help-echo cider--help-echo fontified t) 133 138 (face (clojure-keyword-face) cider-locals nil help-echo cider--help-echo fontified t) 138 143 (cider-locals nil help-echo cider--help-echo fontified t) 143 147 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 147 148 (face (rainbow-delimiters-depth-2-face) cider-locals nil help-echo cider--help-echo fontified t) 148 149 (face (rainbow-delimiters-depth-1-face) cider-locals nil help-echo cider--help-echo fontified t) 149 150 (cider-locals nil help-echo cider--help-echo fontified t) 150 151 (cider-locals nil help-echo cider--help-echo fontified t) 151 152 (face (rainbow-delimiters-depth-1-face) cider-locals nil help-echo cider--help-echo fontified t) 152 153 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 153 154 (face default cider-locals nil help-echo cider--help-echo fontified t) 154 163 (face font-lock-keyword-face cider-locals nil help-echo cider--help-echo fontified t) 163 164 (cider-locals nil help-echo cider--help-echo fontified t) 164 174 (face font-lock-function-name-face cider-locals nil help-echo cider--help-echo fontified t) 174 175 (cider-locals nil help-echo cider--help-echo fontified t) 175 177 (cider-locals nil help-echo cider--help-echo fontified t) 177 178 (face (rainbow-delimiters-depth-2-face) cider-locals nil help-echo cider--help-echo fontified t) 178 185 (face (clojure-keyword-face) cider-locals nil help-echo cider--help-echo fontified t) 185 195 (cider-locals nil help-echo cider--help-echo fontified t) 195 196 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 196 197 (face default cider-locals nil help-echo cider--help-echo fontified t) 197 201 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 201 202 (cider-locals nil help-echo cider--help-echo fontified t) 202 205 (cider-locals nil help-echo cider--help-echo fontified t) 205 206 (face (rainbow-delimiters-depth-3-face) cider-locals nil help-echo cider--help-echo fontified t) 206 207 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 207 208 (face default cider-locals nil help-echo cider--help-echo fontified t) 208 221 (cider-locals nil help-echo cider--help-echo fontified t) 221 226 (cider-locals nil help-echo cider--help-echo fontified t) 226 233 (face (clojure-keyword-face) cider-locals nil help-echo cider--help-echo fontified t) 233 234 (face (rainbow-delimiters-depth-3-face) cider-locals nil help-echo cider--help-echo fontified t) 234 241 (cider-locals nil help-echo cider--help-echo fontified t) 241 242 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 242 243 (face default cider-locals nil help-echo cider--help-echo fontified t) 243 246 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 246 247 (cider-locals nil help-echo cider--help-echo fontified t) 247 250 (cider-locals nil help-echo cider--help-echo fontified t) 250 251 (face (rainbow-delimiters-depth-3-face) cider-locals nil help-echo cider--help-echo fontified t) 251 252 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 252 253 (face default cider-locals nil help-echo cider--help-echo fontified t) 253 266 (cider-locals nil help-echo cider--help-echo fontified t) 266 271 (cider-locals nil help-echo cider--help-echo fontified t) 271 277 (face (clojure-keyword-face) cider-locals nil help-echo cider--help-echo fontified t) 277 278 (face (rainbow-delimiters-depth-3-face) cider-locals nil help-echo cider--help-echo fontified t) 278 286 (cider-locals nil help-echo cider--help-echo fontified t) 286 287 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 287 288 (face default cider-locals nil help-echo cider--help-echo fontified t) 288 291 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 291 292 (face (rainbow-delimiters-depth-2-face) cider-locals nil help-echo cider--help-echo fontified t) 292 293 (face (rainbow-delimiters-depth-1-face) cider-locals nil help-echo cider--help-echo fontified t)) #("SendApiKey" 0 10 (face font-lock-type-face cider-locals ("c/api") fontified t help-echo cider--help-echo)) #(";;; ====================PUT user/password/update================================


               (c/PUT \"/v0.1/user/password/update\" []
                      :return schema/SendApiKey
                      :body [password schema/UpdatePassword]
                      :summary \"Updates the password for a user.\"
                      (write/password password))" 0 4 (face font-lock-comment-delimiter-face cider-locals ("c/api") help-echo cider--help-echo fontified t) 4 32 (face font-lock-comment-face cider-locals ("c/api") help-echo cider--help-echo fontified t) 32 41 (face font-lock-comment-face cider-locals ("c/api") help-echo cider--help-echo fontified t) 41 48 (face font-lock-comment-face cider-locals ("c/api") help-echo cider--help-echo fontified t) 48 81 (face font-lock-comment-face cider-locals ("c/api") help-echo cider--help-echo fontified t) 81 82 (cider-locals ("c/api") help-echo cider--help-echo fontified t) 82 98 (cider-locals ("c/api") fontified t help-echo cider--help-echo) 98 99 (face (rainbow-delimiters-depth-4-face) cider-locals ("c/api") fontified t help-echo cider--help-echo) 99 100 (face font-lock-type-face cider-locals ("c/api") fontified t help-echo cider--help-echo) 100 101 (face default cider-locals ("c/api") fontified t help-echo cider--help-echo) 101 104 (face font-lock-constant-face cider-locals ("c/api") fontified t help-echo cider--help-echo) 104 105 (cider-locals ("c/api") fontified t help-echo cider--help-echo) 105 133 (face font-lock-string-face cider-locals ("c/api") fontified t help-echo cider--help-echo) 133 134 (cider-locals ("c/api") fontified t help-echo cider--help-echo) 134 135 (face (rainbow-delimiters-depth-5-face) cider-locals ("c/api") fontified t help-echo cider--help-echo) 135 136 (face (rainbow-delimiters-depth-5-face) cider-locals ("c/api") fontified t help-echo cider--help-echo) 136 137 (cider-locals ("c/api") fontified t help-echo cider--help-echo) 137 159 (cider-locals ("c/api") fontified t help-echo cider--help-echo) 159 166 (face (clojure-keyword-face) cider-locals ("c/api") fontified t help-echo cider--help-echo) 166 167 (cider-locals ("c/api") fontified t help-echo cider--help-echo) 167 173 (face font-lock-type-face cider-locals ("c/api") fontified t help-echo cider--help-echo) 173 174 (face default cider-locals ("c/api") fontified t help-echo cider--help-echo) 174 184 (face font-lock-type-face cider-locals ("c/api") fontified t help-echo cider--help-echo) 184 185 (cider-locals ("c/api") fontified t help-echo cider--help-echo) 185 207 (cider-locals ("c/api") fontified t help-echo cider--help-echo) 207 212 (face (clojure-keyword-face) cider-locals ("c/api") fontified t help-echo cider--help-echo) 212 213 (cider-locals ("c/api") fontified t help-echo cider--help-echo) 213 214 (face (rainbow-delimiters-depth-5-face) cider-locals ("c/api") fontified t help-echo cider--help-echo) 214 223 (cider-locals ("c/api") fontified t help-echo cider--help-echo) 223 229 (face font-lock-type-face cider-locals ("c/api") fontified t help-echo cider--help-echo) 229 230 (face default cider-locals ("c/api") fontified t help-echo cider--help-echo) 230 244 (face font-lock-type-face cider-locals ("c/api") fontified t help-echo cider--help-echo) 244 245 (face (rainbow-delimiters-depth-5-face) cider-locals ("c/api") fontified t help-echo cider--help-echo) 245 246 (cider-locals ("c/api") fontified t help-echo cider--help-echo) 246 268 (cider-locals ("c/api") fontified t help-echo cider--help-echo) 268 276 (face (clojure-keyword-face) cider-locals ("c/api") fontified t help-echo cider--help-echo) 276 277 (cider-locals ("c/api") fontified t help-echo cider--help-echo) 277 311 (face font-lock-string-face cider-locals ("c/api") fontified t help-echo cider--help-echo) 311 334 (cider-locals ("c/api") fontified t help-echo cider--help-echo) 334 335 (face (rainbow-delimiters-depth-5-face) cider-locals ("c/api") fontified t help-echo cider--help-echo) 335 340 (face font-lock-type-face cider-locals ("c/api") fontified t help-echo cider--help-echo) 340 341 (face default cider-locals ("c/api") fontified t help-echo cider--help-echo) 341 358 (cider-locals ("c/api") fontified t help-echo cider--help-echo) 358 359 (face (rainbow-delimiters-depth-5-face) cider-locals ("c/api") fontified t help-echo cider--help-echo) 359 360 (face (rainbow-delimiters-depth-4-face) cider-locals ("c/api") fontified t help-echo cider--help-echo)) "|Q1I_o#Q4+xhYf[z.E}Z" #("(gen-password 20)" 0 1 (face (rainbow-delimiters-depth-6-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx") help-echo cider--help-echo fontified t) 1 16 (cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx") help-echo cider--help-echo fontified t) 16 17 (face (rainbow-delimiters-depth-6-face) cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "password" "username" "tx") help-echo cider--help-echo fontified t)) "pomodoro mint applet" "8736960000" #(";;; ============================user/password/update============================" 0 4 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-delimiter-face) 4 36 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 36 37 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 37 38 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 38 39 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 39 40 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 40 41 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 41 42 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 42 43 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 43 44 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 44 45 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 45 46 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 46 47 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 47 48 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 48 49 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 49 80 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face)) #(";;; ===" 0 4 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-delimiter-face) 4 7 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face)) #(";;; ==================================user======================================


(defn user [{:keys [auth user]}]
  (auth/authorize-and-respond auth db/user user))" 0 4 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-delimiter-face) 4 81 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 81 83 (fontified t help-echo cider--help-echo cider-locals nil) 83 84 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-1-face)) 84 88 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-keyword-face) 88 89 (fontified t help-echo cider--help-echo cider-locals ("user" "auth")) 89 93 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face font-lock-function-name-face) 93 94 (fontified t help-echo cider--help-echo cider-locals ("user" "auth")) 94 95 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face (rainbow-delimiters-depth-2-face)) 95 96 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face (rainbow-delimiters-depth-3-face)) 96 101 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face (clojure-keyword-face)) 101 102 (fontified t help-echo cider--help-echo cider-locals ("user" "auth")) 102 103 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face (rainbow-delimiters-depth-4-face)) 103 112 (fontified t help-echo cider--help-echo cider-locals ("user" "auth")) 112 113 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face (rainbow-delimiters-depth-4-face)) 113 114 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face (rainbow-delimiters-depth-3-face)) 114 115 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face (rainbow-delimiters-depth-2-face)) 115 118 (fontified t help-echo cider--help-echo cider-locals ("user" "auth")) 118 119 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face (rainbow-delimiters-depth-2-face)) 119 123 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face font-lock-type-face) 123 124 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face default) 124 151 (fontified t help-echo cider--help-echo cider-locals ("user" "auth")) 151 153 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face font-lock-type-face) 153 154 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face default) 154 163 (fontified t help-echo cider--help-echo cider-locals ("user" "auth")) 163 164 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face (rainbow-delimiters-depth-2-face)) 164 165 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face (rainbow-delimiters-depth-1-face))) #(";;; ==================================user======================================


(defn user [{:keys [auth user]}]
  (auth/authorize-and-respond auth db/user user))" 0 4 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-delimiter-face) 4 81 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face) 81 83 (fontified t help-echo cider--help-echo cider-locals nil) 83 84 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-1-face)) 84 88 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-keyword-face) 88 89 (fontified t help-echo cider--help-echo cider-locals ("user" "auth")) 89 93 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face font-lock-function-name-face) 93 94 (fontified t help-echo cider--help-echo cider-locals ("user" "auth")) 94 95 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face (rainbow-delimiters-depth-2-face)) 95 96 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face (rainbow-delimiters-depth-3-face)) 96 101 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face (clojure-keyword-face)) 101 102 (fontified t help-echo cider--help-echo cider-locals ("user" "auth")) 102 103 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face (rainbow-delimiters-depth-4-face)) 103 112 (fontified t help-echo cider--help-echo cider-locals ("user" "auth")) 112 113 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face (rainbow-delimiters-depth-4-face)) 113 114 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face (rainbow-delimiters-depth-3-face)) 114 115 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face (rainbow-delimiters-depth-2-face)) 115 118 (fontified t help-echo cider--help-echo cider-locals ("user" "auth")) 118 119 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face (rainbow-delimiters-depth-2-face)) 119 123 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face font-lock-type-face) 123 124 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face default) 124 151 (fontified t help-echo cider--help-echo cider-locals ("user" "auth")) 151 153 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face font-lock-type-face) 153 154 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face default) 154 163 (fontified t help-echo cider--help-echo cider-locals ("user" "auth")) 163 164 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face (rainbow-delimiters-depth-2-face)) 164 165 (fontified t help-echo cider--help-echo cider-locals ("user" "auth") face (rainbow-delimiters-depth-1-face))) #("(s/defschema OptionalUser
  {(s/optional-key
     :firstName)    s/Str
   (s/optional-key
     :lastName)     s/Str
   (s/optional-key
     :title)        s/Str
   :phone           s/Str
   (s/optional-key
     :email)        s/Str
   (s/optional-key
     :orgUnit)      s/Str
   (s/optional-key
     :state)        s/Str
   (s/optional-key
     :password)     s/Str})" 0 1 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-1-face)) 1 2 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 2 3 (fontified t help-echo cider--help-echo cider-locals nil face default) 3 12 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-keyword-face) 12 13 (fontified t help-echo cider--help-echo cider-locals nil) 13 25 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-function-name-face) 25 28 (fontified t help-echo cider--help-echo cider-locals nil) 28 29 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-2-face)) 29 30 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-3-face)) 30 31 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 31 32 (fontified t help-echo cider--help-echo cider-locals nil face default) 32 45 (fontified t help-echo cider--help-echo cider-locals nil) 45 50 (fontified t help-echo cider--help-echo cider-locals nil) 50 60 (fontified t help-echo cider--help-echo cider-locals nil face (clojure-keyword-face)) 60 61 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-3-face)) 61 65 (fontified t help-echo cider--help-echo cider-locals nil) 65 66 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 66 67 (fontified t help-echo cider--help-echo cider-locals nil face default) 67 70 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 70 71 (fontified t help-echo cider--help-echo cider-locals nil) 71 74 (fontified t help-echo cider--help-echo cider-locals nil) 74 75 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-3-face)) 75 76 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 76 77 (fontified t help-echo cider--help-echo cider-locals nil face default) 77 90 (fontified t help-echo cider--help-echo cider-locals nil) 90 95 (fontified t help-echo cider--help-echo cider-locals nil) 95 104 (fontified t help-echo cider--help-echo cider-locals nil face (clojure-keyword-face)) 104 105 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-3-face)) 105 110 (fontified t help-echo cider--help-echo cider-locals nil) 110 111 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 111 112 (fontified t help-echo cider--help-echo cider-locals nil face default) 112 115 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 115 119 (fontified t help-echo cider--help-echo cider-locals nil) 119 120 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-3-face)) 120 121 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 121 122 (fontified t help-echo cider--help-echo cider-locals nil face default) 122 140 (fontified t help-echo cider--help-echo cider-locals nil) 140 146 (fontified t help-echo cider--help-echo cider-locals nil face (clojure-keyword-face)) 146 147 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-3-face)) 147 155 (fontified t help-echo cider--help-echo cider-locals nil) 155 156 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 156 157 (fontified t help-echo cider--help-echo cider-locals nil face default) 157 160 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 160 164 (fontified t help-echo cider--help-echo cider-locals nil) 164 170 (fontified t help-echo cider--help-echo cider-locals nil face (clojure-keyword-face)) 170 181 (fontified t help-echo cider--help-echo cider-locals nil) 181 182 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 182 183 (fontified t help-echo cider--help-echo cider-locals nil face default) 183 186 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 186 187 (fontified t help-echo cider--help-echo cider-locals nil) 187 190 (fontified t help-echo cider--help-echo cider-locals nil) 190 191 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-3-face)) 191 192 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 192 193 (fontified t help-echo cider--help-echo cider-locals nil face default) 193 206 (fontified t help-echo cider--help-echo cider-locals nil) 206 211 (fontified t help-echo cider--help-echo cider-locals nil) 211 217 (fontified t help-echo cider--help-echo cider-locals nil face (clojure-keyword-face)) 217 218 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-3-face)) 218 226 (fontified t help-echo cider--help-echo cider-locals nil) 226 227 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 227 228 (fontified t help-echo cider--help-echo cider-locals nil face default) 228 231 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 231 232 (fontified t help-echo cider--help-echo cider-locals nil) 232 235 (fontified t help-echo cider--help-echo cider-locals nil) 235 236 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-3-face)) 236 237 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 237 238 (fontified t help-echo cider--help-echo cider-locals nil face default) 238 251 (fontified t help-echo cider--help-echo cider-locals nil) 251 256 (fontified t help-echo cider--help-echo cider-locals nil) 256 264 (fontified t help-echo cider--help-echo cider-locals nil face (clojure-keyword-face)) 264 265 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-3-face)) 265 271 (fontified t help-echo cider--help-echo cider-locals nil) 271 272 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 272 273 (fontified t help-echo cider--help-echo cider-locals nil face default) 273 276 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 276 280 (fontified t help-echo cider--help-echo cider-locals nil) 280 281 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-3-face)) 281 282 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 282 283 (fontified t help-echo cider--help-echo cider-locals nil face default) 283 296 (fontified t help-echo cider--help-echo cider-locals nil) 296 301 (fontified t help-echo cider--help-echo cider-locals nil) 301 307 (fontified t help-echo cider--help-echo cider-locals nil face (clojure-keyword-face)) 307 308 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-3-face)) 308 316 (fontified t help-echo cider--help-echo cider-locals nil) 316 317 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 317 318 (fontified t help-echo cider--help-echo cider-locals nil face default) 318 321 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 321 322 (fontified t help-echo cider--help-echo cider-locals nil) 322 325 (fontified t help-echo cider--help-echo cider-locals nil) 325 326 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-3-face)) 326 327 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 327 328 (fontified t help-echo cider--help-echo cider-locals nil face default) 328 341 (fontified t help-echo cider--help-echo cider-locals nil) 341 346 (fontified t help-echo cider--help-echo cider-locals nil) 346 355 (fontified t help-echo cider--help-echo cider-locals nil face (clojure-keyword-face)) 355 356 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-3-face)) 356 361 (fontified t help-echo cider--help-echo cider-locals nil) 361 362 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 362 363 (fontified t help-echo cider--help-echo cider-locals nil face default) 363 366 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 366 367 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-2-face)) 367 368 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-1-face))) #(";;; ================================PUT user====================================


(s/defschema OptionalUser
  {(s/optional-key
     :firstName)    s/Str
   (s/optional-key
     :lastName)     s/Str
   (s/optional-key
     :title)        s/Str
   :phone           s/Str
   (s/optional-key
     :email)        s/Str
   (s/optional-key
     :orgUnit)      s/Str
   (s/optional-key
     :state)        s/Str
   (s/optional-key
     :password)     s/Str})

(s/defschema AddUser
  {:user  OptionalUser
   :auth  Auth})" 0 4 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-delimiter-face) 4 81 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face) 81 83 (help-echo cider--help-echo fontified t cider-locals nil) 83 84 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-1-face)) 84 85 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 85 86 (help-echo cider--help-echo fontified t cider-locals nil face default) 86 95 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-keyword-face) 95 96 (help-echo cider--help-echo fontified t cider-locals nil) 96 108 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-function-name-face) 108 111 (help-echo cider--help-echo fontified t cider-locals nil) 111 112 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-2-face)) 112 113 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 113 114 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 114 115 (help-echo cider--help-echo fontified t cider-locals nil face default) 115 128 (help-echo cider--help-echo fontified t cider-locals nil) 128 133 (help-echo cider--help-echo fontified t cider-locals nil) 133 143 (help-echo cider--help-echo fontified t cider-locals nil face (clojure-keyword-face)) 143 144 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 144 148 (help-echo cider--help-echo fontified t cider-locals nil) 148 149 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 149 150 (help-echo cider--help-echo fontified t cider-locals nil face default) 150 153 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 153 154 (help-echo cider--help-echo fontified t cider-locals nil) 154 157 (help-echo cider--help-echo fontified t cider-locals nil) 157 158 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 158 159 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 159 160 (help-echo cider--help-echo fontified t cider-locals nil face default) 160 173 (help-echo cider--help-echo fontified t cider-locals nil) 173 178 (help-echo cider--help-echo fontified t cider-locals nil) 178 187 (help-echo cider--help-echo fontified t cider-locals nil face (clojure-keyword-face)) 187 188 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 188 193 (help-echo cider--help-echo fontified t cider-locals nil) 193 194 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 194 195 (help-echo cider--help-echo fontified t cider-locals nil face default) 195 198 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 198 202 (help-echo cider--help-echo fontified t cider-locals nil) 202 203 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 203 204 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 204 205 (help-echo cider--help-echo fontified t cider-locals nil face default) 205 223 (help-echo cider--help-echo fontified t cider-locals nil) 223 229 (help-echo cider--help-echo fontified t cider-locals nil face (clojure-keyword-face)) 229 230 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 230 238 (help-echo cider--help-echo fontified t cider-locals nil) 238 239 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 239 240 (help-echo cider--help-echo fontified t cider-locals nil face default) 240 243 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 243 247 (help-echo cider--help-echo fontified t cider-locals nil) 247 253 (help-echo cider--help-echo fontified t cider-locals nil face (clojure-keyword-face)) 253 264 (help-echo cider--help-echo fontified t cider-locals nil) 264 265 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 265 266 (help-echo cider--help-echo fontified t cider-locals nil face default) 266 269 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 269 270 (help-echo cider--help-echo fontified t cider-locals nil) 270 273 (help-echo cider--help-echo fontified t cider-locals nil) 273 274 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 274 275 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 275 276 (help-echo cider--help-echo fontified t cider-locals nil face default) 276 289 (help-echo cider--help-echo fontified t cider-locals nil) 289 294 (help-echo cider--help-echo fontified t cider-locals nil) 294 300 (help-echo cider--help-echo fontified t cider-locals nil face (clojure-keyword-face)) 300 301 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 301 309 (help-echo cider--help-echo fontified t cider-locals nil) 309 310 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 310 311 (help-echo cider--help-echo fontified t cider-locals nil face default) 311 314 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 314 315 (help-echo cider--help-echo fontified t cider-locals nil) 315 318 (help-echo cider--help-echo fontified t cider-locals nil) 318 319 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 319 320 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 320 321 (help-echo cider--help-echo fontified t cider-locals nil face default) 321 334 (help-echo cider--help-echo fontified t cider-locals nil) 334 339 (help-echo cider--help-echo fontified t cider-locals nil) 339 347 (help-echo cider--help-echo fontified t cider-locals nil face (clojure-keyword-face)) 347 348 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 348 354 (help-echo cider--help-echo fontified t cider-locals nil) 354 355 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 355 356 (help-echo cider--help-echo fontified t cider-locals nil face default) 356 359 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 359 363 (help-echo cider--help-echo fontified t cider-locals nil) 363 364 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 364 365 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 365 366 (help-echo cider--help-echo fontified t cider-locals nil face default) 366 379 (help-echo cider--help-echo fontified t cider-locals nil) 379 384 (help-echo cider--help-echo fontified t cider-locals nil) 384 390 (help-echo cider--help-echo fontified t cider-locals nil face (clojure-keyword-face)) 390 391 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 391 399 (help-echo cider--help-echo fontified t cider-locals nil) 399 400 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 400 401 (help-echo cider--help-echo fontified t cider-locals nil face default) 401 404 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 404 405 (help-echo cider--help-echo fontified t cider-locals nil) 405 408 (help-echo cider--help-echo fontified t cider-locals nil) 408 409 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 409 410 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 410 411 (help-echo cider--help-echo fontified t cider-locals nil face default) 411 424 (help-echo cider--help-echo fontified t cider-locals nil) 424 429 (help-echo cider--help-echo fontified t cider-locals nil) 429 438 (help-echo cider--help-echo fontified t cider-locals nil face (clojure-keyword-face)) 438 439 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 439 444 (help-echo cider--help-echo fontified t cider-locals nil) 444 445 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 445 446 (help-echo cider--help-echo fontified t cider-locals nil face default) 446 449 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 449 450 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-2-face)) 450 451 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-1-face)) 451 452 (help-echo cider--help-echo fontified t cider-locals nil) 452 453 (help-echo cider--help-echo fontified t cider-locals nil) 453 454 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-1-face)) 454 455 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 455 456 (help-echo cider--help-echo fontified t cider-locals nil face default) 456 465 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-keyword-face) 465 466 (help-echo cider--help-echo fontified t cider-locals nil) 466 473 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-function-name-face) 473 474 (help-echo cider--help-echo fontified t cider-locals nil) 474 476 (help-echo cider--help-echo fontified t cider-locals nil) 476 477 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-2-face)) 477 482 (help-echo cider--help-echo fontified t cider-locals nil face (clojure-keyword-face)) 482 484 (help-echo cider--help-echo fontified t cider-locals nil) 484 496 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 496 497 (help-echo cider--help-echo fontified t cider-locals nil) 497 500 (help-echo cider--help-echo fontified t cider-locals nil) 500 505 (help-echo cider--help-echo fontified t cider-locals nil face (clojure-keyword-face)) 505 507 (help-echo cider--help-echo fontified t cider-locals nil) 507 511 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 511 512 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-2-face)) 512 513 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-1-face))) #(";;; ================================PUT user====================================


(s/defschema OptionalUser
  {(s/optional-key
     :firstName)    s/Str
   (s/optional-key
     :lastName)     s/Str
   (s/optional-key
     :title)        s/Str
   :phone           s/Str
   (s/optional-key
     :email)        s/Str
   (s/optional-key
     :orgUnit)      s/Str
   (s/optional-key
     :state)        s/Str
   (s/optional-key
     :password)     s/Str})

(s/defschema AddUser
  {:user  OptionalUser
   :auth  Auth})" 0 4 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-delimiter-face) 4 81 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face) 81 83 (help-echo cider--help-echo fontified t cider-locals nil) 83 84 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-1-face)) 84 85 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 85 86 (help-echo cider--help-echo fontified t cider-locals nil face default) 86 95 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-keyword-face) 95 96 (help-echo cider--help-echo fontified t cider-locals nil) 96 108 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-function-name-face) 108 111 (help-echo cider--help-echo fontified t cider-locals nil) 111 112 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-2-face)) 112 113 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 113 114 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 114 115 (help-echo cider--help-echo fontified t cider-locals nil face default) 115 128 (help-echo cider--help-echo fontified t cider-locals nil) 128 133 (help-echo cider--help-echo fontified t cider-locals nil) 133 143 (help-echo cider--help-echo fontified t cider-locals nil face (clojure-keyword-face)) 143 144 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 144 148 (help-echo cider--help-echo fontified t cider-locals nil) 148 149 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 149 150 (help-echo cider--help-echo fontified t cider-locals nil face default) 150 153 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 153 154 (help-echo cider--help-echo fontified t cider-locals nil) 154 157 (help-echo cider--help-echo fontified t cider-locals nil) 157 158 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 158 159 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 159 160 (help-echo cider--help-echo fontified t cider-locals nil face default) 160 173 (help-echo cider--help-echo fontified t cider-locals nil) 173 178 (help-echo cider--help-echo fontified t cider-locals nil) 178 187 (help-echo cider--help-echo fontified t cider-locals nil face (clojure-keyword-face)) 187 188 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 188 193 (help-echo cider--help-echo fontified t cider-locals nil) 193 194 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 194 195 (help-echo cider--help-echo fontified t cider-locals nil face default) 195 198 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 198 202 (help-echo cider--help-echo fontified t cider-locals nil) 202 203 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 203 204 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 204 205 (help-echo cider--help-echo fontified t cider-locals nil face default) 205 223 (help-echo cider--help-echo fontified t cider-locals nil) 223 229 (help-echo cider--help-echo fontified t cider-locals nil face (clojure-keyword-face)) 229 230 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 230 238 (help-echo cider--help-echo fontified t cider-locals nil) 238 239 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 239 240 (help-echo cider--help-echo fontified t cider-locals nil face default) 240 243 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 243 247 (help-echo cider--help-echo fontified t cider-locals nil) 247 253 (help-echo cider--help-echo fontified t cider-locals nil face (clojure-keyword-face)) 253 264 (help-echo cider--help-echo fontified t cider-locals nil) 264 265 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 265 266 (help-echo cider--help-echo fontified t cider-locals nil face default) 266 269 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 269 270 (help-echo cider--help-echo fontified t cider-locals nil) 270 273 (help-echo cider--help-echo fontified t cider-locals nil) 273 274 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 274 275 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 275 276 (help-echo cider--help-echo fontified t cider-locals nil face default) 276 289 (help-echo cider--help-echo fontified t cider-locals nil) 289 294 (help-echo cider--help-echo fontified t cider-locals nil) 294 300 (help-echo cider--help-echo fontified t cider-locals nil face (clojure-keyword-face)) 300 301 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 301 309 (help-echo cider--help-echo fontified t cider-locals nil) 309 310 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 310 311 (help-echo cider--help-echo fontified t cider-locals nil face default) 311 314 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 314 315 (help-echo cider--help-echo fontified t cider-locals nil) 315 318 (help-echo cider--help-echo fontified t cider-locals nil) 318 319 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 319 320 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 320 321 (help-echo cider--help-echo fontified t cider-locals nil face default) 321 334 (help-echo cider--help-echo fontified t cider-locals nil) 334 339 (help-echo cider--help-echo fontified t cider-locals nil) 339 347 (help-echo cider--help-echo fontified t cider-locals nil face (clojure-keyword-face)) 347 348 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 348 354 (help-echo cider--help-echo fontified t cider-locals nil) 354 355 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 355 356 (help-echo cider--help-echo fontified t cider-locals nil face default) 356 359 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 359 363 (help-echo cider--help-echo fontified t cider-locals nil) 363 364 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 364 365 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 365 366 (help-echo cider--help-echo fontified t cider-locals nil face default) 366 379 (help-echo cider--help-echo fontified t cider-locals nil) 379 384 (help-echo cider--help-echo fontified t cider-locals nil) 384 390 (help-echo cider--help-echo fontified t cider-locals nil face (clojure-keyword-face)) 390 391 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 391 399 (help-echo cider--help-echo fontified t cider-locals nil) 399 400 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 400 401 (help-echo cider--help-echo fontified t cider-locals nil face default) 401 404 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 404 405 (help-echo cider--help-echo fontified t cider-locals nil) 405 408 (help-echo cider--help-echo fontified t cider-locals nil) 408 409 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 409 410 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 410 411 (help-echo cider--help-echo fontified t cider-locals nil face default) 411 424 (help-echo cider--help-echo fontified t cider-locals nil) 424 429 (help-echo cider--help-echo fontified t cider-locals nil) 429 438 (help-echo cider--help-echo fontified t cider-locals nil face (clojure-keyword-face)) 438 439 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-3-face)) 439 444 (help-echo cider--help-echo fontified t cider-locals nil) 444 445 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 445 446 (help-echo cider--help-echo fontified t cider-locals nil face default) 446 449 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 449 450 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-2-face)) 450 451 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-1-face)) 451 452 (help-echo cider--help-echo fontified t cider-locals nil) 452 453 (help-echo cider--help-echo fontified t cider-locals nil) 453 454 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-1-face)) 454 455 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 455 456 (help-echo cider--help-echo fontified t cider-locals nil face default) 456 465 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-keyword-face) 465 466 (help-echo cider--help-echo fontified t cider-locals nil) 466 473 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-function-name-face) 473 474 (help-echo cider--help-echo fontified t cider-locals nil) 474 476 (help-echo cider--help-echo fontified t cider-locals nil) 476 477 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-2-face)) 477 482 (help-echo cider--help-echo fontified t cider-locals nil face (clojure-keyword-face)) 482 484 (help-echo cider--help-echo fontified t cider-locals nil) 484 496 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 496 497 (help-echo cider--help-echo fontified t cider-locals nil) 497 500 (help-echo cider--help-echo fontified t cider-locals nil) 500 505 (help-echo cider--help-echo fontified t cider-locals nil face (clojure-keyword-face)) 505 507 (help-echo cider--help-echo fontified t cider-locals nil) 507 511 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 511 512 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-2-face)) 512 513 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-1-face))) #(";;; ================================PUT user====================================


               (c/PUT \"/v0.1/user\" []
                      :return schema/Credentials
                      :body [user-details schema/AddUser]
                      :summary \"Returns the user data.\"
                      (write/user user-details))
" 0 4 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-comment-delimiter-face) 4 81 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-comment-face) 81 98 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 98 99 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-4-face)) 99 100 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 100 101 (fontified t help-echo cider--help-echo cider-locals ("c/api") face default) 101 104 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-constant-face) 104 105 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 105 117 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-string-face) 117 118 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 118 119 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 119 120 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 120 143 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 143 150 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (clojure-keyword-face)) 150 151 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 151 157 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 157 158 (fontified t help-echo cider--help-echo cider-locals ("c/api") face default) 158 169 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 169 192 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 192 197 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (clojure-keyword-face)) 197 198 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 198 199 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 199 212 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 212 218 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 218 219 (fontified t help-echo cider--help-echo cider-locals ("c/api") face default) 219 226 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 226 227 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 227 250 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 250 258 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (clojure-keyword-face)) 258 259 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 259 283 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-string-face) 283 284 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 284 306 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 306 307 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 307 312 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 312 313 (fontified t help-echo cider--help-echo cider-locals ("c/api") face default) 313 330 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 330 331 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 331 332 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-4-face)) 332 333 (fontified t help-echo cider--help-echo cider-locals ("c/api"))) #(";;; ================================PUT user====================================


               (c/PUT \"/v0.1/user\" []
                      :return schema/Credentials
                      :body [user-details schema/AddUser]
                      :summary \"Returns the user data.\"
                      (write/user user-details))
" 0 4 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-comment-delimiter-face) 4 81 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-comment-face) 81 98 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 98 99 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-4-face)) 99 100 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 100 101 (fontified t help-echo cider--help-echo cider-locals ("c/api") face default) 101 104 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-constant-face) 104 105 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 105 117 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-string-face) 117 118 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 118 119 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 119 120 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 120 143 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 143 150 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (clojure-keyword-face)) 150 151 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 151 157 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 157 158 (fontified t help-echo cider--help-echo cider-locals ("c/api") face default) 158 169 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 169 192 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 192 197 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (clojure-keyword-face)) 197 198 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 198 199 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 199 212 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 212 218 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 218 219 (fontified t help-echo cider--help-echo cider-locals ("c/api") face default) 219 226 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 226 227 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 227 250 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 250 258 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (clojure-keyword-face)) 258 259 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 259 283 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-string-face) 283 284 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 284 306 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 306 307 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 307 312 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 312 313 (fontified t help-echo cider--help-echo cider-locals ("c/api") face default) 313 330 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 330 331 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 331 332 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-4-face)) 332 333 (fontified t help-echo cider--help-echo cider-locals ("c/api"))) #("               (c/PUT \"/v0.1/user\" []
                      :return schema/Credentials
                      :body [user-details schema/AddUser]
                      :summary \"Returns the user data.\"
                      (write/user user-details))" 0 15 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 15 16 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-4-face)) 16 17 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 17 18 (fontified t help-echo cider--help-echo cider-locals ("c/api") face default) 18 21 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-constant-face) 21 22 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 22 34 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-string-face) 34 35 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 35 36 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 36 37 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 37 60 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 60 67 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (clojure-keyword-face)) 67 68 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 68 74 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 74 75 (fontified t help-echo cider--help-echo cider-locals ("c/api") face default) 75 86 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 86 109 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 109 114 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (clojure-keyword-face)) 114 115 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 115 116 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 116 129 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 129 135 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 135 136 (fontified t help-echo cider--help-echo cider-locals ("c/api") face default) 136 143 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 143 144 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 144 167 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 167 175 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (clojure-keyword-face)) 175 176 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 176 200 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-string-face) 200 201 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 201 223 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 223 224 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 224 229 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 229 230 (fontified t help-echo cider--help-echo cider-locals ("c/api") face default) 230 247 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 247 248 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 248 249 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-4-face))) #("               (c/PUT \"/v0.1/user\" []
                      :return schema/Credentials
                      :body [user-details schema/AddUser]
                      :summary \"Returns the user data.\"
                      (write/user user-details))" 0 15 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 15 16 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-4-face)) 16 17 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 17 18 (fontified t help-echo cider--help-echo cider-locals ("c/api") face default) 18 21 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-constant-face) 21 22 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 22 34 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-string-face) 34 35 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 35 36 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 36 37 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 37 60 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 60 67 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (clojure-keyword-face)) 67 68 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 68 74 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 74 75 (fontified t help-echo cider--help-echo cider-locals ("c/api") face default) 75 86 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 86 109 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 109 114 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (clojure-keyword-face)) 114 115 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 115 116 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 116 129 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 129 135 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 135 136 (fontified t help-echo cider--help-echo cider-locals ("c/api") face default) 136 143 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 143 144 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 144 167 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 167 175 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (clojure-keyword-face)) 175 176 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 176 200 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-string-face) 200 201 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 201 223 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 223 224 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 224 229 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 229 230 (fontified t help-echo cider--help-echo cider-locals ("c/api") face default) 230 247 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 247 248 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 248 249 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-4-face))) "com.amazonaws.services.s3.model.S3ObjectInputStream" #("java.io.BufferedInputStream" 0 8 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 8 16 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 16 27 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t)) #("wW24ZjLKDrRpq8etFZ7u3GGNzAWiQwejgL7HHmVn527W7jYz.jpg" 0 52 (fontified t face font-lock-string-face)) "=tpX{p}TAd" "8736960000" "(map #(apply data.parse-users-csv/send-email %)"))
=======
(setq cider-minibuffer-history '("file/download" "read/download" "schema/FileManifest" "object-store/put-object" "file/upload" "util/get-all-vals" "convert/project" "clojure.string/trim" "convert/user-auth" "db/get-user-auth" "convert/user-auth" "db/get-user-auth" "auth/login" "data/init" "dashboard/update-db" "write/init" "util/milliseconds-from" "convert/template-activity" "db/templates-activities" "read/templates-activities" "keys-emap" "read/templates-activities" "transform-map" "transform-map-plus" "c/tag" "c/task-tags" "dtm.util/sort-by-position" "assoc" "util/uuid" "util/filter-nil" "db/user" "auth/authorize-and-respond" "util/get-task-assigned-to-eid" "db/tasks-pending" "util/get-project-eid" "convert/task-completed" "auth/authorize-and-respond" "util/get-project-eid" "db/org-units" "read/org-units" "db/org-units" "org-units-manifest" "measurement" "db/tasks" "write/tasks" "get-project-eid" "util/get-assigner-eid" "db/tasks-pending" "read/tasks-pending" "util/assignee-details" "db/tasks-assigned" "read/tasks-assigned" "write/init" "key" "db/tasks" "db/templates-projects" "read/templates-projects" "project-templates-manifest" "auth/authorize-and-respond" "read/templates-projects" "schema/ProjectTemplatesDiff" "db/templates-projects" "read/templates-projects" "db/templates-projects" "read/templates-projects" "db/templates-projects" "read/templates-projects" "schema/ProjectTemplatesDiff" "db/templates-projects" "read/templates-projects" "convert/template-project" "template-project" "db/templates-projects" "read/templates-projects" "data/init" "write/tasks" "if-not" "db/tasks-assigned" "read/tasks-assigned" "db/tasks-completed" "read/tasks-completed" "db/tasks-pending" "read/tasks-pending" "read/org-units" "db/org-units" "util/diff" "read/tasks-pending" "read/org-units" "s/defschema" "util/get-org-unit-eid" "db/tasks-pending" "read/tasks-pending" "util/get-completed-tasks-ids" "db/tasks-completed" "read/tasks-completed" "convert/task-pending" "task-pending" "convert/task-pending" "db/tasks-pending" "read/tasks-pending"))
(setq search-ring '("rename" "delete" "combina"))
(setq buffer-name-history '("hih-users" "test.clj" "core.clj" "*cider-repl controlroom-api-poc*" "*unsent mail*" "*shell*" "data/ids.clj" "data/test.clj" "*unsent mail*" "*cider-repl controlroom-api-poc*" "*Ibuffer*" "*magit: controlroom-api-poc" "file.clj" "*Ibuffer*" "*haskell-process-log*" "*haskell*" "*Messages*" "*scratch*" "TAGS" "*Messages*" "*haskell*" "config.clj" "config" "*cider-error*" "init.el" "core.clj" "repl_commands.clj" "*cider-repl controlroom-api-poc*<2>" "*cider-repl controlroom-api-poc*" "*cider-error*" "api_schema.clj" "core.clj" "*Flycheck error messages*" "data" "test.clj" "api_schema.clj" "*cider-repl controlroom-dummy-api*" "*Flycheck error messages*" "*haskell*" "prime.hs" "*cider-repl controlroom-api-poc*" "project.clj" "*haskell*" "repl-dump" "*Bookmark List*" ".emacs~" "testrun.clj" "*cider-repl controlroom-dummy-api*" "datomic_schema_generator.clj" "repl-dump" "bst.hs" "mygram" "io" "exercises.hs" "*ansi-term*" "*terminal*" "scratch" "*Flycheck error messages*" "*magit-process: controlroom-dummy-api" "*magit-diff: controlroom-dummy-api" "*magit: controlroom-dummy-api" "pom.xml.asc" ".lei" "*cider-repl docker-compojure-hello-world-master*" "*unsent mail*" "ch" "ch3.hs" "*haskell*" "*terminal*" "ac-comphist.dat" "ch2.hs" "*cider-repl best_plan*" "*terminal*" "*ansi-term*" "*terminal*" "*shell*" "*grep*" "*magit: best_plan" "*heroku bash: bestplan*" "powerline-themes.el" "server.clj" "test.clj" "*Customize Face: Default*" "init.el" "*magit: .emacs.d" "*Customize Face: Default*" "isd.csv" "csv_gen.clj" "csv_gen.clj"))
(setq ido-buffer-history '("hih-users" "test.clj" "core.clj" "*cider-repl controlroom-api-poc*" "*unsent mail*" "*shell*" "data/ids.clj" "data/test.clj" "*unsent mail*" "*cider-repl controlroom-api-poc*" "*Ibuffer*" "*magit: controlroom-api-poc" "file.clj" "*Ibuffer*" "*haskell-process-log*" "*haskell*" "*Messages*" "*scratch*" "TAGS" "*Messages*" "*haskell*" "config.clj" "config" "*cider-error*" "init.el" "core.clj" "repl_commands.clj" "*cider-repl controlroom-api-poc*<2>" "*cider-repl controlroom-api-poc*" "*cider-error*" "api_schema.clj" "core.clj" "*Flycheck error messages*" "data" "test.clj" "api_schema.clj" "*cider-repl controlroom-dummy-api*" "*Flycheck error messages*" "*haskell*" "prime.hs" "*cider-repl controlroom-api-poc*" "project.clj" "*haskell*" "repl-dump" "*Bookmark List*" ".emacs~" "testrun.clj" "*cider-repl controlroom-dummy-api*" "datomic_schema_generator.clj" "repl-dump" "bst.hs" "mygram" "io" "exercises.hs" "*ansi-term*" "*terminal*" "scratch" "*Flycheck error messages*" "*magit-process: controlroom-dummy-api" "*magit-diff: controlroom-dummy-api" "*magit: controlroom-dummy-api" "pom.xml.asc" ".lei" "*cider-repl docker-compojure-hello-world-master*" "*unsent mail*" "ch" "ch3.hs" "*haskell*" "ac-comphist.dat" "ch2.hs" "*cider-repl best_plan*" "*terminal*" "*ansi-term*" "*terminal*" "*shell*" "*grep*" "*magit: best_plan" "*heroku bash: bestplan*" "powerline-themes.el" "server.clj" "test.clj" "*Customize Face: Default*" "init.el" "*magit: .emacs.d" "*Customize Face: Default*" "isd.csv" "*Custom Themes*"))
(setq face-name-history '("default" "all faces" "default" "all faces" "default"))
(setq helm-M-x-input-history '("eval" "pac" "pacin" "eval" "loa" "ins" "package-in" "ci" "cider" "b" "kill-ema" "eshell" "she" #("dtm-linking-tx" 0 14 (help-echo cider--help-echo fontified t cider-locals ("tx" "a-task-id" "m-task-a-measument-id" "m-task-id" "kvs" "val" "key" "cmap" "val" "key" "cmap" "n" "chars" "user-details" "_" "pass" "password" "state" "orgUnit" "email" "phone" "title" "lastName" "firstName" "tree" "uuid" "children" "template" "owner" "dtm-linking-tx" "template-with-ids" "tasks"))) #("template-with-ids" 0 17 (help-echo cider--help-echo fontified t cider-locals ("tx" "a-task-id" "m-task-a-measument-id" "m-task-id" "kvs" "val" "key" "cmap" "val" "key" "cmap" "n" "chars" "user-details" "_" "pass" "password" "state" "orgUnit" "email" "phone" "title" "lastName" "firstName" "tree" "uuid" "children" "template" "owner" "dtm-linking-tx" "template-with-ids" "tasks"))) #("map?" 0 4 (help-echo cider--help-echo fontified t cider-locals ("tree") face font-lock-builtin-face)) #("util/str->uuid" 0 4 (face font-lock-type-face cider-locals ("bindings" "init" "sym") help-echo cider--help-echo fontified t) 4 5 (face default cider-locals ("bindings" "init" "sym") help-echo cider--help-echo fontified t) 5 14 (cider-locals ("bindings" "init" "sym") help-echo cider--help-echo fontified t)) #("11111111-1111-1111-1111-111111110099" 0 33 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid") face font-lock-string-face) 33 36 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid") face font-lock-string-face)) #("users" 0 5 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid" "util/str->uuid") face font-lock-comment-face)) #("15b1b2e5-1111-4f3f-b4af-0000090dd070" 0 36 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid") face font-lock-string-face)) #("11111111-1111-1111-1111-111111110024" 0 33 (fontified t help-echo cider--help-echo cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid") face font-lock-string-face) 33 36 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid") face font-lock-string-face)) #("11111111-1111-1111-1111-111111110005" 0 33 (fontified t help-echo cider--help-echo cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid") face font-lock-string-face) 33 36 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid") face font-lock-string-face)) #("defs" 0 4 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid" "util/str->uuid") font-lock-multiline t face font-lock-keyword-face)) #("11111111-1111-1111-1111-111111110024" 0 33 (fontified t help-echo cider--help-echo cider-locals ("util/str->uuid" "util/str->uuid") face font-lock-string-face) 33 36 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid" "util/str->uuid") face font-lock-string-face)) #("11111111-1111-1111-1111-111111110005" 0 33 (fontified t help-echo cider--help-echo cider-locals ("util/str->uuid" "util/str->uuid") face font-lock-string-face) 33 36 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid" "util/str->uuid") face font-lock-string-face)) #("defs" 0 4 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid") font-lock-multiline t face font-lock-keyword-face)) #("util/str->uuid" 0 4 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid") face font-lock-type-face) 4 5 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid") face default) 5 14 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid"))) #("15b1b2e5-bcfb-4f3f-b4af-fadfa90dd070" 0 36 (help-echo cider--help-echo fontified t cider-locals ("util/str->uuid") face font-lock-string-face)) #("util/str->uuid" 0 4 (face font-lock-type-face cider-locals ("util/str->uuid") fontified t help-echo cider--help-echo) 4 5 (face default cider-locals ("util/str->uuid") fontified t help-echo cider--help-echo) 5 14 (cider-locals ("util/str->uuid") fontified t help-echo cider--help-echo)) #("14b1b2e5-bcfb-4f3f-b4af-fadfa90dd040" 0 33 (face font-lock-string-face cider-locals ("util/str->uuid") fontified t help-echo cider--help-echo) 33 36 (face font-lock-string-face cider-locals ("util/str->uuid") fontified t help-echo cider--help-echo)) #("util/str->uuid" 0 4 (face font-lock-type-face cider-locals ("util/str->uuid") fontified t help-echo cider--help-echo) 4 5 (face default cider-locals ("util/str->uuid") fontified t help-echo cider--help-echo) 5 14 (cider-locals ("util/str->uuid") fontified t help-echo cider--help-echo)) #("user> " 0 6 (rear-nonsticky (field read-only font-lock-face intangible) field cider-repl-prompt intangible t read-only t font-lock-face cider-repl-prompt-face fontified t)) #("12b1b2e5-bcfb-4f3f-b4af-fadfa90dd020" 0 36 (face font-lock-string-face cider-locals ("util/str->uuid") fontified t help-echo cider--help-echo)) #("11111111-1111-1111-1111-111111111010" 0 33 (face font-lock-string-face cider-locals ("util/str->uuid") fontified t help-echo cider--help-echo) 33 36 (face font-lock-string-face cider-locals ("util/str->uuid") fontified t help-echo cider--help-echo)) #("11111111-1111-1111-1111-111111111000" 0 33 (face font-lock-string-face cider-locals ("util/str->uuid") help-echo cider--help-echo fontified t) 33 36 (face font-lock-string-face cider-locals ("util/str->uuid") help-echo cider--help-echo fontified t)) #("util/str->uuid" 0 4 (face font-lock-type-face cider-locals ("util/str->uuid") fontified t help-echo cider--help-echo) 4 5 (face default cider-locals ("util/str->uuid") fontified t help-echo cider--help-echo) 5 14 (cider-locals ("util/str->uuid") fontified t help-echo cider--help-echo)) #("11b1b2e5-bcfb-4f3f-b4af-fadfa90dd010" 0 36 (face font-lock-string-face cider-locals ("util/str->uuid") fontified t help-echo cider--help-echo)) #("util/str->uuid" 0 4 (face font-lock-type-face cider-locals ("util/str->uuid") help-echo cider--help-echo fontified t) 4 5 (face default cider-locals ("util/str->uuid") help-echo cider--help-echo fontified t) 5 14 (cider-locals ("util/str->uuid") help-echo cider--help-echo fontified t)) #("10b1b2e5-bcfb-4f3f-b4af-fadfa90dd000" 0 36 (face font-lock-string-face cider-locals ("util/str->uuid") help-echo cider--help-echo fontified t)) #("m-v-quote-id" 0 2 (cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid") help-echo cider--help-echo fontified t) 2 9 (cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid") help-echo cider--help-echo fontified t) 9 12 (cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid") help-echo cider--help-echo fontified t)) #("mt-v-number-id" 0 3 (cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid") fontified t help-echo cider--help-echo) 3 11 (cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid") help-echo cider--help-echo fontified t) 11 14 (cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid") fontified t help-echo cider--help-echo)) #("mt-v-name-id" 0 3 (cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid") fontified t help-echo cider--help-echo) 3 9 (cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid") help-echo cider--help-echo fontified t) 9 12 (cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid") fontified t help-echo cider--help-echo)) #("m-sp-cost-id" 0 12 (cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid") fontified t help-echo cider--help-echo)) #("mt-i-number-id" 0 3 (cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid") fontified t help-echo cider--help-echo) 3 11 (cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid") help-echo cider--help-echo fontified t) 11 14 (cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid") fontified t help-echo cider--help-echo)) #("mt-i-name-id" 0 3 (cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid") fontified t help-echo cider--help-echo) 3 9 (cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid") help-echo cider--help-echo fontified t) 9 12 (cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid") fontified t help-echo cider--help-echo)) #("mt-i-address-id" 0 2 (cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid") fontified t help-echo cider--help-echo) 2 12 (cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid") help-echo cider--help-echo fontified t) 12 15 (cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid") fontified t help-echo cider--help-echo)) #("mt-i-location-id" 0 16 (cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid") fontified t help-echo cider--help-echo)) #("99b1b2e5-bcfb-4f3f-b4af-0000090dd014" 0 24 (face font-lock-string-face cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid" "util/str->uuid") fontified t help-echo cider--help-echo) 24 29 (face font-lock-string-face cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid" "util/str->uuid") fontified t help-echo cider--help-echo) 29 36 (face font-lock-string-face cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid" "util/str->uuid") fontified t help-echo cider--help-echo)) #("m-a-sidewalk-id" 0 15 (face font-lock-function-name-face font-lock-multiline t cider-locals ("util/str->uuid" "util/str->uuid" "util/str->uuid") help-echo cider--help-echo fontified t)) #("ids/t-school-id" 0 3 (face font-lock-type-face cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-school" "t-identify" "t-cost" "t-vendor" "t-complete" "mt-c-photo" "m-c-photo" "mt-v-quote" "m-v-quote" "mt-v-number" "m-v-number" "mt-v-name" "m-v-name" "mt-e-estimate" "m-e-estimate" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify") fontified t help-echo cider--help-echo) 3 4 (face default cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-school" "t-identify" "t-cost" "t-vendor" "t-complete" "mt-c-photo" "m-c-photo" "mt-v-quote" "m-v-quote" "mt-v-number" "m-v-number" "mt-v-name" "m-v-name" "mt-e-estimate" "m-e-estimate" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify") fontified t help-echo cider--help-echo) 4 15 (cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-school" "t-identify" "t-cost" "t-vendor" "t-complete" "mt-c-photo" "m-c-photo" "mt-v-quote" "m-v-quote" "mt-v-number" "m-v-number" "mt-v-name" "m-v-name" "mt-e-estimate" "m-e-estimate" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify") fontified t help-echo cider--help-echo)) #("t-wo" 0 4 (cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-cost" "t-vendor" "t-complete" "mt-c-photo" "m-c-photo" "mt-v-quote" "m-v-quote" "mt-v-number" "m-v-number" "mt-v-name" "m-v-name" "mt-e-estimate" "m-e-estimate" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify") fontified t help-echo cider--help-echo)) #("t-df" 0 4 (cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-vendor" "t-complete" "mt-c-photo" "m-c-photo" "mt-v-quote" "m-v-quote" "mt-v-number" "m-v-number" "mt-v-name" "m-v-name" "mt-e-estimate" "m-e-estimate" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify") fontified t help-echo cider--help-echo)) #("t-complete" 0 10 (cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-vendor" "t-complete" "mt-c-photo" "m-c-photo" "mt-v-quote" "m-v-quote" "mt-v-number" "m-v-number" "mt-v-name" "m-v-name" "mt-e-estimate" "m-e-estimate" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify") fontified t help-echo cider--help-echo)) #("ids/t-ll-id" 0 3 (face font-lock-type-face cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-vendor" "t-complete" "mt-c-photo" "m-c-photo" "mt-v-quote" "m-v-quote" "mt-v-number" "m-v-number" "mt-v-name" "m-v-name" "mt-e-estimate" "m-e-estimate" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify") fontified t help-echo cider--help-echo) 3 4 (face default cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-vendor" "t-complete" "mt-c-photo" "m-c-photo" "mt-v-quote" "m-v-quote" "mt-v-number" "m-v-number" "mt-v-name" "m-v-name" "mt-e-estimate" "m-e-estimate" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify") fontified t help-echo cider--help-echo) 4 11 (cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-vendor" "t-complete" "mt-c-photo" "m-c-photo" "mt-v-quote" "m-v-quote" "mt-v-number" "m-v-number" "mt-v-name" "m-v-name" "mt-e-estimate" "m-e-estimate" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify") fontified t help-echo cider--help-echo)) #("m-c-photo" 0 9 (cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-c-photo" "m-c-photo" "mt-v-quote" "m-v-quote" "mt-v-number" "m-v-number" "mt-v-name" "m-v-name" "mt-e-estimate" "m-e-estimate" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify") fontified t help-echo cider--help-echo)) #("m-e-estimate" 0 1 (cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-e-estimate" "m-e-estimate" "mt-v-number" "m-v-number" "mt-v-name" "m-v-name" "mt-e-estimate" "m-e-estimate" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify") help-echo cider--help-echo fontified t) 1 12 (cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-e-estimate" "m-e-estimate" "mt-v-number" "m-v-number" "mt-v-name" "m-v-name" "mt-e-estimate" "m-e-estimate" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify") help-echo cider--help-echo fontified t)) #("m-i-number" 0 1 (cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-i-number" "m-i-number" "mt-v-name" "m-v-name" "mt-e-estimate" "m-e-estimate" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify") fontified t help-echo cider--help-echo) 1 10 (cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-i-number" "m-i-number" "mt-v-name" "m-v-name" "mt-e-estimate" "m-e-estimate" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify") fontified t help-echo cider--help-echo)) #("m-i-name" 0 1 (cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-e-estimate" "m-e-estimate" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify") help-echo cider--help-echo fontified t) 1 8 (cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-e-estimate" "m-e-estimate" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify") help-echo cider--help-echo fontified t)) #("m-wo-number" 0 11 (cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-i-number" "m-i-number" "mt-i-name" "m-i-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify") fontified t help-echo cider--help-echo)) #("m-number" 0 8 (cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-i-name" "m-i-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify") fontified t help-echo cider--help-echo)) #("m-name" 0 6 (cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-i-address" "m-i-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify") fontified t help-echo cider--help-echo)) #("m-address" 0 9 (cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-i-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify") fontified t help-echo cider--help-echo)) #("mt-location" 0 11 (cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-i-location" "mt-a-complete" "m-a-complete" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify") fontified t help-echo cider--help-echo)) #("m-a-ll" 0 6 (cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-vendor" "m-a-vendor" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify") fontified t help-echo cider--help-echo)) #("m-a-vector" 0 3 (cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-vector" "m-a-vector" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify") fontified t help-echo cider--help-echo) 3 10 (cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-vector" "m-a-vector" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify") help-echo cider--help-echo fontified t)) #("m-a-df" 0 6 (cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-cost" "m-a-cost" "mt-a-identify" "m-a-identify") fontified t help-echo cider--help-echo)) #("m-acost" 0 3 (cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-acost" "m-acost" "mt-a-identify" "m-a-identify") fontified t help-echo cider--help-echo) 3 7 (cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-acost" "m-acost" "mt-a-identify" "m-a-identify") help-echo cider--help-echo fontified t)) #("m-a-wo" 0 6 (cider-locals ("lname" "fname" "username" "id" "let" "supervisors" "workers" "let" "bhr-health" "bhr-edu" "bhr-ops" "bhr-admin" "mp-liv" "mp-edu" "mp-ops" "mp-admin" "tn-health" "tn-edu" "tn-ops" "tn-admin" "let" "bhr" "mp" "tn" "let" "bhr-sch" "mp-env" "tn-water" "let" "at3" "at2" "at1" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-site" "m-a-site" "ids/a-ro-id" "ids/tn-water-id" "ids/m-a-ro-id" "ids/t-ro-id" "ids/m-a-site-id" "ids/t-is-id" "ids/m-a-wo-id" "ids/t-wo-id" "ids/m-a-df-id" "ids/t-df-id" "ids/m-a-ll-id" "ids/t-ll-id" "ids/m-a-h-id" "ids/t-ro-id" "ids/t-h-id" "let" "a-tree" "m-a-tree" "t-tree" "t-sidewalk" "t-sapling" "t-digging" "t-com" "mt-com-photo" "m-com-photo" "mt-digging-photo" "m-digging-photo" "mt-sp-cost" "m-sp-cost" "mt-sp-n" "m-sp-n" "mt-sp-snum" "m-sp-snum" "mt-sp-sname" "m-sp-sname" "mt-s-photo" "m-s-photo" "mt-s-address" "m-s-address" "mt-a-completion" "m-a-completion" "mt-a-digging" "m-a-digging" "mt-a-sapling" "m-a-sapling" "mt-a-sidewalk" "m-a-sidewalk" "ids/a-tree-id" "ids/mp-env-id" "ids/m-a-tree-id" "ids/t-tree-id" "ids/m-a-sidewalk-id" "ids/t-sidewalk-id" "ids/m-a-sapling-id" "ids/t-sapling-id" "ids/m-a-digging-id" "ids/t-digging-id" "ids/m-a-completion-id" "ids/t-tree-id" "ids/t-com-id" "let" "a-ro" "m-a-ro" "t-ro" "t-is" "t-wo" "t-df" "t-ll" "t-h" "mt-photo3" "m-photo3" "mt-number2" "m-number2" "mt-name2" "m-name2" "mt-photo2" "m-photo2" "mt-photo" "m-photo" "mt-amount" "m-amount" "mt-wo-number" "m-wo-number" "mt-number" "m-number" "mt-name" "m-name" "mt-address" "m-address" "mt-location" "m-location" "mt-a-h" "m-a-h" "mt-a-ll" "m-a-ll" "mt-a-df" "m-a-df" "mt-a-wo" "m-a-wo" "mt-a-identify" "m-a-identify") fontified t help-echo cider--help-echo)) #("defs" 0 4 (face font-lock-keyword-face font-lock-multiline t cider-locals ("util/str->uuid") help-echo cider--help-echo fontified t)) #("util/str->uuid" 0 4 (face font-lock-type-face cider-locals ("util/str->uuid" "util/str->uuid") help-echo cider--help-echo fontified t) 4 5 (face default cider-locals ("util/str->uuid" "util/str->uuid") help-echo cider--help-echo fontified t) 5 14 (cider-locals ("util/str->uuid" "util/str->uuid") help-echo cider--help-echo fontified t)) #("ids/mhr-edu-w-id" 0 3 (face font-lock-type-face fontified t) 3 4 (face default fontified t) 4 16 (fontified t)) "hide" #("Id" 0 2 (face font-lock-type-face cider-locals nil fontified t help-echo cider--help-echo)) "octave" "oc" #("================================templates/projects==========================" 0 76 (face font-lock-comment-face cider-locals nil help-echo cider--help-echo fontified t)) #("===============================templates/projects===========================" 0 76 (face font-lock-comment-face cider-locals nil fontified t help-echo cider--help-echo)) "octave" #("task_tags" 0 9 (fontified t)) #("*" 0 1 (fontified t)) #(":task/id" 0 1 (face (clojure-keyword-face) cider-locals ("emap" "fs" "m" "updated-m" "val" "f" "k" "emap" "vals-converted" "keys-needed" "keys-converted" "array-key" "cmap" "new-key" "array-key" "cmap" "emap" "vals-converted" "keys-needed" "keys-converted" "emap" "val-fs" "get-task-id" "keys-needed" "keys-converted" "emap" "vals-converted" "get-measurement-templates-ids" "keys-needed" "keys-converted" "emap" "keys-needed" "keys-converted" "entities" "attr" "entities" "convert-entities-f" "attr" "entities" "attr" "entities" "convert-entities-f" "attr" "emap" "vals-converted" "val-fs" "get-projects-ids" "keys-converted" "emap" "val-fs" "get-activities-ids" "get-states-ids" "keys-converted" "emap" "val-fs" "get-verticals-ids" "keys-converted" "emap" "val-fs" "get-users-ids" "keys-converted" "emap" "emap" "val-fs" "get-tags" "get-measurements-ids" "keys-converted" "emap" "val-fs" "get-owner" "root-task-id" "get-root" "keys-converted") fontified t help-echo cider--help-echo) 1 5 (face (font-lock-type-face clojure-keyword-face) cider-locals ("emap" "fs" "m" "updated-m" "val" "f" "k" "emap" "vals-converted" "keys-needed" "keys-converted" "array-key" "cmap" "new-key" "array-key" "cmap" "emap" "vals-converted" "keys-needed" "keys-converted" "emap" "val-fs" "get-task-id" "keys-needed" "keys-converted" "emap" "vals-converted" "get-measurement-templates-ids" "keys-needed" "keys-converted" "emap" "keys-needed" "keys-converted" "entities" "attr" "entities" "convert-entities-f" "attr" "entities" "attr" "entities" "convert-entities-f" "attr" "emap" "vals-converted" "val-fs" "get-projects-ids" "keys-converted" "emap" "val-fs" "get-activities-ids" "get-states-ids" "keys-converted" "emap" "val-fs" "get-verticals-ids" "keys-converted" "emap" "val-fs" "get-users-ids" "keys-converted" "emap" "emap" "val-fs" "get-tags" "get-measurements-ids" "keys-converted" "emap" "val-fs" "get-owner" "root-task-id" "get-root" "keys-converted") fontified t help-echo cider--help-echo) 5 6 (face (default clojure-keyword-face) cider-locals ("emap" "fs" "m" "updated-m" "val" "f" "k" "emap" "vals-converted" "keys-needed" "keys-converted" "array-key" "cmap" "new-key" "array-key" "cmap" "emap" "vals-converted" "keys-needed" "keys-converted" "emap" "val-fs" "get-task-id" "keys-needed" "keys-converted" "emap" "vals-converted" "get-measurement-templates-ids" "keys-needed" "keys-converted" "emap" "keys-needed" "keys-converted" "entities" "attr" "entities" "convert-entities-f" "attr" "entities" "attr" "entities" "convert-entities-f" "attr" "emap" "vals-converted" "val-fs" "get-projects-ids" "keys-converted" "emap" "val-fs" "get-activities-ids" "get-states-ids" "keys-converted" "emap" "val-fs" "get-verticals-ids" "keys-converted" "emap" "val-fs" "get-users-ids" "keys-converted" "emap" "emap" "val-fs" "get-tags" "get-measurements-ids" "keys-converted" "emap" "val-fs" "get-owner" "root-task-id" "get-root" "keys-converted") fontified t help-echo cider--help-echo) 6 8 (face (clojure-keyword-face) cider-locals ("emap" "fs" "m" "updated-m" "val" "f" "k" "emap" "vals-converted" "keys-needed" "keys-converted" "array-key" "cmap" "new-key" "array-key" "cmap" "emap" "vals-converted" "keys-needed" "keys-converted" "emap" "val-fs" "get-task-id" "keys-needed" "keys-converted" "emap" "vals-converted" "get-measurement-templates-ids" "keys-needed" "keys-converted" "emap" "keys-needed" "keys-converted" "entities" "attr" "entities" "convert-entities-f" "attr" "entities" "attr" "entities" "convert-entities-f" "attr" "emap" "vals-converted" "val-fs" "get-projects-ids" "keys-converted" "emap" "val-fs" "get-activities-ids" "get-states-ids" "keys-converted" "emap" "val-fs" "get-verticals-ids" "keys-converted" "emap" "val-fs" "get-users-ids" "keys-converted" "emap" "emap" "val-fs" "get-tags" "get-measurements-ids" "keys-converted" "emap" "val-fs" "get-owner" "root-task-id" "get-root" "keys-converted") fontified t help-echo cider--help-echo)) #("cmap" 0 4 (cider-locals ("emap" "cmap") fontified t help-echo cider--help-echo)) #("get-id-list" 0 11 (face font-lock-function-name-face cider-locals ("emap" "fs" "m" "updated-m" "val" "f" "k" "emap" "vals-converted" "keys-needed" "keys-converted" "array-key" "cmap" "new-key" "array-key" "cmap" "emap" "vals-converted" "keys-needed" "keys-converted" "emap" "val-fs" "get-task-id" "keys-needed" "keys-converted" "emap" "vals-converted" "get-measurement-templates-ids" "keys-needed" "keys-converted" "emap" "keys-needed" "keys-converted" "entities" "attr" "entities" "convert-entities-f" "attr") fontified t help-echo cider--help-echo)) #(":assigned-to" 0 12 (face (clojure-keyword-face) cider-locals nil fontified t help-echo cider--help-echo)) #(":projects" 0 9 (face (clojure-keyword-face) cider-locals nil fontified t help-echo cider--help-echo)) #("filter-nil" 0 10 (face font-lock-function-name-face cider-locals ("db" "val" "attr" "db" "value" "attr" "db" "eid" "e" "all" "manifest" "delete" "insert" "not-in-all?" "not-in-manifest?" "all-set" "manifest-set" "not-contains?" "cmap") help-echo cider--help-echo fontified t)) #("config/db-spec" 0 6 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 6 7 (face default cider-locals nil help-echo cider--help-echo fontified t) 7 14 (cider-locals nil help-echo cider--help-echo fontified t)) "cid" "cider" "888888" #("9898989898" 0 10 (face font-lock-string-face cider-locals ("let" "supervisors" "workers") help-echo cider--help-echo fontified t)) #("org.joda.time.DateTime" 0 22 (fontified t font-lock-face cider-repl-stdout-face rear-nonsticky (font-lock-face))) #("User" 0 4 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face)) #("." 0 1 (fontified t face font-lock-string-face)) "gre" "apropos" "projectile" "projectile-grep" "clo" #("pfdin" 0 1 (fontified t face font-lock-string-face) 1 2 (fontified t face font-lock-string-face) 2 3 (fontified t face font-lock-string-face) 3 4 (fontified t face font-lock-string-face) 4 5 (fontified t face font-lock-string-face))))
(setq minibuffer-history '("/home/puneet/code/adori/" "evil" "undo-t" "evil" "/home/puneet/.emacs.d/init.el" "ini" "evil" "/home/puneet/code/work/controlroom/controlroom-api-poc/src/api/schema.clj" #("java.io.BufferedInputStream" 0 8 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 8 16 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 16 26 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 26 27 (fontified t rear-nonsticky t help-echo cider--help-echo cider-locals nil face font-lock-type-face)) "apisch" "fi" "s" "/home/puneet/code/work/controlroom/controlroom-api-poc/src/api/schema.clj" "sche" "file" "s3" "apisch" "sche" "han" "file" "/home/puneet/code/work/controlroom/controlroom-api-poc/src/fileserver/s3.clj" "repl" "s3" "rep" "/home/puneet/code/work/controlroom/controlroom-api-poc/src/dtm/util.clj" "util" "/home/puneet/code/work/controlroom/controlroom-api-poc/src/config/dtm" "/home/puneet/code/work/controlroom/controlroom-api-poc/src/fileserver/" "/home/puneet/code/work/controlroom/controlroom-api-poc/src/config/" "/home/puneet/code/work/controlroom/controlroom-api-poc/src/fileserver/" "/home/puneet/code/work/controlroom/controlroom-api-poc/src/fileserver/fil" "apiwri" "handl" "sche" "/home/puneet/code/work/controlroom/controlroom-api-poc/src/data/hih_users.clj" "user" "/home/puneet/code/work/controlroom/controlroom-api-poc/src/data/parse_users_csv.clj" "/home/puneet/code/work/controlroom/controlroom-api-poc/src/data/hih_users.clj" "/home/puneet/code/work/controlroom/controlroom-api-poc/src/data/hih" "use" "/home/puneet/code/work/controlroom/controlroom-api-poc/src/data/parse_users_csv.clj" "par" "/home/puneet/code/geekskool/best_plan/src/best_plan/ser" "/home/puneet/code/work/controlroom/controlroom-api-poc/src/data/parse_users_csv.clj" "par" "ini" "test" "par" "wri" "/home/puneet/code/work/controlroom/controlroom-api-poc/src/api/handler.clj" "han" "/home/puneet/code/work/controlroom/controlroom-api-poc/src/data/init.clj" "init" "/home/puneet/code/work/controlroom/controlroom-api-poc/docs/hih-users" #("templates/activities======================" 0 42 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-comment-face)) "han" "/home/puneet/code/work/controlroom/controlroom-api-poc/src/dtm/read.clj" "rea" "test" "/home/puneet/code/work/controlroom/controlroom-api-poc/src/dtm/read.clj" "/home/puneet/code/work/controlroom/controlroom-api-poc/src/tmp/test.clj" "/home/puneet/code/work/controlroom/controlroom-api-poc/src/tmp/tes" #("util/get-db" 0 4 (help-echo cider--help-echo fontified t cider-locals ("ids" "username" "insert-uuids" "delete" "insert" "diff" "tasks-pending-ids" "ids" "username" "insert-uuids" "delete" "insert" "diff" "tasks-assigned-pending-ids") face font-lock-type-face) 4 5 (help-echo cider--help-echo fontified t cider-locals ("ids" "username" "insert-uuids" "delete" "insert" "diff" "tasks-pending-ids" "ids" "username" "insert-uuids" "delete" "insert" "diff" "tasks-assigned-pending-ids") face default) 5 11 (help-echo cider--help-echo fontified t cider-locals ("ids" "username" "insert-uuids" "delete" "insert" "diff" "tasks-pending-ids" "ids" "username" "insert-uuids" "delete" "insert" "diff" "tasks-assigned-pending-ids"))) "/home/puneet/code/work/controlroom/controlroom-api-poc/src/dtm/read.clj" #("get-details" 0 11 (help-echo cider--help-echo fontified t cider-locals ("db" "val" "attr" "db" "attr" "db" "value" "attr" "db" "eid" "e") face font-lock-function-name-face)) "util" "read" "rea" "util" "read" "/home/puneet/code/work/controlroom/controlroom-api-poc/src/dtm/read.clj" "util" "read" "/home/puneet/code/work/controlroom/controlroom-api-poc/src/data/test.clj" "test" "read" "dtmsch" "gene" "tes" "/home/puneet/code/work/controlroom/controlroom-api-poc/src/dtm/read.clj" "rea" "test" "/home/puneet/code/work/controlroom/controlroom-api-poc/src/dtm/read.clj" "rea" "d/tran" #("project" 0 7 (fontified t help-echo cider--help-echo cider-locals ("s" "len" "rindex" "state" "password" "username" "receiver-email" "name" "list-of-lists" "f" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "user" "tx" "first-last-name" "email" "state" "department" "phone" "name" "same-properties" "user-details" "users" "state" "project"))) "csv" "/home/puneet/code/work/controlroom/controlroom-api-poc/src/data/init.clj" "ini" #("tasks-tags" 0 10 (fontified t help-echo cider--help-echo cider-locals ("id" "version" "_username") face font-lock-function-name-face)) "rea" "ini" #("task-tags-attrs" 0 15 (face font-lock-variable-name-face cider-locals nil help-echo cider--help-echo fontified t)) "gene" "test" #("project" 0 7 (help-echo cider--help-echo fontified t cider-locals ("path" "reader" "state" "password" "username" "receiver-email" "name" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "user" "tx" "first-last-name" "email" "state" "department" "phone" "name" "same-properties" "user-details" "state" "project"))) "/home/puneet/code/work/controlroom/controlroom-api-poc/src/data/parse_users_csv.clj" "par" "rep" "par"))
(setq helm-occur-history '("jaya" "tasks-t" "org-uni" "get-all" "get-all-va" "tags" "get-all-" "tags" "task-ta" "tags" "init" "send-em" "send" "hih_" "init" "org-u" "get-all" "state-tx" "sex" "sim" "clie" "sim" "org" "user" "activitysub" "tags" #("t41921:" 0 7 (fontified t font-lock-face cider-repl-stdout-face rear-nonsticky (font-lock-face))) #("t41881:" 0 7 (fontified t font-lock-face cider-repl-stdout-face rear-nonsticky (font-lock-face))) "dynam" "tags" "dynamic" "user-deta" "activity" "[A-Z]" "mar" "[A-Z]" "*[A-Z]" "simpl" "dyna" "user" "activities" "activitysu" "activi" "get-org" "log" "user" "adduser" "crede" "put" "templat" "case" "nil" "user" "put " "dtm-util" "position" "etemp" "option" "(p " "activity" "submission" "submissi" "auth" "submi" "submission" "tasksub" "activity" "drop-all" "empty" "create" "updated" "[\"Wa" "init" "activity" "resu" "transact" "transa" "tran" "file" "fill" "get-all-" "get-com" "templ" "templates" "project" "status" "id" "temp" "templa" "projec" "put ac" "resu" "activi" "compute" "cron" "tag" "vertical" "task-me" "->" "plus"))
(setq evil-jumps-history '((956 "/home/puneet/code/adori/README_TO_CLONE_DEV_VM") (748 "/home/puneet/.emacs.d/init.el")))
(setq kill-ring '("https://www.howtoforge.com/linux_webradio_with_icecast2_ices2" "com.amazonaws.services.s3.model.S3ObjectInputStream" #("java.io.BufferedInputStream" 0 8 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 8 16 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 16 27 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face)) #("wW24ZjLKDrRpq8etFZ7u3GGNzAWiQwejgL7HHmVn527W7jYz.jpg" 0 52 (face font-lock-string-face fontified t)) "=tpX{p}TAd" "8736960000" "(map #(apply data.parse-users-csv/send-email %)" #("(map #(apply data.parse-users-csv/send-email %) [   [     \"Vikrant Puri\",     \"vikrant.puri@hihseed.org\",     \"8736960000\",     \"pro-how-ivy\",     \"Madhya Pradesh\"   ],   [     \"Subodh Karnik\",     \"subodh.karnik@hihseed.org\",     \"9669622033\",     \"mug-rad-out\",     \"Madhya Pradesh\"   ],   [     \"Alok Mishra\",     \"alok.mishra@hihseed.org\",     \"7024466336\",     \"rot-fog-ado\",     \"Madhya Pradesh\"   ],   [     \"Jini Nikita Das​\",     \"jini.nikitadas@hihseed.org\",     \"9826812479\",     \"ray-cow-ivy\",     \"Madhya Pradesh\"   ],   [     \"Vijay Kumarvankar\",     \"vijay.kumarvankar@hihseed.org\",     \"9754212571\",     \"sky-sly-men\",     \"Madhya Pradesh\"   ],   [     \"Shiksha Thakkur\",     \"shisksha.thakkur@hihseed.org\",     \"7805041142\",     \"orb-tor-nay\",     \"Madhya Pradesh\"   ],   [     \"Ajay Songara\",     \"Ajay.keshavlal@hihseed.org\",     \"7828334945\",     \"bag-wax-opt\",     \"Madhya Pradesh\"   ],   [     \"Shaitan Meena\",     \"Meenaakshay9755112188@gmail.com\",     \"9755112188\",     \"war-wye-fig\",     \"Madhya Pradesh\"   ],   [     \"Kapil Kachawa\",     \"Kkachhawa55@gmail.com\",     \"9691292817\",     \"cot-sue-arc\",     \"Madhya Pradesh\"   ],   [     \"Hemant Chouhan\",     \"hemant1996.chuvan@gmail.com\",     \"9575447033\",     \"mag-imp-sue\",     \"Madhya Pradesh\"   ],   [     \"Kiran Rahtore\",     \"Rathore.kiran05071998@gmail.com\",     \"9993446677\",     \"win-rep-pot\",     \"Madhya Pradesh\"   ],   [     \"Nisita Chouhan\",     \"vikrant.puri@hihseed.org\",     \"8435451021\",     \"sly-set-ram\",     \"Madhya Pradesh\"   ],   [     \"Deepa Pal\",     \"vikrant.puri@hihseed.org\",     \"9589064740\",     \"mag-wig-neg\",     \"Madhya Pradesh\"   ],   [     \"Nisha Bhabar\",     \"vikrant.puri@hihseed.org\",     \"9165159825\",     \"lie-mid-tot\",     \"Madhya Pradesh\"   ],   [     \"Sunita Patel\",     \"vikrant.puri@hihseed.org\",     \"9753695047\",     \"mud-kay-out\",     \"Madhya Pradesh\"   ],   [     \"Farida Bee\",     \"Syedfarida625@gmail.com\",     \"8435440733\",     \"bud-men-bus\",     \"Madhya Pradesh\"   ],   [     \"Gopal Patel\",     \"gopalpateldws@gmail.com\",     \"9977204791\",     \"man-hen-new\",     \"Madhya Pradesh\"   ],   [     \"Umesh Nagar\",     \"uminagar144@gmail.com\",     \"8827666884\",     \"rap-dis-ala\",     \"Madhya Pradesh\"   ],   [     \"Rahul Malviya\",     \"rahulmalviya8883@gmail.com\",     \"8770120782\",     \"raw-bog-bet\",     \"Madhya Pradesh\"   ],   [     \"Sanju Choudhary\",     \"vikrant.puri@hihseed.org\",     \"7999359978\",     \"dal-pat-mot\",     \"Madhya Pradesh\"   ],   [     \"Bhola Rao\",     \"vikrant.puri@hihseed.org\",     \"7000245137\",     \"nab-lag-cat\",     \"Madhya Pradesh\"   ],   [     \"Jyothi Rajput\",     \"vikrant.puri@hihseed.org\",     \"9617113906\",     \"rib-coy-fin\",     \"Madhya Pradesh\"   ],   [     \"Divya Rani\",     \"Divyaaneema29nov1993@gmail.com\",     \"7747958028\",     \"neg-gel-hue\",     \"Madhya Pradesh\"   ],   [     \"Hemlata\",     \"vikrant.puri@hihseed.org\",     \"6260808575\",     \"lie-pip-add\",     \"Madhya Pradesh\"   ],   [     \"Karthikeyan Arjunan\",     \"karthikeyan.a@hihseed.org\",     \"9944976675\",     \"lap-wis-doc\",     \"Maharashtra\"   ],   [     \"Shrimant Shindhe\",     \"shrimant.shinde@hihseed.org\",     \"9850990873\",     \"cut-war-raw\",     \"Maharashtra\"   ],   [     \"Mohsin Shaikh\",     \"mohsin.vazir@hihseed.org\",     \"8007199682\",     \"dug-aid-bed\",     \"Maharashtra\"   ],   [     \"Milind Prabhakar Dange\",     \"milind.dange@hihseed.org\",     \"9881536580\",     \"one-tin-sab\",     \"Maharashtra\"   ],   [     \"Rishika Shaw\",     \"rishika.j@hihseed.org\",     \"7387253315\",     \"ham-ago-pup\",     \"Maharashtra\"   ],   [     \"Sai Varshan\",     \"saivarshan.nrm@hihseed.org\",     \"8056792737\",     \"nah-aid-dig\",     \"Maharashtra\"   ],   [     \"Sarika Shinde\",     \"karthikeyan.a@hihseed.org\",     \"7066802559\",     \"lie-ooh-apt\",     \"Maharashtra\"   ],   [     \"Minakshi Dinkar Ghare\",     \"karthikeyan.a@hihseed.org\",     \"9049300816\",     \"axe-mot-pea\",     \"Maharashtra\"   ],   [     \"Pratibha Keshav Dahale\",     \"karthikeyan.a@hihseed.org\",     \"9158756284\",     \"bel-mol-spa\",     \"Maharashtra\"   ],   [     \"Rupali Suresh Pavale\",     \"karthikeyan.a@hihseed.org\",     \"9763651868\",     \"sew-ash-six\",     \"Maharashtra\"   ],   [     \"Jyoti Sunil Shedge\",     \"karthikeyan.a@hihseed.org\",     \"7378714654\",     \"joe-tom-hit\",     \"Maharashtra\"   ],   [     \"Swaminathan\",     \"swaminathan@hihindia.org\",     \"9381882100\",     \"ash-tan-wax\",     \"Tamil Nadu\"   ],   [     \"Arul Durai\",     \"aruldurai.s@hihseed.org\",     \"7708558299\",     \"won-cox-spa\",     \"Tamil Nadu\"   ],   [     \"Jaisankar\",     \"jaisankar.shg@hihseed.org\",     \"9500909024\",     \"nor-man-ski\",     \"Tamil Nadu\"   ],   [     \"ThangaDurai\",     \"thangadurai.b@hihseed.org\",     \"9381882166\",     \"pap-shy-dad\",     \"Tamil Nadu\"   ],   [     \"Vinoth Kumar\",     \"vinoth.kumar@hihseed.org\",     \"9566550120\",     \"pan-rid-chi\",     \"Tamil Nadu\"   ],   [     \"Bharathi Perumal\",     \"bharathi.t@hihseed.org\",     \"9566595239\",     \"foe-got-thy\",     \"Tamil Nadu\"   ],   [     \"Selva Kumar\",     \"selvakumar.s@hihseed.org\",     \"9677805261\",     \"fab-war-add\",     \"Tamil Nadu\"   ],   [     \"Radha Krishnan\",     \"radhakrishnan.vup@hihseed.org\",     \"8220217551\",     \"ask-gel-tin\",     \"Tamil Nadu\"   ],   [     \"Manisha Devi\",     \"manishadevi.t@hihseed.org\",     \"9790115518\",     \"buy-nun-pit\",     \"Tamil Nadu\"   ],   [     \"Balasubramani\",     \"balasubramani.clep@hihseed.org\",     \"8072452955\",     \"pap-ear-egg\",     \"Tamil Nadu\"   ],   [     \"Mageshwari\",     \"magereshma@gmail.com\",     \"6381572709\",     \"tee-elf-rag\",     \"Tamil Nadu\"   ],   [     \"Jaya Prakash\",     \"jayaprakash.y@hihseed.org\",     \"9442059710\",     \"its-mad-yet\",     \"Tamil Nadu\"   ],   [     \"Purushothaman\",     \"purushothaman.nrm@hihseed.org\",     \"9994614926\",     \"bet-try-par\",     \"Tamil Nadu\"   ],   [     \"Umapathy\",     \"umapathy.km@hihseed.org\",     \"9244680116\",     \"rip-cod-pac\",     \"Tamil Nadu\"   ],   [     \"Moses Samuel\",     \"moses.g@hihseed.org\",     \"9442478525\",     \"rap-dug-new\",     \"Tamil Nadu\"   ],   [     \"Kannan\",     \"kannan.g@hihindia.org\",     \"9585558384\",     \"map-man-coy\",     \"HO\"   ],   [     \"Chandra Gupta\",     \"chandraguptha.nrm@hihseed.org\",     \"9790258778\",     \"are-won-thy\",     \"HO\"   ],   [     \"Princess Beula\",     \"beula@hihindia.org\",     \"9244680137\",     \"doc-axe-fly\",     \"HO\"   ],   [     \"Krishnan\",     \"krishnan.n@hihindia.org\",     \"9940150635\",     \"pie-sab-toe\",     \"HO\"   ],   [     \"Steve Robison\",     \"steven.robinson@hihseed.org\",     \"9790709641\",     \"meg-gig-mil\",     \"HO\"   ],   [     \"Umashankar\",     \"umashankar.s@hihseed.org\",     \"7893291119\",     \"tar-bet-nap\",     \"HO\"   ],   [     \"Kavitha\",     \"kavitha.admin@hihseed.org\",     \"9994465988\",     \"elm-fad-win\",     \"HO\"   ],   [     \"Byrav\",     \"byrav.n@hihindia.org\",     \"8248401314\",     \"spa-rum-sip\",     \"HO\"   ],   [     \"Sandip Mookerjee\",     \"sandip.mookerjee@hihindia.org\",     \"9500041800\",     \"sac-and-rib\",     \"HO\"   ],   [     \"Madhusharan\",     \"madhu.sharan@hihindia.org\",     \"9717998555\",     \"rid-sac-sac\",     \"New Delhi\"   ] ])" 0 13 (fontified t) 13 33 (fontified t face font-lock-type-face) 33 34 (fontified t face default) 34 45 (fontified t) 45 46 (fontified t face font-lock-variable-name-face) 46 58 (fontified t) 58 72 (fontified t face font-lock-string-face) 72 78 (fontified t) 78 104 (fontified t face font-lock-string-face) 104 110 (fontified t) 110 122 (fontified t face font-lock-string-face) 122 128 (fontified t) 128 141 (fontified t face font-lock-string-face) 141 147 (fontified t) 147 163 (fontified t face font-lock-string-face) 163 177 (fontified t) 177 192 (fontified t face font-lock-string-face) 192 198 (fontified t) 198 225 (fontified t face font-lock-string-face) 225 231 (fontified t) 231 243 (fontified t face font-lock-string-face) 243 249 (fontified t) 249 262 (fontified t face font-lock-string-face) 262 268 (fontified t) 268 284 (fontified t face font-lock-string-face) 284 298 (fontified t) 298 311 (fontified t face font-lock-string-face) 311 317 (fontified t) 317 342 (fontified t face font-lock-string-face) 342 348 (fontified t) 348 360 (fontified t face font-lock-string-face) 360 366 (fontified t) 366 379 (fontified t face font-lock-string-face) 379 385 (fontified t) 385 401 (fontified t face font-lock-string-face) 401 415 (fontified t) 415 433 (fontified t face font-lock-string-face) 433 439 (fontified t) 439 467 (fontified t face font-lock-string-face) 467 473 (fontified t) 473 485 (fontified t face font-lock-string-face) 485 491 (fontified t) 491 504 (fontified t face font-lock-string-face) 504 510 (fontified t) 510 526 (fontified t face font-lock-string-face) 526 540 (fontified t) 540 559 (fontified t face font-lock-string-face) 559 565 (fontified t) 565 596 (fontified t face font-lock-string-face) 596 602 (fontified t) 602 614 (fontified t face font-lock-string-face) 614 620 (fontified t) 620 633 (fontified t face font-lock-string-face) 633 639 (fontified t) 639 655 (fontified t face font-lock-string-face) 655 669 (fontified t) 669 686 (fontified t face font-lock-string-face) 686 692 (fontified t) 692 722 (fontified t face font-lock-string-face) 722 728 (fontified t) 728 740 (fontified t face font-lock-string-face) 740 746 (fontified t) 746 759 (fontified t face font-lock-string-face) 759 765 (fontified t) 765 781 (fontified t face font-lock-string-face) 781 795 (fontified t) 795 809 (fontified t face font-lock-string-face) 809 815 (fontified t) 815 843 (fontified t face font-lock-string-face) 843 849 (fontified t) 849 861 (fontified t face font-lock-string-face) 861 867 (fontified t) 867 880 (fontified t face font-lock-string-face) 880 886 (fontified t) 886 902 (fontified t face font-lock-string-face) 902 916 (fontified t) 916 931 (fontified t face font-lock-string-face) 931 937 (fontified t) 937 970 (fontified t face font-lock-string-face) 970 976 (fontified t) 976 988 (fontified t face font-lock-string-face) 988 994 (fontified t) 994 1007 (fontified t face font-lock-string-face) 1007 1013 (fontified t) 1013 1029 (fontified t face font-lock-string-face) 1029 1043 (fontified t) 1043 1058 (fontified t face font-lock-string-face) 1058 1064 (fontified t) 1064 1087 (fontified t face font-lock-string-face) 1087 1093 (fontified t) 1093 1105 (fontified t face font-lock-string-face) 1105 1111 (fontified t) 1111 1124 (fontified t face font-lock-string-face) 1124 1130 (fontified t) 1130 1146 (fontified t face font-lock-string-face) 1146 1160 (fontified t) 1160 1176 (fontified t face font-lock-string-face) 1176 1182 (fontified t) 1182 1211 (fontified t face font-lock-string-face) 1211 1217 (fontified t) 1217 1229 (fontified t face font-lock-string-face) 1229 1235 (fontified t) 1235 1248 (fontified t face font-lock-string-face) 1248 1254 (fontified t) 1254 1270 (fontified t face font-lock-string-face) 1270 1284 (fontified t) 1284 1299 (fontified t face font-lock-string-face) 1299 1305 (fontified t) 1305 1338 (fontified t face font-lock-string-face) 1338 1344 (fontified t) 1344 1356 (fontified t face font-lock-string-face) 1356 1362 (fontified t) 1362 1375 (fontified t face font-lock-string-face) 1375 1381 (fontified t) 1381 1397 (fontified t face font-lock-string-face) 1397 1411 (fontified t) 1411 1427 (fontified t face font-lock-string-face) 1427 1433 (fontified t) 1433 1459 (fontified t face font-lock-string-face) 1459 1465 (fontified t) 1465 1477 (fontified t face font-lock-string-face) 1477 1483 (fontified t) 1483 1496 (fontified t face font-lock-string-face) 1496 1502 (fontified t) 1502 1518 (fontified t face font-lock-string-face) 1518 1532 (fontified t) 1532 1543 (fontified t face font-lock-string-face) 1543 1549 (fontified t) 1549 1575 (fontified t face font-lock-string-face) 1575 1581 (fontified t) 1581 1593 (fontified t face font-lock-string-face) 1593 1599 (fontified t) 1599 1612 (fontified t face font-lock-string-face) 1612 1618 (fontified t) 1618 1634 (fontified t face font-lock-string-face) 1634 1648 (fontified t) 1648 1662 (fontified t face font-lock-string-face) 1662 1668 (fontified t) 1668 1694 (fontified t face font-lock-string-face) 1694 1700 (fontified t) 1700 1712 (fontified t face font-lock-string-face) 1712 1718 (fontified t) 1718 1731 (fontified t face font-lock-string-face) 1731 1737 (fontified t) 1737 1753 (fontified t face font-lock-string-face) 1753 1767 (fontified t) 1767 1781 (fontified t face font-lock-string-face) 1781 1787 (fontified t) 1787 1813 (fontified t face font-lock-string-face) 1813 1819 (fontified t) 1819 1831 (fontified t face font-lock-string-face) 1831 1837 (fontified t) 1837 1850 (fontified t face font-lock-string-face) 1850 1856 (fontified t) 1856 1872 (fontified t face font-lock-string-face) 1872 1886 (fontified t) 1886 1898 (fontified t face font-lock-string-face) 1898 1904 (fontified t) 1904 1929 (fontified t face font-lock-string-face) 1929 1935 (fontified t) 1935 1947 (fontified t face font-lock-string-face) 1947 1953 (fontified t) 1953 1966 (fontified t face font-lock-string-face) 1966 1972 (fontified t) 1972 1988 (fontified t face font-lock-string-face) 1988 2002 (fontified t) 2002 2015 (fontified t face font-lock-string-face) 2015 2021 (fontified t) 2021 2046 (fontified t face font-lock-string-face) 2046 2052 (fontified t) 2052 2064 (fontified t face font-lock-string-face) 2064 2070 (fontified t) 2070 2083 (fontified t face font-lock-string-face) 2083 2089 (fontified t) 2089 2105 (fontified t face font-lock-string-face) 2105 2119 (fontified t) 2119 2132 (fontified t face font-lock-string-face) 2132 2138 (fontified t) 2138 2161 (fontified t face font-lock-string-face) 2161 2167 (fontified t) 2167 2179 (fontified t face font-lock-string-face) 2179 2185 (fontified t) 2185 2198 (fontified t face font-lock-string-face) 2198 2204 (fontified t) 2204 2220 (fontified t face font-lock-string-face) 2220 2234 (fontified t) 2234 2249 (fontified t face font-lock-string-face) 2249 2255 (fontified t) 2255 2283 (fontified t face font-lock-string-face) 2283 2289 (fontified t) 2289 2301 (fontified t face font-lock-string-face) 2301 2307 (fontified t) 2307 2320 (fontified t face font-lock-string-face) 2320 2326 (fontified t) 2326 2342 (fontified t face font-lock-string-face) 2342 2356 (fontified t) 2356 2373 (fontified t face font-lock-string-face) 2373 2379 (fontified t) 2379 2405 (fontified t face font-lock-string-face) 2405 2411 (fontified t) 2411 2423 (fontified t face font-lock-string-face) 2423 2429 (fontified t) 2429 2442 (fontified t face font-lock-string-face) 2442 2448 (fontified t) 2448 2464 (fontified t face font-lock-string-face) 2464 2478 (fontified t) 2478 2489 (fontified t face font-lock-string-face) 2489 2495 (fontified t) 2495 2521 (fontified t face font-lock-string-face) 2521 2527 (fontified t) 2527 2539 (fontified t face font-lock-string-face) 2539 2545 (fontified t) 2545 2558 (fontified t face font-lock-string-face) 2558 2564 (fontified t) 2564 2580 (fontified t face font-lock-string-face) 2580 2594 (fontified t) 2594 2609 (fontified t face font-lock-string-face) 2609 2615 (fontified t) 2615 2641 (fontified t face font-lock-string-face) 2641 2647 (fontified t) 2647 2659 (fontified t face font-lock-string-face) 2659 2665 (fontified t) 2665 2678 (fontified t face font-lock-string-face) 2678 2684 (fontified t) 2684 2700 (fontified t face font-lock-string-face) 2700 2714 (fontified t) 2714 2726 (fontified t face font-lock-string-face) 2726 2732 (fontified t) 2732 2764 (fontified t face font-lock-string-face) 2764 2770 (fontified t) 2770 2782 (fontified t face font-lock-string-face) 2782 2788 (fontified t) 2788 2801 (fontified t face font-lock-string-face) 2801 2807 (fontified t) 2807 2823 (fontified t face font-lock-string-face) 2823 2837 (fontified t) 2837 2846 (fontified t face font-lock-string-face) 2846 2852 (fontified t) 2852 2878 (fontified t face font-lock-string-face) 2878 2884 (fontified t) 2884 2896 (fontified t face font-lock-string-face) 2896 2902 (fontified t) 2902 2915 (fontified t face font-lock-string-face) 2915 2921 (fontified t) 2921 2937 (fontified t face font-lock-string-face) 2937 2951 (fontified t) 2951 2972 (fontified t face font-lock-string-face) 2972 2978 (fontified t) 2978 3005 (fontified t face font-lock-string-face) 3005 3011 (fontified t) 3011 3023 (fontified t face font-lock-string-face) 3023 3029 (fontified t) 3029 3042 (fontified t face font-lock-string-face) 3042 3048 (fontified t) 3048 3061 (fontified t face font-lock-string-face) 3061 3075 (fontified t) 3075 3093 (fontified t face font-lock-string-face) 3093 3099 (fontified t) 3099 3128 (fontified t face font-lock-string-face) 3128 3134 (fontified t) 3134 3146 (fontified t face font-lock-string-face) 3146 3152 (fontified t) 3152 3165 (fontified t face font-lock-string-face) 3165 3171 (fontified t) 3171 3184 (fontified t face font-lock-string-face) 3184 3198 (fontified t) 3198 3213 (fontified t face font-lock-string-face) 3213 3219 (fontified t) 3219 3245 (fontified t face font-lock-string-face) 3245 3251 (fontified t) 3251 3263 (fontified t face font-lock-string-face) 3263 3269 (fontified t) 3269 3282 (fontified t face font-lock-string-face) 3282 3288 (fontified t) 3288 3301 (fontified t face font-lock-string-face) 3301 3315 (fontified t) 3315 3339 (fontified t face font-lock-string-face) 3339 3345 (fontified t) 3345 3371 (fontified t face font-lock-string-face) 3371 3377 (fontified t) 3377 3389 (fontified t face font-lock-string-face) 3389 3395 (fontified t) 3395 3408 (fontified t face font-lock-string-face) 3408 3414 (fontified t) 3414 3427 (fontified t face font-lock-string-face) 3427 3441 (fontified t) 3441 3455 (fontified t face font-lock-string-face) 3455 3461 (fontified t) 3461 3484 (fontified t face font-lock-string-face) 3484 3490 (fontified t) 3490 3502 (fontified t face font-lock-string-face) 3502 3508 (fontified t) 3508 3521 (fontified t face font-lock-string-face) 3521 3527 (fontified t) 3527 3540 (fontified t face font-lock-string-face) 3540 3554 (fontified t) 3554 3567 (fontified t face font-lock-string-face) 3567 3573 (fontified t) 3573 3601 (fontified t face font-lock-string-face) 3601 3607 (fontified t) 3607 3619 (fontified t face font-lock-string-face) 3619 3625 (fontified t) 3625 3638 (fontified t face font-lock-string-face) 3638 3644 (fontified t) 3644 3657 (fontified t face font-lock-string-face) 3657 3671 (fontified t) 3671 3686 (fontified t face font-lock-string-face) 3686 3692 (fontified t) 3692 3719 (fontified t face font-lock-string-face) 3719 3725 (fontified t) 3725 3737 (fontified t face font-lock-string-face) 3737 3743 (fontified t) 3743 3756 (fontified t face font-lock-string-face) 3756 3762 (fontified t) 3762 3775 (fontified t face font-lock-string-face) 3775 3789 (fontified t) 3789 3812 (fontified t face font-lock-string-face) 3812 3818 (fontified t) 3818 3845 (fontified t face font-lock-string-face) 3845 3851 (fontified t) 3851 3863 (fontified t face font-lock-string-face) 3863 3869 (fontified t) 3869 3882 (fontified t face font-lock-string-face) 3882 3888 (fontified t) 3888 3901 (fontified t face font-lock-string-face) 3901 3915 (fontified t) 3915 3939 (fontified t face font-lock-string-face) 3939 3945 (fontified t) 3945 3972 (fontified t face font-lock-string-face) 3972 3978 (fontified t) 3978 3990 (fontified t face font-lock-string-face) 3990 3996 (fontified t) 3996 4009 (fontified t face font-lock-string-face) 4009 4015 (fontified t) 4015 4028 (fontified t face font-lock-string-face) 4028 4042 (fontified t) 4042 4064 (fontified t face font-lock-string-face) 4064 4070 (fontified t) 4070 4097 (fontified t face font-lock-string-face) 4097 4103 (fontified t) 4103 4115 (fontified t face font-lock-string-face) 4115 4121 (fontified t) 4121 4134 (fontified t face font-lock-string-face) 4134 4140 (fontified t) 4140 4153 (fontified t face font-lock-string-face) 4153 4167 (fontified t) 4167 4187 (fontified t face font-lock-string-face) 4187 4193 (fontified t) 4193 4220 (fontified t face font-lock-string-face) 4220 4226 (fontified t) 4226 4238 (fontified t face font-lock-string-face) 4238 4244 (fontified t) 4244 4257 (fontified t face font-lock-string-face) 4257 4263 (fontified t) 4263 4276 (fontified t face font-lock-string-face) 4276 4290 (fontified t) 4290 4303 (fontified t face font-lock-string-face) 4303 4309 (fontified t) 4309 4335 (fontified t face font-lock-string-face) 4335 4341 (fontified t) 4341 4353 (fontified t face font-lock-string-face) 4353 4359 (fontified t) 4359 4372 (fontified t face font-lock-string-face) 4372 4378 (fontified t) 4378 4390 (fontified t face font-lock-string-face) 4390 4404 (fontified t) 4404 4416 (fontified t face font-lock-string-face) 4416 4422 (fontified t) 4422 4447 (fontified t face font-lock-string-face) 4447 4453 (fontified t) 4453 4465 (fontified t face font-lock-string-face) 4465 4471 (fontified t) 4471 4484 (fontified t face font-lock-string-face) 4484 4490 (fontified t) 4490 4502 (fontified t face font-lock-string-face) 4502 4516 (fontified t) 4516 4527 (fontified t face font-lock-string-face) 4527 4533 (fontified t) 4533 4560 (fontified t face font-lock-string-face) 4560 4566 (fontified t) 4566 4578 (fontified t face font-lock-string-face) 4578 4584 (fontified t) 4584 4597 (fontified t face font-lock-string-face) 4597 4603 (fontified t) 4603 4615 (fontified t face font-lock-string-face) 4615 4629 (fontified t) 4629 4642 (fontified t face font-lock-string-face) 4642 4648 (fontified t) 4648 4675 (fontified t face font-lock-string-face) 4675 4681 (fontified t) 4681 4693 (fontified t face font-lock-string-face) 4693 4699 (fontified t) 4699 4712 (fontified t face font-lock-string-face) 4712 4718 (fontified t) 4718 4730 (fontified t face font-lock-string-face) 4730 4744 (fontified t) 4744 4758 (fontified t face font-lock-string-face) 4758 4764 (fontified t) 4764 4790 (fontified t face font-lock-string-face) 4790 4796 (fontified t) 4796 4808 (fontified t face font-lock-string-face) 4808 4814 (fontified t) 4814 4827 (fontified t face font-lock-string-face) 4827 4833 (fontified t) 4833 4845 (fontified t face font-lock-string-face) 4845 4859 (fontified t) 4859 4877 (fontified t face font-lock-string-face) 4877 4883 (fontified t) 4883 4907 (fontified t face font-lock-string-face) 4907 4913 (fontified t) 4913 4925 (fontified t face font-lock-string-face) 4925 4931 (fontified t) 4931 4944 (fontified t face font-lock-string-face) 4944 4950 (fontified t) 4950 4962 (fontified t face font-lock-string-face) 4962 4976 (fontified t) 4976 4989 (fontified t face font-lock-string-face) 4989 4995 (fontified t) 4995 5021 (fontified t face font-lock-string-face) 5021 5027 (fontified t) 5027 5039 (fontified t face font-lock-string-face) 5039 5045 (fontified t) 5045 5058 (fontified t face font-lock-string-face) 5058 5064 (fontified t) 5064 5076 (fontified t face font-lock-string-face) 5076 5090 (fontified t) 5090 5106 (fontified t face font-lock-string-face) 5106 5112 (fontified t) 5112 5143 (fontified t face font-lock-string-face) 5143 5149 (fontified t) 5149 5161 (fontified t face font-lock-string-face) 5161 5167 (fontified t) 5167 5180 (fontified t face font-lock-string-face) 5180 5186 (fontified t) 5186 5198 (fontified t face font-lock-string-face) 5198 5212 (fontified t) 5212 5226 (fontified t face font-lock-string-face) 5226 5232 (fontified t) 5232 5259 (fontified t face font-lock-string-face) 5259 5265 (fontified t) 5265 5277 (fontified t face font-lock-string-face) 5277 5283 (fontified t) 5283 5296 (fontified t face font-lock-string-face) 5296 5302 (fontified t) 5302 5314 (fontified t face font-lock-string-face) 5314 5328 (fontified t) 5328 5343 (fontified t face font-lock-string-face) 5343 5349 (fontified t) 5349 5381 (fontified t face font-lock-string-face) 5381 5387 (fontified t) 5387 5399 (fontified t face font-lock-string-face) 5399 5405 (fontified t) 5405 5418 (fontified t face font-lock-string-face) 5418 5424 (fontified t) 5424 5436 (fontified t face font-lock-string-face) 5436 5450 (fontified t) 5450 5462 (fontified t face font-lock-string-face) 5462 5468 (fontified t) 5468 5490 (fontified t face font-lock-string-face) 5490 5496 (fontified t) 5496 5508 (fontified t face font-lock-string-face) 5508 5514 (fontified t) 5514 5527 (fontified t face font-lock-string-face) 5527 5533 (fontified t) 5533 5545 (fontified t face font-lock-string-face) 5545 5559 (fontified t) 5559 5573 (fontified t face font-lock-string-face) 5573 5579 (fontified t) 5579 5606 (fontified t face font-lock-string-face) 5606 5612 (fontified t) 5612 5624 (fontified t face font-lock-string-face) 5624 5630 (fontified t) 5630 5643 (fontified t face font-lock-string-face) 5643 5649 (fontified t) 5649 5661 (fontified t face font-lock-string-face) 5661 5675 (fontified t) 5675 5690 (fontified t face font-lock-string-face) 5690 5696 (fontified t) 5696 5727 (fontified t face font-lock-string-face) 5727 5733 (fontified t) 5733 5745 (fontified t face font-lock-string-face) 5745 5751 (fontified t) 5751 5764 (fontified t face font-lock-string-face) 5764 5770 (fontified t) 5770 5782 (fontified t face font-lock-string-face) 5782 5796 (fontified t) 5796 5806 (fontified t face font-lock-string-face) 5806 5812 (fontified t) 5812 5837 (fontified t face font-lock-string-face) 5837 5843 (fontified t) 5843 5855 (fontified t face font-lock-string-face) 5855 5861 (fontified t) 5861 5874 (fontified t face font-lock-string-face) 5874 5880 (fontified t) 5880 5892 (fontified t face font-lock-string-face) 5892 5906 (fontified t) 5906 5920 (fontified t face font-lock-string-face) 5920 5926 (fontified t) 5926 5947 (fontified t face font-lock-string-face) 5947 5953 (fontified t) 5953 5965 (fontified t face font-lock-string-face) 5965 5971 (fontified t) 5971 5984 (fontified t face font-lock-string-face) 5984 5990 (fontified t) 5990 6002 (fontified t face font-lock-string-face) 6002 6016 (fontified t) 6016 6024 (fontified t face font-lock-string-face) 6024 6030 (fontified t) 6030 6053 (fontified t face font-lock-string-face) 6053 6059 (fontified t) 6059 6071 (fontified t face font-lock-string-face) 6071 6077 (fontified t) 6077 6090 (fontified t face font-lock-string-face) 6090 6096 (fontified t) 6096 6100 (fontified t face font-lock-string-face) 6100 6114 (fontified t) 6114 6129 (fontified t face font-lock-string-face) 6129 6135 (fontified t) 6135 6166 (fontified t face font-lock-string-face) 6166 6172 (fontified t) 6172 6184 (fontified t face font-lock-string-face) 6184 6190 (fontified t) 6190 6203 (fontified t face font-lock-string-face) 6203 6209 (fontified t) 6209 6213 (fontified t face font-lock-string-face) 6213 6227 (fontified t) 6227 6243 (fontified t face font-lock-string-face) 6243 6249 (fontified t) 6249 6269 (fontified t face font-lock-string-face) 6269 6275 (fontified t) 6275 6287 (fontified t face font-lock-string-face) 6287 6293 (fontified t) 6293 6306 (fontified t face font-lock-string-face) 6306 6312 (fontified t) 6312 6316 (fontified t face font-lock-string-face) 6316 6330 (fontified t) 6330 6340 (fontified t face font-lock-string-face) 6340 6346 (fontified t) 6346 6371 (fontified t face font-lock-string-face) 6371 6377 (fontified t) 6377 6389 (fontified t face font-lock-string-face) 6389 6395 (fontified t) 6395 6408 (fontified t face font-lock-string-face) 6408 6414 (fontified t) 6414 6418 (fontified t face font-lock-string-face) 6418 6432 (fontified t) 6432 6447 (fontified t face font-lock-string-face) 6447 6453 (fontified t) 6453 6482 (fontified t face font-lock-string-face) 6482 6488 (fontified t) 6488 6500 (fontified t face font-lock-string-face) 6500 6506 (fontified t) 6506 6519 (fontified t face font-lock-string-face) 6519 6525 (fontified t) 6525 6529 (fontified t face font-lock-string-face) 6529 6543 (fontified t) 6543 6555 (fontified t face font-lock-string-face) 6555 6561 (fontified t) 6561 6587 (fontified t face font-lock-string-face) 6587 6593 (fontified t) 6593 6605 (fontified t face font-lock-string-face) 6605 6611 (fontified t) 6611 6624 (fontified t face font-lock-string-face) 6624 6630 (fontified t) 6630 6634 (fontified t face font-lock-string-face) 6634 6648 (fontified t) 6648 6657 (fontified t face font-lock-string-face) 6657 6663 (fontified t) 6663 6690 (fontified t face font-lock-string-face) 6690 6696 (fontified t) 6696 6708 (fontified t face font-lock-string-face) 6708 6714 (fontified t) 6714 6727 (fontified t face font-lock-string-face) 6727 6733 (fontified t) 6733 6737 (fontified t face font-lock-string-face) 6737 6751 (fontified t) 6751 6758 (fontified t face font-lock-string-face) 6758 6764 (fontified t) 6764 6786 (fontified t face font-lock-string-face) 6786 6792 (fontified t) 6792 6804 (fontified t face font-lock-string-face) 6804 6810 (fontified t) 6810 6823 (fontified t face font-lock-string-face) 6823 6829 (fontified t) 6829 6833 (fontified t face font-lock-string-face) 6833 6847 (fontified t) 6847 6865 (fontified t face font-lock-string-face) 6865 6871 (fontified t) 6871 6902 (fontified t face font-lock-string-face) 6902 6908 (fontified t) 6908 6920 (fontified t face font-lock-string-face) 6920 6926 (fontified t) 6926 6939 (fontified t face font-lock-string-face) 6939 6945 (fontified t) 6945 6949 (fontified t face font-lock-string-face) 6949 6963 (fontified t) 6963 6976 (fontified t face font-lock-string-face) 6976 6982 (fontified t) 6982 7009 (fontified t face font-lock-string-face) 7009 7015 (fontified t) 7015 7027 (fontified t face font-lock-string-face) 7027 7033 (fontified t) 7033 7046 (fontified t face font-lock-string-face) 7046 7052 (fontified t) 7052 7063 (fontified t face font-lock-string-face) 7063 7070 (fontified t)) #("(map #(apply data.parse-users-csv/send-email %)" 0 13 (fontified t) 13 33 (fontified t face font-lock-type-face) 33 34 (fontified t face default) 34 45 (fontified t) 45 46 (fontified t face font-lock-variable-name-face) 46 47 (fontified t)) #("(map #(apply data.parse-users-csv/send-email %)" 0 13 (fontified t) 13 33 (fontified t face font-lock-type-face) 33 34 (fontified t face default) 34 45 (fontified t) 45 46 (fontified t face font-lock-variable-name-face) 46 47 (fontified t)) #("(:require [dtm.util :as util])" 0 1 (fontified t help-echo cider--help-echo cider-locals nil cider-block-dynamic-font-lock t face (rainbow-delimiters-depth-2-face)) 1 9 (fontified t help-echo cider--help-echo cider-locals nil cider-block-dynamic-font-lock t face (clojure-keyword-face)) 9 10 (fontified t help-echo cider--help-echo cider-locals nil cider-block-dynamic-font-lock t) 10 11 (fontified t help-echo cider--help-echo cider-locals nil cider-block-dynamic-font-lock t face (rainbow-delimiters-depth-3-face)) 11 19 (fontified t help-echo cider--help-echo cider-locals nil cider-block-dynamic-font-lock t face font-lock-type-face) 19 20 (fontified t help-echo cider--help-echo cider-locals nil cider-block-dynamic-font-lock t) 20 23 (fontified t help-echo cider--help-echo cider-locals nil cider-block-dynamic-font-lock t face (clojure-keyword-face)) 23 28 (fontified t help-echo cider--help-echo cider-locals nil cider-block-dynamic-font-lock t) 28 29 (fontified t help-echo cider--help-echo cider-locals nil cider-block-dynamic-font-lock t face (rainbow-delimiters-depth-3-face)) 29 30 (fontified t help-echo cider--help-echo cider-locals nil cider-block-dynamic-font-lock t face (rainbow-delimiters-depth-2-face))) "(ns data.ids
  (:require [dtm.util :as util]))" "http://bit.ly/opms-app" #("\"OPMS app and credentials\"" 0 26 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name" "body" "receiver-email") face font-lock-string-face)) #("(cond
                                   (s/includes? receiver-email \"@\") receiver-email
                                   (= state \"Madhya Pradesh\") \"vikrant.puri@hihseed.org\"
                                   (= state \"Maharashtra\")    \"\")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name" "body" "receiver-email") face (rainbow-delimiters-depth-5-face)) 1 5 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name" "body" "receiver-email") face font-lock-keyword-face) 5 41 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name" "body" "receiver-email")) 41 42 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name" "body" "receiver-email") face (rainbow-delimiters-depth-6-face)) 42 43 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name" "body" "receiver-email") face font-lock-type-face) 43 44 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name" "body" "receiver-email") face default) 44 69 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name" "body" "receiver-email")) 69 72 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name" "body" "receiver-email") face font-lock-string-face) 72 73 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name" "body" "receiver-email") face (rainbow-delimiters-depth-6-face)) 73 124 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name" "body" "receiver-email")) 124 125 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name" "body" "receiver-email") face (rainbow-delimiters-depth-6-face)) 125 133 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name" "body" "receiver-email")) 133 149 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name" "body" "receiver-email") face font-lock-string-face) 149 150 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name" "body" "receiver-email") face (rainbow-delimiters-depth-6-face)) 150 151 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name" "body" "receiver-email")) 151 177 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name" "body" "receiver-email") face font-lock-string-face) 177 213 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name" "body" "receiver-email")) 213 214 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name" "body" "receiver-email") face (rainbow-delimiters-depth-6-face)) 214 222 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name" "body" "receiver-email")) 222 235 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name" "body" "receiver-email") face font-lock-string-face) 235 236 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name" "body" "receiver-email") face (rainbow-delimiters-depth-6-face)) 236 240 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name" "body" "receiver-email")) 240 242 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name" "body" "receiver-email") face font-lock-string-face) 242 243 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name" "body" "receiver-email") face (rainbow-delimiters-depth-5-face))) #("(str \"Dear \"
                                      name
                                      \",\\n\\nYou can download the OPMS app from https://goo.gl/yrHLXg\\n\\nYour credentials are : \\n\\tUsername : \"
                                      username
                                      \"\\n\\tPassword : \"
                                      password
                                      \"\\n\\nSteps to install the app:\\n1. Follow this tutorial : https://www.maketecheasier.com/install-apps-from-unknown-sources-android/\\n2. Open the app download link given above in your android phone.\\n3. Click the download button and download the file.\\n\"
                                      \"4. Once the file is downloaded, a \\\"Download Complete\\\" notification will appear in the Android status bar. Pull down the status bar to reveal the notification in detail, which will show the full name of the APK file. Press the notification to install.\\n\\n\"
                                      \"If you have any questions, please send an email to deploy@mygram.me\\n\\n\"
                                      \"Regards\\nMygram Connect Pvt Ltd\\n\")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email") face (rainbow-delimiters-depth-5-face)) 1 4 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email") face font-lock-builtin-face) 4 5 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email")) 5 12 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email") face font-lock-string-face) 12 51 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email")) 51 94 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email")) 94 96 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email") face font-lock-string-face) 96 98 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email") face (bold font-lock-string-face)) 98 100 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email") face (bold font-lock-string-face)) 100 156 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email") face font-lock-string-face) 156 158 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email") face (bold font-lock-string-face)) 158 160 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email") face (bold font-lock-string-face)) 160 183 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email") face font-lock-string-face) 183 185 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email") face (bold font-lock-string-face)) 185 187 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email") face (bold font-lock-string-face)) 187 199 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email") face font-lock-string-face) 199 238 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email")) 238 285 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email")) 285 286 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email") face font-lock-string-face) 286 288 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email") face (bold font-lock-string-face)) 288 290 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email") face (bold font-lock-string-face)) 290 302 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email") face font-lock-string-face) 302 341 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email")) 341 388 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email")) 388 389 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email") face font-lock-string-face) 389 391 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email") face (bold font-lock-string-face)) 391 393 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email") face (bold font-lock-string-face)) 393 418 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email") face font-lock-string-face) 418 420 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email") face (bold font-lock-string-face)) 420 519 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email") face font-lock-string-face) 519 521 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email") face (bold font-lock-string-face)) 521 585 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email") face font-lock-string-face) 585 587 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email") face (bold font-lock-string-face)) 587 638 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email") face font-lock-string-face) 638 640 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email") face (bold font-lock-string-face)) 640 641 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email") face font-lock-string-face) 641 642 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email")) 642 680 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email")) 680 715 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email") face font-lock-string-face) 715 717 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email") face (bold font-lock-string-face)) 717 734 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email") face font-lock-string-face) 734 736 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email") face (bold font-lock-string-face)) 736 933 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email") face font-lock-string-face) 933 935 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email") face (bold font-lock-string-face)) 935 937 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email") face (bold font-lock-string-face)) 937 938 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email") face font-lock-string-face) 938 977 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email")) 977 1045 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email") face font-lock-string-face) 1045 1047 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email") face (bold font-lock-string-face)) 1047 1049 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email") face (bold font-lock-string-face)) 1049 1050 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email") face font-lock-string-face) 1050 1051 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email")) 1051 1089 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email")) 1089 1097 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email") face font-lock-string-face) 1097 1099 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email") face (bold font-lock-string-face)) 1099 1121 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email") face font-lock-string-face) 1121 1123 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email") face (bold font-lock-string-face)) 1123 1124 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email") face font-lock-string-face) 1124 1125 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "defn" "body" "receiver-email") face (rainbow-delimiters-depth-5-face))) #("(email/send-message {:host    \"smtp.gmail.com\"
                       :user    \"deploy@mygram.me\"
                       :pass    \"fancyLikeThat\"
                       :ssl     true}
                      {:from    \"deploy@mygram.me\"
                       :to      (cond
                                  (s/includes? receiver-email \"@\") receiver-email
                                  (= state \"Madhya Pradesh\") \"vikrant.puri@hihseed.org\"
                                  (= state \"Maharashtra\")    \"\")
                       :subject \"OPMS app and credentials\"
                       :body    (str \"Dear \"
                                     name
                                     \",\\n\\nYou can download the OPMS app from https://goo.gl/yrHLXg\\n\\nYour credentials are : \\n\\tUsername : \"
                                     username
                                     \"\\n\\tPassword : \"
                                     password
                                     \"\\n\\nSteps to install the app:\\n1. Follow this tutorial : https://www.maketecheasier.com/install-apps-from-unknown-sources-android/\\n2. Open the app download link given above in your android phone.\\n3. Click the download button and download the file.\\n\"
                                     \"4. Once the file is downloaded, a \\\"Download Complete\\\" notification will appear in the Android status bar. Pull down the status bar to reveal the notification in detail, which will show the full name of the APK file. Press the notification to install.\\n\\n\"
                                     \"If you have any questions, please send an email to deploy@mygram.me\\n\\n\"
                                     \"Regards\\nMygram Connect Pvt Ltd\\n\")})" 0 1 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face (rainbow-delimiters-depth-2-face)) 1 6 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face font-lock-type-face) 6 7 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face default) 7 20 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name")) 20 21 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face (rainbow-delimiters-depth-3-face)) 21 26 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face (clojure-keyword-face)) 26 30 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name")) 30 46 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face font-lock-string-face) 46 70 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name")) 70 75 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face (clojure-keyword-face)) 75 79 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name")) 79 97 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face font-lock-string-face) 97 98 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name")) 98 121 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name")) 121 126 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face (clojure-keyword-face)) 126 130 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name")) 130 145 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face font-lock-string-face) 145 169 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name")) 169 173 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face (clojure-keyword-face)) 173 178 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name")) 178 182 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face font-lock-constant-face) 182 183 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face (rainbow-delimiters-depth-3-face)) 183 206 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name")) 206 207 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face (rainbow-delimiters-depth-3-face)) 207 212 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face (clojure-keyword-face)) 212 216 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name")) 216 234 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face font-lock-string-face) 234 235 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name")) 235 258 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name")) 258 261 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face (clojure-keyword-face)) 261 267 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name")) 267 268 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face (rainbow-delimiters-depth-4-face)) 268 272 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face font-lock-keyword-face) 272 273 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name")) 273 307 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name")) 307 308 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face (rainbow-delimiters-depth-5-face)) 308 309 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face font-lock-type-face) 309 310 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face default) 310 335 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name")) 335 338 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face font-lock-string-face) 338 339 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face (rainbow-delimiters-depth-5-face)) 339 355 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name")) 355 389 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name")) 389 390 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face (rainbow-delimiters-depth-5-face)) 390 398 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name")) 398 414 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face font-lock-string-face) 414 415 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face (rainbow-delimiters-depth-5-face)) 415 416 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name")) 416 442 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face font-lock-string-face) 442 443 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name")) 443 477 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name")) 477 478 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face (rainbow-delimiters-depth-5-face)) 478 486 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name")) 486 499 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face font-lock-string-face) 499 500 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face (rainbow-delimiters-depth-5-face)) 500 504 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name")) 504 506 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face font-lock-string-face) 506 507 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face (rainbow-delimiters-depth-4-face)) 507 531 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name")) 531 539 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face (clojure-keyword-face)) 539 540 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name")) 540 566 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face font-lock-string-face) 566 590 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name")) 590 595 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face (clojure-keyword-face)) 595 599 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name")) 599 600 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face (rainbow-delimiters-depth-4-face)) 600 603 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face font-lock-builtin-face) 603 604 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name")) 604 611 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face font-lock-string-face) 611 612 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name")) 612 691 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name")) 691 693 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face font-lock-string-face) 693 695 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face (bold font-lock-string-face)) 695 697 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face (bold font-lock-string-face)) 697 753 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face font-lock-string-face) 753 755 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face (bold font-lock-string-face)) 755 757 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face (bold font-lock-string-face)) 757 780 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face font-lock-string-face) 780 782 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face (bold font-lock-string-face)) 782 784 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face (bold font-lock-string-face)) 784 796 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face font-lock-string-face) 796 797 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name")) 797 880 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name")) 880 881 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face font-lock-string-face) 881 883 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face (bold font-lock-string-face)) 883 885 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face (bold font-lock-string-face)) 885 897 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face font-lock-string-face) 897 898 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name")) 898 944 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name")) 944 981 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name")) 981 982 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face font-lock-string-face) 982 984 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face (bold font-lock-string-face)) 984 986 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face (bold font-lock-string-face)) 986 1011 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face font-lock-string-face) 1011 1013 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face (bold font-lock-string-face)) 1013 1112 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face font-lock-string-face) 1112 1114 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face (bold font-lock-string-face)) 1114 1178 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face font-lock-string-face) 1178 1180 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face (bold font-lock-string-face)) 1180 1231 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face font-lock-string-face) 1231 1233 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face (bold font-lock-string-face)) 1233 1234 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face font-lock-string-face) 1234 1235 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name")) 1235 1272 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name")) 1272 1307 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face font-lock-string-face) 1307 1309 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face (bold font-lock-string-face)) 1309 1326 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face font-lock-string-face) 1326 1328 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face (bold font-lock-string-face)) 1328 1525 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face font-lock-string-face) 1525 1527 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face (bold font-lock-string-face)) 1527 1529 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face (bold font-lock-string-face)) 1529 1530 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face font-lock-string-face) 1530 1531 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name")) 1531 1568 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name")) 1568 1636 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face font-lock-string-face) 1636 1638 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face (bold font-lock-string-face)) 1638 1640 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face (bold font-lock-string-face)) 1640 1641 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face font-lock-string-face) 1641 1679 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name")) 1679 1687 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face font-lock-string-face) 1687 1689 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face (bold font-lock-string-face)) 1689 1711 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face font-lock-string-face) 1711 1713 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face (bold font-lock-string-face)) 1713 1714 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face font-lock-string-face) 1714 1715 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face (rainbow-delimiters-depth-4-face)) 1715 1716 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face (rainbow-delimiters-depth-3-face)) 1716 1717 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "lindex" "state" "password" "username" "receiver-email" "name") face (rainbow-delimiters-depth-2-face))) "https://rebrand.ly/opms" "[   [     \"Vikrant Puri\",     \"vikrant.puri@hihseed.org\",     \"8736960000\",     \"pro-how-ivy\",     \"Madhya Pradesh\"   ],   [     \"Subodh Karnik\",     \"subodh.karnik@hihseed.org\",     \"9669622033\",     \"mug-rad-out\",     \"Madhya Pradesh\"   ],   [     \"Alok Mishra\",     \"alok.mishra@hihseed.org\",     \"7024466336\",     \"rot-fog-ado\",     \"Madhya Pradesh\"   ],   [     \"Jini Nikita Das​\",     \"jini.nikitadas@hihseed.org\",     \"9826812479\",     \"ray-cow-ivy\",     \"Madhya Pradesh\"   ],   [     \"Vijay Kumarvankar\",     \"vijay.kumarvankar@hihseed.org\",     \"9754212571\",     \"sky-sly-men\",     \"Madhya Pradesh\"   ],   [     \"Shiksha Thakkur\",     \"shisksha.thakkur@hihseed.org\",     \"7805041142\",     \"orb-tor-nay\",     \"Madhya Pradesh\"   ],   [     \"Ajay Songara\",     \"Ajay.keshavlal@hihseed.org\",     \"7828334945\",     \"bag-wax-opt\",     \"Madhya Pradesh\"   ],   [     \"Shaitan Meena\",     \"Meenaakshay9755112188@gmail.com\",     \"9755112188\",     \"war-wye-fig\",     \"Madhya Pradesh\"   ],   [     \"Kapil Kachawa\",     \"Kkachhawa55@gmail.com\",     \"9691292817\",     \"cot-sue-arc\",     \"Madhya Pradesh\"   ],   [     \"Hemant Chouhan\",     \"hemant1996.chuvan@gmail.com\",     \"9575447033\",     \"mag-imp-sue\",     \"Madhya Pradesh\"   ],   [     \"Kiran Rahtore\",     \"Rathore.kiran05071998@gmail.com\",     \"9993446677\",     \"win-rep-pot\",     \"Madhya Pradesh\"   ],   [     \"Nisita Chouhan\",     \"vikrant.puri@hihseed.org\",     \"8435451021\",     \"sly-set-ram\",     \"Madhya Pradesh\"   ],   [     \"Deepa Pal\",     \"vikrant.puri@hihseed.org\",     \"9589064740\",     \"mag-wig-neg\",     \"Madhya Pradesh\"   ],   [     \"Nisha Bhabar\",     \"vikrant.puri@hihseed.org\",     \"9165159825\",     \"lie-mid-tot\",     \"Madhya Pradesh\"   ],   [     \"Sunita Patel\",     \"vikrant.puri@hihseed.org\",     \"9753695047\",     \"mud-kay-out\",     \"Madhya Pradesh\"   ],   [     \"Farida Bee\",     \"Syedfarida625@gmail.com\",     \"8435440733\",     \"bud-men-bus\",     \"Madhya Pradesh\"   ],   [     \"Gopal Patel\",     \"gopalpateldws@gmail.com\",     \"9977204791\",     \"man-hen-new\",     \"Madhya Pradesh\"   ],   [     \"Umesh Nagar\",     \"uminagar144@gmail.com\",     \"8827666884\",     \"rap-dis-ala\",     \"Madhya Pradesh\"   ],   [     \"Rahul Malviya\",     \"rahulmalviya8883@gmail.com\",     \"8770120782\",     \"raw-bog-bet\",     \"Madhya Pradesh\"   ],   [     \"Sanju Choudhary\",     \"vikrant.puri@hihseed.org\",     \"7999359978\",     \"dal-pat-mot\",     \"Madhya Pradesh\"   ],   [     \"Bhola Rao\",     \"vikrant.puri@hihseed.org\",     \"7000245137\",     \"nab-lag-cat\",     \"Madhya Pradesh\"   ],   [     \"Jyothi Rajput\",     \"vikrant.puri@hihseed.org\",     \"9617113906\",     \"rib-coy-fin\",     \"Madhya Pradesh\"   ],   [     \"Divya Rani\",     \"Divyaaneema29nov1993@gmail.com\",     \"7747958028\",     \"neg-gel-hue\",     \"Madhya Pradesh\"   ],   [     \"Hemlata\",     \"vikrant.puri@hihseed.org\",     \"6260808575\",     \"lie-pip-add\",     \"Madhya Pradesh\"   ],   [     \"Karthikeyan Arjunan\",     \"karthikeyan.a@hihseed.org\",     \"9944976675\",     \"lap-wis-doc\",     \"Maharashtra\"   ],   [     \"Shrimant Shindhe\",     \"shrimant.shinde@hihseed.org\",     \"9850990873\",     \"cut-war-raw\",     \"Maharashtra\"   ],   [     \"Mohsin Shaikh\",     \"mohsin.vazir@hihseed.org\",     \"8007199682\",     \"dug-aid-bed\",     \"Maharashtra\"   ],   [     \"Milind Prabhakar Dange\",     \"milind.dange@hihseed.org\",     \"9881536580\",     \"one-tin-sab\",     \"Maharashtra\"   ],   [     \"Rishika Shaw\",     \"rishika.j@hihseed.org\",     \"7387253315\",     \"ham-ago-pup\",     \"Maharashtra\"   ],   [     \"Sai Varshan\",     \"saivarshan.nrm@hihseed.org\",     \"8056792737\",     \"nah-aid-dig\",     \"Maharashtra\"   ],   [     \"Sarika Shinde\",     \"karthikeyan.a@hihseed.org\",     \"7066802559\",     \"lie-ooh-apt\",     \"Maharashtra\"   ],   [     \"Minakshi Dinkar Ghare\",     \"karthikeyan.a@hihseed.org\",     \"9049300816\",     \"axe-mot-pea\",     \"Maharashtra\"   ],   [     \"Pratibha Keshav Dahale\",     \"karthikeyan.a@hihseed.org\",     \"9158756284\",     \"bel-mol-spa\",     \"Maharashtra\"   ],   [     \"Rupali Suresh Pavale\",     \"karthikeyan.a@hihseed.org\",     \"9763651868\",     \"sew-ash-six\",     \"Maharashtra\"   ],   [     \"Jyoti Sunil Shedge\",     \"karthikeyan.a@hihseed.org\",     \"7378714654\",     \"joe-tom-hit\",     \"Maharashtra\"   ],   [     \"Swaminathan\",     \"swaminathan@hihindia.org\",     \"9381882100\",     \"ash-tan-wax\",     \"Tamil Nadu\"   ],   [     \"Arul Durai\",     \"aruldurai.s@hihseed.org\",     \"7708558299\",     \"won-cox-spa\",     \"Tamil Nadu\"   ],   [     \"Jaisankar\",     \"jaisankar.shg@hihseed.org\",     \"9500909024\",     \"nor-man-ski\",     \"Tamil Nadu\"   ],   [     \"ThangaDurai\",     \"thangadurai.b@hihseed.org\",     \"9381882166\",     \"pap-shy-dad\",     \"Tamil Nadu\"   ],   [     \"Vinoth Kumar\",     \"vinoth.kumar@hihseed.org\",     \"9566550120\",     \"pan-rid-chi\",     \"Tamil Nadu\"   ],   [     \"Bharathi Perumal\",     \"bharathi.t@hihseed.org\",     \"9566595239\",     \"foe-got-thy\",     \"Tamil Nadu\"   ],   [     \"Selva Kumar\",     \"selvakumar.s@hihseed.org\",     \"9677805261\",     \"fab-war-add\",     \"Tamil Nadu\"   ],   [     \"Radha Krishnan\",     \"radhakrishnan.vup@hihseed.org\",     \"8220217551\",     \"ask-g
" "el-tin\",     \"Tamil Nadu\"   ],   [     \"Manisha Devi\",     \"manishadevi.t@hihseed.org\",     \"9790115518\",     \"buy-nun-pit\",     \"Tamil Nadu\"   ],   [     \"Balasubramani\",     \"balasubramani.clep@hihseed.org\",     \"8072452955\",     \"pap-ear-egg\",     \"Tamil Nadu\"   ],   [     \"Mageshwari\",     \"magereshma@gmail.com\",     \"6381572709\",     \"tee-elf-rag\",     \"Tamil Nadu\"   ],   [     \"Jaya Prakash\",     \"jayaprakash.y@hihseed.org\",     \"9442059710\",     \"its-mad-yet\",     \"Tamil Nadu\"   ],   [     \"Purushothaman\",     \"purushothaman.nrm@hihseed.org\",     \"9994614926\",     \"bet-try-par\",     \"Tamil Nadu\"   ],   [     \"Umapathy\",     \"umapathy.km@hihseed.org\",     \"9244680116\",     \"rip-cod-pac\",     \"Tamil Nadu\"   ],   [     \"Moses Samuel\",     \"moses.g@hihseed.org\",     \"9442478525\",     \"rap-dug-new\",     \"Tamil Nadu\"   ],   [     \"Kannan\",     \"kannan.g@hihindia.org\",     \"9585558384\",     \"map-man-coy\",     \"HO\"   ],   [     \"Chandra Gupta\",     \"chandraguptha.nrm@hihseed.org\",     \"9790258778\",     \"are-won-thy\",     \"HO\"   ],   [     \"Princess Beula\",     \"beula@hihindia.org\",     \"9244680137\",     \"doc-axe-fly\",     \"HO\"   ],   [     \"Krishnan\",     \"krishnan.n@hihindia.org\",     \"9940150635\",     \"pie-sab-toe\",     \"HO\"   ],   [     \"Steve Robison\",     \"steven.robinson@hihseed.org\",     \"9790709641\",     \"meg-gig-mil\",     \"HO\"   ],   [     \"Umashankar\",     \"umashankar.s@hihseed.org\",     \"7893291119\",     \"tar-bet-nap\",     \"HO\"   ],   [     \"Kavitha\",     \"kavitha.admin@hihseed.org\",     \"9994465988\",     \"elm-fad-win\",     \"HO\"   ],   [     \"Byrav\",     \"byrav.n@hihindia.org\",     \"8248401314\",     \"spa-rum-sip\",     \"HO\"   ],   [     \"Sandip Mookerjee\",     \"sandip.mookerjee@hihindia.org\",     \"9500041800\",     \"sac-and-rib\",     \"HO\"   ],   [     \"Madhusharan\",     \"madhu.sharan@hihindia.org\",     \"9717998555\",     \"rid-sac-sac\",     \"New Delhi\"   ] ]" #("[[\"Vikrant Puri\" \"vikrant.puri@hihseed.org\" \"8736960000\" \"pro-how-ivy\" \"Madhya Pradesh\"] [\"Subodh Karnik\" \"subodh.karnik@hihseed.org\" \"9669622033\" \"mug-rad-out\" \"Madhya Pradesh\"] [\"Alok Mishra\" \"alok.mishra@hihseed.org\" \"7024466336\" \"rot-fog-ado\" \"Madhya Pradesh\"] [\"Jini Nikita Das​\" \"jini.nikitadas@hihseed.org\" \"9826812479\" \"ray-cow-ivy\" \"Madhya Pradesh\"] [\"Vijay Kumarvankar\" \"vijay.kumarvankar@hihseed.org\" \"9754212571\" \"sky-sly-men\" \"Madhya Pradesh\"] [\"Shiksha Thakkur\" \"shisksha.thakkur@hihseed.org\" \"7805041142\" \"orb-tor-nay\" \"Madhya Pradesh\"] [\"Ajay Songara\" \"Ajay.keshavlal@hihseed.org\" \"7828334945\" \"bag-wax-opt\" \"Madhya Pradesh\"] [\"Shaitan Meena\" \"Meenaakshay9755112188@gmail.com\" \"9755112188\" \"war-wye-fig\" \"Madhya Pradesh\"] [\"Kapil Kachawa\" \"Kkachhawa55@gmail.com\" \"9691292817\" \"cot-sue-arc\" \"Madhya Pradesh\"] [\"Hemant Chouhan\" \"hemant1996.chuvan@gmail.com\" \"9575447033\" \"mag-imp-sue\" \"Madhya Pradesh\"] [\"Kiran Rahtore\" \"Rathore.kiran05071998@gmail.com\" \"9993446677\" \"win-rep-pot\" \"Madhya Pradesh\"] [\"Nisita Chouhan\" \"vikrant.puri@hihseed.org\" \"8435451021\" \"sly-set-ram\" \"Madhya Pradesh\"] [\"Deepa Pal\" \"vikrant.puri@hihseed.org\" \"9589064740\" \"mag-wig-neg\" \"Madhya Pradesh\"] [\"Nisha Bhabar\" \"vikrant.puri@hihseed.org\" \"9165159825\" \"lie-mid-tot\" \"Madhya Pradesh\"] [\"Sunita Patel\" \"vikrant.puri@hihseed.org\" \"9753695047\" \"mud-kay-out\" \"Madhya Pradesh\"] [\"Farida Bee\" \"Syedfarida625@gmail.com\" \"8435440733\" \"bud-men-bus\" \"Madhya Pradesh\"] [\"Gopal Patel\" \"gopalpateldws@gmail.com\" \"9977204791\" \"man-hen-new\" \"Madhya Pradesh\"] [\"Umesh Nagar\" \"uminagar144@gmail.com\" \"8827666884\" \"rap-dis-ala\" \"Madhya Pradesh\"] [\"Rahul Malviya\" \"rahulmalviya8883@gmail.com\" \"8770120782\" \"raw-bog-bet\" \"Madhya Pradesh\"] [\"Sanju Choudhary\" \"vikrant.puri@hihseed.org\" \"7999359978\" \"dal-pat-mot\" \"Madhya Pradesh\"] [\"Bhola Rao\" \"vikrant.puri@hihseed.org\" \"7000245137\" \"nab-lag-cat\" \"Madhya Pradesh\"] [\"Jyothi Rajput\" \"vikrant.puri@hihseed.org\" \"9617113906\" \"rib-coy-fin\" \"Madhya Pradesh\"] [\"Divya Rani\" \"Divyaaneema29nov1993@gmail.com\" \"7747958028\" \"neg-gel-hue\" \"Madhya Pradesh\"] [\"Hemlata\" \"vikrant.puri@hihseed.org\" \"6260808575\" \"lie-pip-add\" \"Madhya Pradesh\"] [\"Karthikeyan Arjunan\" \"karthikeyan.a@hihseed.org\" \"9944976675\" \"lap-wis-doc\" \"Maharashtra\"] [\"Shrimant Shindhe\" \"shrimant.shinde@hihseed.org\" \"9850990873\" \"cut-war-raw\" \"Maharashtra\"] [\"Mohsin Shaikh\" \"mohsin.vazir@hihseed.org\" \"8007199682\" \"dug-aid-bed\" \"Maharashtra\"] [\"Milind Prabhakar Dange\" \"milind.dange@hihseed.org\" \"9881536580\" \"one-tin-sab\" \"Maharashtra\"] [\"Rishika Shaw\" \"rishika.j@hihseed.org\" \"7387253315\" \"ham-ago-pup\" \"Maharashtra\"] [\"Sai Varshan\" \"saivarshan.nrm@hihseed.org\" \"8056792737\" \"nah-aid-dig\" \"Maharashtra\"] [\"Sarika Shinde\" \"karthikeyan.a@hihseed.org\" \"7066802559\" \"lie-ooh-apt\" \"Maharashtra\"] [\"Minakshi Dinkar Ghare\" \"karthikeyan.a@hihseed.org\" \"9049300816\" \"axe-mot-pea\" \"Maharashtra\"] [\"Pratibha Keshav Dahale\" \"karthikeyan.a@hihseed.org\" \"9158756284\" \"bel-mol-spa\" \"Maharashtra\"] [\"Rupali Suresh Pavale\" \"karthikeyan.a@hihseed.org\" \"9763651868\" \"sew-ash-six\" \"Maharashtra\"] [\"Jyoti Sunil Shedge\" \"karthikeyan.a@hihseed.org\" \"7378714654\" \"joe-tom-hit\" \"Maharashtra\"] [\"Swaminathan\" \"swaminathan@hihindia.org\" \"9381882100\" \"ash-tan-wax\" \"Tamil Nadu\"] [\"Arul Durai\" \"aruldurai.s@hihseed.org\" \"7708558299\" \"won-cox-spa\" \"Tamil Nadu\"] [\"Jaisankar\" \"jaisankar.shg@hihseed.org\" \"9500909024\" \"nor-man-ski\" \"Tamil Nadu\"] [\"ThangaDurai\" \"thangadurai.b@hihseed.org\" \"9381882166\" \"pap-shy-dad\" \"Tamil Nadu\"] [\"Vinoth Kumar\" \"vinoth.kumar@hihseed.org\" \"9566550120\" \"pan-rid-chi\" \"Tamil Nadu\"] [\"Bharathi Perumal\" \"bharathi.t@hihseed.org\" \"9566595239\" \"foe-got-thy\" \"Tamil Nadu\"] [\"Selva Kumar\" \"selvakumar.s@hihseed.org\" \"9677805261\" \"fab-war-add\" \"Tamil Nadu\"] [\"Radha Krishnan\" \"radhakrishnan.vup@hihseed.org\" \"8220217551\" \"ask-gel-tin\" \"Tamil Nadu\"] [\"Manisha Devi\" \"manishadevi.t@hihseed.org\" \"9790115518\" \"buy-nun-pit\" \"Tamil Nadu\"] [\"Balasubramani\" \"balasubramani.clep@hihseed.org\" \"8072452955\" \"pap-ear-egg\" \"Tamil Nadu\"] [\"Mageshwari\" \"magereshma@gmail.com\" \"6381572709\" \"tee-elf-rag\" \"Tamil Nadu\"] [\"Jaya Prakash\" \"jayaprakash.y@hihseed.org\" \"9442059710\" \"its-mad-yet\" \"Tamil Nadu\"] [\"Purushothaman\" \"purushothaman.nrm@hihseed.org\" \"9994614926\" \"bet-try-par\" \"Tamil Nadu\"] [\"Umapathy\" \"umapathy.km@hihseed.org\" \"9244680116\" \"rip-cod-pac\" \"Tamil Nadu\"] [\"Moses Samuel\" \"moses.g@hihseed.org\" \"9442478525\" \"rap-dug-new\" \"Tamil Nadu\"] [\"Kannan\" \"kannan.g@hihindia.org\" \"9585558384\" \"map-man-coy\" \"HO\"] [\"Chandra Gupta\" \"chandraguptha.nrm@hihseed.org\" \"9790258778\" \"are-won-thy\" \"HO\"] [\"Princess Beula\" \"beula@hihindia.org\" \"9244680137\" \"doc-axe-fly\" \"HO\"] [\"Krishnan\" \"krishnan.n@hihindia.org\" \"9940150635\" \"pie-sab-toe\" \"HO\"] [\"Steve Robison\" \"steven.robinson@hihseed.org\" \"9790709641\" \"meg-gig-mil\" \"HO\"] [\"Umashankar\" \"umashankar.s@hihseed.org\" \"7893291119\" \"tar-bet-nap\" \"HO\"] [\"Kavitha\" \"kavitha.admin@hihseed.org\" \"9994465988\" \"elm-fad-win\" \"HO\"] [\"Byrav\" \"byrav.n@hihindia.org\" \"8248401314\" \"spa-rum-sip\" \"HO\"] [\"Sandip Mookerjee\" \"sandip.mookerjee@hihindia.org\" \"9500041800\" \"sac-and-rib\" \"HO\"] [\"Madhusharan\" \"madhu.sharan@hihindia.org\" \"9717998555\" \"rid-sac-sac\" \"New Delhi\"]]" 0 2 (fontified t) 2 16 (face font-lock-string-face fontified t) 16 17 (fontified t) 17 43 (face font-lock-string-face fontified t) 43 44 (fontified t) 44 56 (face font-lock-string-face fontified t) 56 57 (fontified t) 57 70 (face font-lock-string-face fontified t) 70 71 (fontified t) 71 87 (face font-lock-string-face fontified t) 87 90 (fontified t) 90 105 (face font-lock-string-face fontified t) 105 106 (fontified t) 106 133 (face font-lock-string-face fontified t) 133 134 (fontified t) 134 146 (face font-lock-string-face fontified t) 146 147 (fontified t) 147 160 (face font-lock-string-face fontified t) 160 161 (fontified t) 161 177 (face font-lock-string-face fontified t) 177 180 (fontified t) 180 193 (face font-lock-string-face fontified t) 193 194 (fontified t) 194 219 (face font-lock-string-face fontified t) 219 220 (fontified t) 220 232 (face font-lock-string-face fontified t) 232 233 (fontified t) 233 246 (face font-lock-string-face fontified t) 246 247 (fontified t) 247 263 (face font-lock-string-face fontified t) 263 266 (fontified t) 266 284 (face font-lock-string-face fontified t) 284 285 (fontified t) 285 313 (face font-lock-string-face fontified t) 313 314 (fontified t) 314 326 (face font-lock-string-face fontified t) 326 327 (fontified t) 327 340 (face font-lock-string-face fontified t) 340 341 (fontified t) 341 357 (face font-lock-string-face fontified t) 357 360 (fontified t) 360 379 (face font-lock-string-face fontified t) 379 380 (fontified t) 380 411 (face font-lock-string-face fontified t) 411 412 (fontified t) 412 424 (face font-lock-string-face fontified t) 424 425 (fontified t) 425 438 (face font-lock-string-face fontified t) 438 439 (fontified t) 439 455 (face font-lock-string-face fontified t) 455 458 (fontified t) 458 475 (face font-lock-string-face fontified t) 475 476 (fontified t) 476 506 (face font-lock-string-face fontified t) 506 507 (fontified t) 507 519 (face font-lock-string-face fontified t) 519 520 (fontified t) 520 533 (face font-lock-string-face fontified t) 533 534 (fontified t) 534 550 (face font-lock-string-face fontified t) 550 553 (fontified t) 553 567 (face font-lock-string-face fontified t) 567 568 (fontified t) 568 596 (face font-lock-string-face fontified t) 596 597 (fontified t) 597 609 (face font-lock-string-face fontified t) 609 610 (fontified t) 610 623 (face font-lock-string-face fontified t) 623 624 (fontified t) 624 640 (face font-lock-string-face fontified t) 640 643 (fontified t) 643 658 (face font-lock-string-face fontified t) 658 659 (fontified t) 659 692 (face font-lock-string-face fontified t) 692 693 (fontified t) 693 705 (face font-lock-string-face fontified t) 705 706 (fontified t) 706 719 (face font-lock-string-face fontified t) 719 720 (fontified t) 720 736 (face font-lock-string-face fontified t) 736 739 (fontified t) 739 754 (face font-lock-string-face fontified t) 754 755 (fontified t) 755 778 (face font-lock-string-face fontified t) 778 779 (fontified t) 779 791 (face font-lock-string-face fontified t) 791 792 (fontified t) 792 805 (face font-lock-string-face fontified t) 805 806 (fontified t) 806 822 (face font-lock-string-face fontified t) 822 825 (fontified t) 825 841 (face font-lock-string-face fontified t) 841 842 (fontified t) 842 871 (face font-lock-string-face fontified t) 871 872 (fontified t) 872 884 (face font-lock-string-face fontified t) 884 885 (fontified t) 885 898 (face font-lock-string-face fontified t) 898 899 (fontified t) 899 915 (face font-lock-string-face fontified t) 915 918 (fontified t) 918 933 (face font-lock-string-face fontified t) 933 934 (fontified t) 934 967 (face font-lock-string-face fontified t) 967 968 (fontified t) 968 980 (face font-lock-string-face fontified t) 980 981 (fontified t) 981 994 (face font-lock-string-face fontified t) 994 995 (fontified t) 995 1011 (face font-lock-string-face fontified t) 1011 1014 (fontified t) 1014 1030 (face font-lock-string-face fontified t) 1030 1031 (fontified t) 1031 1057 (face font-lock-string-face fontified t) 1057 1058 (fontified t) 1058 1070 (face font-lock-string-face fontified t) 1070 1071 (fontified t) 1071 1084 (face font-lock-string-face fontified t) 1084 1085 (fontified t) 1085 1101 (face font-lock-string-face fontified t) 1101 1104 (fontified t) 1104 1115 (face font-lock-string-face fontified t) 1115 1116 (fontified t) 1116 1142 (face font-lock-string-face fontified t) 1142 1143 (fontified t) 1143 1155 (face font-lock-string-face fontified t) 1155 1156 (fontified t) 1156 1169 (face font-lock-string-face fontified t) 1169 1170 (fontified t) 1170 1186 (face font-lock-string-face fontified t) 1186 1189 (fontified t) 1189 1203 (face font-lock-string-face fontified t) 1203 1204 (fontified t) 1204 1230 (face font-lock-string-face fontified t) 1230 1231 (fontified t) 1231 1243 (face font-lock-string-face fontified t) 1243 1244 (fontified t) 1244 1257 (face font-lock-string-face fontified t) 1257 1258 (fontified t) 1258 1274 (face font-lock-string-face fontified t) 1274 1277 (fontified t) 1277 1291 (face font-lock-string-face fontified t) 1291 1292 (fontified t) 1292 1318 (face font-lock-string-face fontified t) 1318 1319 (fontified t) 1319 1331 (face font-lock-string-face fontified t) 1331 1332 (fontified t) 1332 1345 (face font-lock-string-face fontified t) 1345 1346 (fontified t) 1346 1362 (face font-lock-string-face fontified t) 1362 1365 (fontified t) 1365 1377 (face font-lock-string-face fontified t) 1377 1378 (fontified t) 1378 1403 (face font-lock-string-face fontified t) 1403 1404 (fontified t) 1404 1416 (face font-lock-string-face fontified t) 1416 1417 (fontified t) 1417 1430 (face font-lock-string-face fontified t) 1430 1431 (fontified t) 1431 1447 (face font-lock-string-face fontified t) 1447 1450 (fontified t) 1450 1463 (face font-lock-string-face fontified t) 1463 1464 (fontified t) 1464 1489 (face font-lock-string-face fontified t) 1489 1490 (fontified t) 1490 1502 (face font-lock-string-face fontified t) 1502 1503 (fontified t) 1503 1516 (face font-lock-string-face fontified t) 1516 1517 (fontified t) 1517 1533 (face font-lock-string-face fontified t) 1533 1536 (fontified t) 1536 1549 (face font-lock-string-face fontified t) 1549 1550 (fontified t) 1550 1573 (face font-lock-string-face fontified t) 1573 1574 (fontified t) 1574 1586 (face font-lock-string-face fontified t) 1586 1587 (fontified t) 1587 1600 (face font-lock-string-face fontified t) 1600 1601 (fontified t) 1601 1617 (face font-lock-string-face fontified t) 1617 1620 (fontified t) 1620 1635 (face font-lock-string-face fontified t) 1635 1636 (fontified t) 1636 1664 (face font-lock-string-face fontified t) 1664 1665 (fontified t) 1665 1677 (face font-lock-string-face fontified t) 1677 1678 (fontified t) 1678 1691 (face font-lock-string-face fontified t) 1691 1692 (fontified t) 1692 1708 (face font-lock-string-face fontified t) 1708 1711 (fontified t) 1711 1728 (face font-lock-string-face fontified t) 1728 1729 (fontified t) 1729 1755 (face font-lock-string-face fontified t) 1755 1756 (fontified t) 1756 1768 (face font-lock-string-face fontified t) 1768 1769 (fontified t) 1769 1782 (face font-lock-string-face fontified t) 1782 1783 (fontified t) 1783 1799 (face font-lock-string-face fontified t) 1799 1802 (fontified t) 1802 1813 (face font-lock-string-face fontified t) 1813 1814 (fontified t) 1814 1840 (face font-lock-string-face fontified t) 1840 1841 (fontified t) 1841 1853 (face font-lock-string-face fontified t) 1853 1854 (fontified t) 1854 1867 (face font-lock-string-face fontified t) 1867 1868 (fontified t) 1868 1884 (face font-lock-string-face fontified t) 1884 1887 (fontified t) 1887 1902 (face font-lock-string-face fontified t) 1902 1903 (fontified t) 1903 1929 (face font-lock-string-face fontified t) 1929 1930 (fontified t) 1930 1942 (face font-lock-string-face fontified t) 1942 1943 (fontified t) 1943 1956 (face font-lock-string-face fontified t) 1956 1957 (fontified t) 1957 1973 (face font-lock-string-face fontified t) 1973 1976 (fontified t) 1976 1988 (face font-lock-string-face fontified t) 1988 1989 (fontified t) 1989 2021 (face font-lock-string-face fontified t) 2021 2022 (fontified t) 2022 2034 (face font-lock-string-face fontified t) 2034 2035 (fontified t) 2035 2048 (face font-lock-string-face fontified t) 2048 2049 (fontified t) 2049 2065 (face font-lock-string-face fontified t) 2065 2068 (fontified t) 2068 2077 (face font-lock-string-face fontified t) 2077 2078 (fontified t) 2078 2104 (face font-lock-string-face fontified t) 2104 2105 (fontified t) 2105 2117 (face font-lock-string-face fontified t) 2117 2118 (fontified t) 2118 2131 (face font-lock-string-face fontified t) 2131 2132 (fontified t) 2132 2148 (face font-lock-string-face fontified t) 2148 2151 (fontified t) 2151 2172 (face font-lock-string-face fontified t) 2172 2173 (fontified t) 2173 2200 (face font-lock-string-face fontified t) 2200 2201 (fontified t) 2201 2213 (face font-lock-string-face fontified t) 2213 2214 (fontified t) 2214 2227 (face font-lock-string-face fontified t) 2227 2228 (fontified t) 2228 2241 (face font-lock-string-face fontified t) 2241 2244 (fontified t) 2244 2262 (face font-lock-string-face fontified t) 2262 2263 (fontified t) 2263 2292 (face font-lock-string-face fontified t) 2292 2293 (fontified t) 2293 2305 (face font-lock-string-face fontified t) 2305 2306 (fontified t) 2306 2319 (face font-lock-string-face fontified t) 2319 2320 (fontified t) 2320 2333 (face font-lock-string-face fontified t) 2333 2336 (fontified t) 2336 2351 (face font-lock-string-face fontified t) 2351 2352 (fontified t) 2352 2378 (face font-lock-string-face fontified t) 2378 2379 (fontified t) 2379 2391 (face font-lock-string-face fontified t) 2391 2392 (fontified t) 2392 2405 (face font-lock-string-face fontified t) 2405 2406 (fontified t) 2406 2419 (face font-lock-string-face fontified t) 2419 2422 (fontified t) 2422 2446 (face font-lock-string-face fontified t) 2446 2447 (fontified t) 2447 2473 (face font-lock-string-face fontified t) 2473 2474 (fontified t) 2474 2486 (face font-lock-string-face fontified t) 2486 2487 (fontified t) 2487 2500 (face font-lock-string-face fontified t) 2500 2501 (fontified t) 2501 2514 (face font-lock-string-face fontified t) 2514 2517 (fontified t) 2517 2531 (face font-lock-string-face fontified t) 2531 2532 (fontified t) 2532 2555 (face font-lock-string-face fontified t) 2555 2556 (fontified t) 2556 2568 (face font-lock-string-face fontified t) 2568 2569 (fontified t) 2569 2582 (face font-lock-string-face fontified t) 2582 2583 (fontified t) 2583 2596 (face font-lock-string-face fontified t) 2596 2599 (fontified t) 2599 2612 (face font-lock-string-face fontified t) 2612 2613 (fontified t) 2613 2641 (face font-lock-string-face fontified t) 2641 2642 (fontified t) 2642 2654 (face font-lock-string-face fontified t) 2654 2655 (fontified t) 2655 2668 (face font-lock-string-face fontified t) 2668 2669 (fontified t) 2669 2682 (face font-lock-string-face fontified t) 2682 2685 (fontified t) 2685 2700 (face font-lock-string-face fontified t) 2700 2701 (fontified t) 2701 2728 (face font-lock-string-face fontified t) 2728 2729 (fontified t) 2729 2741 (face font-lock-string-face fontified t) 2741 2742 (fontified t) 2742 2755 (face font-lock-string-face fontified t) 2755 2756 (fontified t) 2756 2769 (face font-lock-string-face fontified t) 2769 2772 (fontified t) 2772 2795 (face font-lock-string-face fontified t) 2795 2796 (fontified t) 2796 2823 (face font-lock-string-face fontified t) 2823 2824 (fontified t) 2824 2836 (face font-lock-string-face fontified t) 2836 2837 (fontified t) 2837 2850 (face font-lock-string-face fontified t) 2850 2851 (fontified t) 2851 2864 (face font-lock-string-face fontified t) 2864 2867 (fontified t) 2867 2891 (face font-lock-string-face fontified t) 2891 2892 (fontified t) 2892 2919 (face font-lock-string-face fontified t) 2919 2920 (fontified t) 2920 2932 (face font-lock-string-face fontified t) 2932 2933 (fontified t) 2933 2946 (face font-lock-string-face fontified t) 2946 2947 (fontified t) 2947 2960 (face font-lock-string-face fontified t) 2960 2963 (fontified t) 2963 2985 (face font-lock-string-face fontified t) 2985 2986 (fontified t) 2986 3013 (face font-lock-string-face fontified t) 3013 3014 (fontified t) 3014 3026 (face font-lock-string-face fontified t) 3026 3027 (fontified t) 3027 3040 (face font-lock-string-face fontified t) 3040 3041 (fontified t) 3041 3054 (face font-lock-string-face fontified t) 3054 3057 (fontified t) 3057 3077 (face font-lock-string-face fontified t) 3077 3078 (fontified t) 3078 3105 (face font-lock-string-face fontified t) 3105 3106 (fontified t) 3106 3118 (face font-lock-string-face fontified t) 3118 3119 (fontified t) 3119 3132 (face font-lock-string-face fontified t) 3132 3133 (fontified t) 3133 3146 (face font-lock-string-face fontified t) 3146 3149 (fontified t) 3149 3162 (face font-lock-string-face fontified t) 3162 3163 (fontified t) 3163 3189 (face font-lock-string-face fontified t) 3189 3190 (fontified t) 3190 3202 (face font-lock-string-face fontified t) 3202 3203 (fontified t) 3203 3216 (face font-lock-string-face fontified t) 3216 3217 (fontified t) 3217 3229 (face font-lock-string-face fontified t) 3229 3232 (fontified t) 3232 3244 (face font-lock-string-face fontified t) 3244 3245 (fontified t) 3245 3270 (face font-lock-string-face fontified t) 3270 3271 (fontified t) 3271 3283 (face font-lock-string-face fontified t) 3283 3284 (fontified t) 3284 3297 (face font-lock-string-face fontified t) 3297 3298 (fontified t) 3298 3310 (face font-lock-string-face fontified t) 3310 3313 (fontified t) 3313 3324 (face font-lock-string-face fontified t) 3324 3325 (fontified t) 3325 3352 (face font-lock-string-face fontified t) 3352 3353 (fontified t) 3353 3365 (face font-lock-string-face fontified t) 3365 3366 (fontified t) 3366 3379 (face font-lock-string-face fontified t) 3379 3380 (fontified t) 3380 3392 (face font-lock-string-face fontified t) 3392 3395 (fontified t) 3395 3408 (face font-lock-string-face fontified t) 3408 3409 (fontified t) 3409 3436 (face font-lock-string-face fontified t) 3436 3437 (fontified t) 3437 3449 (face font-lock-string-face fontified t) 3449 3450 (fontified t) 3450 3463 (face font-lock-string-face fontified t) 3463 3464 (fontified t) 3464 3476 (face font-lock-string-face fontified t) 3476 3479 (fontified t) 3479 3493 (face font-lock-string-face fontified t) 3493 3494 (fontified t) 3494 3520 (face font-lock-string-face fontified t) 3520 3521 (fontified t) 3521 3533 (face font-lock-string-face fontified t) 3533 3534 (fontified t) 3534 3547 (face font-lock-string-face fontified t) 3547 3548 (fontified t) 3548 3560 (face font-lock-string-face fontified t) 3560 3563 (fontified t) 3563 3581 (face font-lock-string-face fontified t) 3581 3582 (fontified t) 3582 3606 (face font-lock-string-face fontified t) 3606 3607 (fontified t) 3607 3619 (face font-lock-string-face fontified t) 3619 3620 (fontified t) 3620 3633 (face font-lock-string-face fontified t) 3633 3634 (fontified t) 3634 3646 (face font-lock-string-face fontified t) 3646 3649 (fontified t) 3649 3662 (face font-lock-string-face fontified t) 3662 3663 (fontified t) 3663 3689 (face font-lock-string-face fontified t) 3689 3690 (fontified t) 3690 3702 (face font-lock-string-face fontified t) 3702 3703 (fontified t) 3703 3716 (face font-lock-string-face fontified t) 3716 3717 (fontified t) 3717 3729 (face font-lock-string-face fontified t) 3729 3732 (fontified t) 3732 3748 (face font-lock-string-face fontified t) 3748 3749 (fontified t) 3749 3780 (face font-lock-string-face fontified t) 3780 3781 (fontified t) 3781 3793 (face font-lock-string-face fontified t) 3793 3794 (fontified t) 3794 3807 (face font-lock-string-face fontified t) 3807 3808 (fontified t) 3808 3820 (face font-lock-string-face fontified t) 3820 3823 (fontified t) 3823 3837 (face font-lock-string-face fontified t) 3837 3838 (fontified t) 3838 3865 (face font-lock-string-face fontified t) 3865 3866 (fontified t) 3866 3878 (face font-lock-string-face fontified t) 3878 3879 (fontified t) 3879 3892 (face font-lock-string-face fontified t) 3892 3893 (fontified t) 3893 3905 (face font-lock-string-face fontified t) 3905 3908 (fontified t) 3908 3923 (face font-lock-string-face fontified t) 3923 3924 (fontified t) 3924 3956 (face font-lock-string-face fontified t) 3956 3957 (fontified t) 3957 3969 (face font-lock-string-face fontified t) 3969 3970 (fontified t) 3970 3983 (face font-lock-string-face fontified t) 3983 3984 (fontified t) 3984 3996 (face font-lock-string-face fontified t) 3996 3999 (fontified t) 3999 4011 (face font-lock-string-face fontified t) 4011 4012 (fontified t) 4012 4034 (face font-lock-string-face fontified t) 4034 4035 (fontified t) 4035 4047 (face font-lock-string-face fontified t) 4047 4048 (fontified t) 4048 4061 (face font-lock-string-face fontified t) 4061 4062 (fontified t) 4062 4074 (face font-lock-string-face fontified t) 4074 4077 (fontified t) 4077 4091 (face font-lock-string-face fontified t) 4091 4092 (fontified t) 4092 4119 (face font-lock-string-face fontified t) 4119 4120 (fontified t) 4120 4132 (face font-lock-string-face fontified t) 4132 4133 (fontified t) 4133 4146 (face font-lock-string-face fontified t) 4146 4147 (fontified t) 4147 4159 (face font-lock-string-face fontified t) 4159 4162 (fontified t) 4162 4177 (face font-lock-string-face fontified t) 4177 4178 (fontified t) 4178 4209 (face font-lock-string-face fontified t) 4209 4210 (fontified t) 4210 4222 (face font-lock-string-face fontified t) 4222 4223 (fontified t) 4223 4236 (face font-lock-string-face fontified t) 4236 4237 (fontified t) 4237 4249 (face font-lock-string-face fontified t) 4249 4252 (fontified t) 4252 4262 (face font-lock-string-face fontified t) 4262 4263 (fontified t) 4263 4288 (face font-lock-string-face fontified t) 4288 4289 (fontified t) 4289 4301 (face font-lock-string-face fontified t) 4301 4302 (fontified t) 4302 4315 (face font-lock-string-face fontified t) 4315 4316 (fontified t) 4316 4328 (face font-lock-string-face fontified t) 4328 4331 (fontified t) 4331 4345 (face font-lock-string-face fontified t) 4345 4346 (fontified t) 4346 4367 (face font-lock-string-face fontified t) 4367 4368 (fontified t) 4368 4380 (face font-lock-string-face fontified t) 4380 4381 (fontified t) 4381 4394 (face font-lock-string-face fontified t) 4394 4395 (fontified t) 4395 4407 (face font-lock-string-face fontified t) 4407 4410 (fontified t) 4410 4418 (face font-lock-string-face fontified t) 4418 4419 (fontified t) 4419 4442 (face font-lock-string-face fontified t) 4442 4443 (fontified t) 4443 4455 (face font-lock-string-face fontified t) 4455 4456 (fontified t) 4456 4469 (face font-lock-string-face fontified t) 4469 4470 (fontified t) 4470 4474 (face font-lock-string-face fontified t) 4474 4477 (fontified t) 4477 4492 (face font-lock-string-face fontified t) 4492 4493 (fontified t) 4493 4524 (face font-lock-string-face fontified t) 4524 4525 (fontified t) 4525 4537 (face font-lock-string-face fontified t) 4537 4538 (fontified t) 4538 4551 (face font-lock-string-face fontified t) 4551 4552 (fontified t) 4552 4556 (face font-lock-string-face fontified t) 4556 4559 (fontified t) 4559 4575 (face font-lock-string-face fontified t) 4575 4576 (fontified t) 4576 4596 (face font-lock-string-face fontified t) 4596 4597 (fontified t) 4597 4609 (face font-lock-string-face fontified t) 4609 4610 (fontified t) 4610 4623 (face font-lock-string-face fontified t) 4623 4624 (fontified t) 4624 4628 (face font-lock-string-face fontified t) 4628 4631 (fontified t) 4631 4641 (face font-lock-string-face fontified t) 4641 4642 (fontified t) 4642 4667 (face font-lock-string-face fontified t) 4667 4668 (fontified t) 4668 4680 (face font-lock-string-face fontified t) 4680 4681 (fontified t) 4681 4694 (face font-lock-string-face fontified t) 4694 4695 (fontified t) 4695 4699 (face font-lock-string-face fontified t) 4699 4702 (fontified t) 4702 4717 (face font-lock-string-face fontified t) 4717 4718 (fontified t) 4718 4747 (face font-lock-string-face fontified t) 4747 4748 (fontified t) 4748 4760 (face font-lock-string-face fontified t) 4760 4761 (fontified t) 4761 4774 (face font-lock-string-face fontified t) 4774 4775 (fontified t) 4775 4779 (face font-lock-string-face fontified t) 4779 4782 (fontified t) 4782 4794 (face font-lock-string-face fontified t) 4794 4795 (fontified t) 4795 4821 (face font-lock-string-face fontified t) 4821 4822 (fontified t) 4822 4834 (face font-lock-string-face fontified t) 4834 4835 (fontified t) 4835 4848 (face font-lock-string-face fontified t) 4848 4849 (fontified t) 4849 4853 (face font-lock-string-face fontified t) 4853 4856 (fontified t) 4856 4865 (face font-lock-string-face fontified t) 4865 4866 (fontified t) 4866 4893 (face font-lock-string-face fontified t) 4893 4894 (fontified t) 4894 4906 (face font-lock-string-face fontified t) 4906 4907 (fontified t) 4907 4920 (face font-lock-string-face fontified t) 4920 4921 (fontified t) 4921 4925 (face font-lock-string-face fontified t) 4925 4928 (fontified t) 4928 4935 (face font-lock-string-face fontified t) 4935 4936 (fontified t) 4936 4958 (face font-lock-string-face fontified t) 4958 4959 (fontified t) 4959 4971 (face font-lock-string-face fontified t) 4971 4972 (fontified t) 4972 4985 (face font-lock-string-face fontified t) 4985 4986 (fontified t) 4986 4990 (face font-lock-string-face fontified t) 4990 4993 (fontified t) 4993 5011 (face font-lock-string-face fontified t) 5011 5012 (fontified t) 5012 5043 (face font-lock-string-face fontified t) 5043 5044 (fontified t) 5044 5056 (face font-lock-string-face fontified t) 5056 5057 (fontified t) 5057 5070 (face font-lock-string-face fontified t) 5070 5071 (fontified t) 5071 5075 (face font-lock-string-face fontified t) 5075 5078 (fontified t) 5078 5091 (face font-lock-string-face fontified t) 5091 5092 (fontified t) 5092 5119 (face font-lock-string-face fontified t) 5119 5120 (fontified t) 5120 5132 (face font-lock-string-face fontified t) 5132 5133 (fontified t) 5133 5146 (face font-lock-string-face fontified t) 5146 5147 (fontified t) 5147 5158 (face font-lock-string-face fontified t) 5158 5160 (fontified t)) "[   [     \"Vikrant Puri\",     \"vikrant.puri@hihseed.org\",     \"8736960000\",     \"pro-how-ivy\",     \"Madhya Pradesh\"   ],   [     \"Subodh Karnik\",     \"subodh.karnik@hihseed.org\",     \"9669622033\",     \"mug-rad-out\",     \"Madhya Pradesh\"   ],   [     \"Alok Mishra\",     \"alok.mishra@hihseed.org\",     \"7024466336\",     \"rot-fog-ado\",     \"Madhya Pradesh\"   ],   [     \"Jini Nikita Das​\",     \"jini.nikitadas@hihseed.org\",     \"9826812479\",     \"ray-cow-ivy\",     \"Madhya Pradesh\"   ],   [     \"Vijay Kumarvankar\",     \"vijay.kumarvankar@hihseed.org\",     \"9754212571\",     \"sky-sly-men\",     \"Madhya Pradesh\"   ],   [     \"Shiksha Thakkur\",     \"shisksha.thakkur@hihseed.org\",     \"7805041142\",     \"orb-tor-nay\",     \"Madhya Pradesh\"   ],   [     \"Ajay Songara\",     \"Ajay.keshavlal@hihseed.org\",     \"7828334945\",     \"bag-wax-opt\",     \"Madhya Pradesh\"   ],   [     \"Shaitan Meena\",     \"Meenaakshay9755112188@gmail.com\",     \"9755112188\",     \"war-wye-fig\",     \"Madhya Pradesh\"   ],   [     \"Kapil Kachawa\",     \"Kkachhawa55@gmail.com\",     \"9691292817\",     \"cot-sue-arc\",     \"Madhya Pradesh\"   ],   [     \"Hemant Chouhan\",     \"hemant1996.chuvan@gmail.com\",     \"9575447033\",     \"mag-imp-sue\",     \"Madhya Pradesh\"   ],   [     \"Kiran Rahtore\",     \"Rathore.kiran05071998@gmail.com\",     \"9993446677\",     \"win-rep-pot\",     \"Madhya Pradesh\"   ],   [     \"Nisita Chouhan\",     \"vikrant.puri@hihseed.org\",     \"8435451021\",     \"sly-set-ram\",     \"Madhya Pradesh\"   ],   [     \"Deepa Pal\",     \"vikrant.puri@hihseed.org\",     \"9589064740\",     \"mag-wig-neg\",     \"Madhya Pradesh\"   ],   [     \"Nisha Bhabar\",     \"vikrant.puri@hihseed.org\",     \"9165159825\",     \"lie-mid-tot\",     \"Madhya Pradesh\"   ],   [     \"Sunita Patel\",     \"vikrant.puri@hihseed.org\",     \"9753695047\",     \"mud-kay-out\",     \"Madhya Pradesh\"   ],   [     \"Farida Bee\",     \"Syedfarida625@gmail.com\",     \"8435440733\",     \"bud-men-bus\",     \"Madhya Pradesh\"   ],   [     \"Gopal Patel\",     \"gopalpateldws@gmail.com\",     \"9977204791\",     \"man-hen-new\",     \"Madhya Pradesh\"   ],   [     \"Umesh Nagar\",     \"uminagar144@gmail.com\",     \"8827666884\",     \"rap-dis-ala\",     \"Madhya Pradesh\"   ],   [     \"Rahul Malviya\",     \"rahulmalviya8883@gmail.com\",     \"8770120782\",     \"raw-bog-bet\",     \"Madhya Pradesh\"   ],   [     \"Sanju Choudhary\",     \"vikrant.puri@hihseed.org\",     \"7999359978\",     \"dal-pat-mot\",     \"Madhya Pradesh\"   ],   [     \"Bhola Rao\",     \"vikrant.puri@hihseed.org\",     \"7000245137\",     \"nab-lag-cat\",     \"Madhya Pradesh\"   ],   [     \"Jyothi Rajput\",     \"vikrant.puri@hihseed.org\",     \"9617113906\",     \"rib-coy-fin\",     \"Madhya Pradesh\"   ],   [     \"Divya Rani\",     \"Divyaaneema29nov1993@gmail.com\",     \"7747958028\",     \"neg-gel-hue\",     \"Madhya Pradesh\"   ],   [     \"Hemlata\",     \"vikrant.puri@hihseed.org\",     \"6260808575\",     \"lie-pip-add\",     \"Madhya Pradesh\"   ],   [     \"Karthikeyan Arjunan\",     \"karthikeyan.a@hihseed.org\",     \"9944976675\",     \"lap-wis-doc\",     \"Maharashtra\"   ],   [     \"Shrimant Shindhe\",     \"shrimant.shinde@hihseed.org\",     \"9850990873\",     \"cut-war-raw\",     \"Maharashtra\"   ],   [     \"Mohsin Shaikh\",     \"mohsin.vazir@hihseed.org\",     \"8007199682\",     \"dug-aid-bed\",     \"Maharashtra\"   ],   [     \"Milind Prabhakar Dange\",     \"milind.dange@hihseed.org\",     \"9881536580\",     \"one-tin-sab\",     \"Maharashtra\"   ],   [     \"Rishika Shaw\",     \"rishika.j@hihseed.org\",     \"7387253315\",     \"ham-ago-pup\",     \"Maharashtra\"   ],   [     \"Sai Varshan\",     \"saivarshan.nrm@hihseed.org\",     \"8056792737\",     \"nah-aid-dig\",     \"Maharashtra\"   ],   [     \"Sarika Shinde\",     \"karthikeyan.a@hihseed.org\",     \"7066802559\",     \"lie-ooh-apt\",     \"Maharashtra\"   ],   [     \"Minakshi Dinkar Ghare\",     \"karthikeyan.a@hihseed.org\",     \"9049300816\",     \"axe-mot-pea\",     \"Maharashtra\"   ],   [     \"Pratibha Keshav Dahale\",     \"karthikeyan.a@hihseed.org\",     \"9158756284\",     \"bel-mol-spa\",     \"Maharashtra\"   ],   [     \"Rupali Suresh Pavale\",     \"karthikeyan.a@hihseed.org\",     \"9763651868\",     \"sew-ash-six\",     \"Maharashtra\"   ],   [     \"Jyoti Sunil Shedge\",     \"karthikeyan.a@hihseed.org\",     \"7378714654\",     \"joe-tom-hit\",     \"Maharashtra\"   ],   [     \"Swaminathan\",     \"swaminathan@hihindia.org\",     \"9381882100\",     \"ash-tan-wax\",     \"Tamil Nadu\"   ],   [     \"Arul Durai\",     \"aruldurai.s@hihseed.org\",     \"7708558299\",     \"won-cox-spa\",     \"Tamil Nadu\"   ],   [     \"Jaisankar\",     \"jaisankar.shg@hihseed.org\",     \"9500909024\",     \"nor-man-ski\",     \"Tamil Nadu\"   ],   [     \"ThangaDurai\",     \"thangadurai.b@hihseed.org\",     \"9381882166\",     \"pap-shy-dad\",     \"Tamil Nadu\"   ],   [     \"Vinoth Kumar\",     \"vinoth.kumar@hihseed.org\",     \"9566550120\",     \"pan-rid-chi\",     \"Tamil Nadu\"   ],   [     \"Bharathi Perumal\",     \"bharathi.t@hihseed.org\",     \"9566595239\",     \"foe-got-thy\",     \"Tamil Nadu\"   ],   [     \"Selva Kumar\",     \"selvakumar.s@hihseed.org\",     \"9677805261\",     \"fab-war-add\",     \"Tamil Nadu\"   ],   [     \"Radha Krishnan\",     \"radhakrishnan.vup@hihseed.org\",     \"8220217551\",     \"ask-gel-tin\",     \"Tamil Nadu\"   ],   [     \"Manisha Devi\",     \"manishadevi.t@hihseed.org\",     \"9790115518\",     \"buy-nun-pit\",     \"Tamil Nadu\"   ],   [     \"Balasubramani\",     \"balasubramani.clep@hihseed.org\",     \"8072452955\",     \"pap-ear-egg\",     \"Tamil Nadu\"   ],   [     \"Mageshwari\",     \"magereshma@gmail.com\",     \"6381572709\",     \"tee-elf-rag\",     \"Tamil Nadu\"   ],   [     \"Jaya Prakash\",     \"jayaprakash.y@hihseed.org\",     \"9442059710\",     \"its-mad-yet\",     \"Tamil Nadu\"   ],   [     \"Purushothaman\",     \"purushothaman.nrm@hihseed.org\",     \"9994614926\",     \"bet-try-par\",     \"Tamil Nadu\"   ],   [     \"Umapathy\",     \"umapathy.km@hihseed.org\",     \"9244680116\",     \"rip-cod-pac\",     \"Tamil Nadu\"   ],   [     \"Moses Samuel\",     \"moses.g@hihseed.org\",     \"9442478525\",     \"rap-dug-new\",     \"Tamil Nadu\"   ],   [     \"Kannan\",     \"kannan.g@hihindia.org\",     \"9585558384\",     \"map-man-coy\",     \"HO\"   ],   [     \"Chandra Gupta\",     \"chandraguptha.nrm@hihseed.org\",     \"9790258778\",     \"are-won-thy\",     \"HO\"   ],   [     \"Princess Beula\",     \"beula@hihindia.org\",     \"9244680137\",     \"doc-axe-fly\",     \"HO\"   ],   [     \"Krishnan\",     \"krishnan.n@hihindia.org\",     \"9940150635\",     \"pie-sab-toe\",     \"HO\"   ],   [     \"Steve Robison\",     \"steven.robinson@hihseed.org\",     \"9790709641\",     \"meg-gig-mil\",     \"HO\"   ],   [     \"Umashankar\",     \"umashankar.s@hihseed.org\",     \"7893291119\",     \"tar-bet-nap\",     \"HO\"   ],   [     \"Kavitha\",     \"kavitha.admin@hihseed.org\",     \"9994465988\",     \"elm-fad-win\",     \"HO\"   ],   [     \"Byrav\",     \"byrav.n@hihindia.org\",     \"8248401314\",     \"spa-rum-sip\",     \"HO\"   ],   [     \"Sandip Mookerjee\",     \"sandip.mookerjee@hihindia.org\",     \"9500041800\",     \"sac-and-rib\",     \"HO\"   ],   [     \"Madhusharan\",     \"madhu.sharan@hihindia.org\",     \"9717998555\",     \"rid-sac-sac\",     \"New Delhi\"   ] ]" #(";;; ================================init========================================


               (c/POST \"/v0.1/init\" []
                       :return [[s/Str]]
                       :body [init schema/Init]
                       :summary \"Initializes projects. Used for testing.\"
                       (write/init init))" 0 4 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-comment-delimiter-face) 4 81 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-comment-face) 81 98 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 98 99 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-4-face)) 99 100 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 100 101 (fontified t help-echo cider--help-echo cider-locals ("c/api") face default) 101 105 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-constant-face) 105 106 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 106 118 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-string-face) 118 119 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 119 120 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 120 121 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 121 122 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 122 145 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 145 152 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (clojure-keyword-face)) 152 153 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 153 154 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 154 155 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-6-face)) 155 156 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 156 157 (fontified t help-echo cider--help-echo cider-locals ("c/api") face default) 157 160 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 160 161 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-6-face)) 161 162 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 162 163 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 163 186 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 186 191 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (clojure-keyword-face)) 191 192 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 192 193 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 193 198 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 198 204 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 204 205 (fontified t help-echo cider--help-echo cider-locals ("c/api") face default) 205 209 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 209 210 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 210 234 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 234 242 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (clojure-keyword-face)) 242 243 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 243 284 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-string-face) 284 285 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 285 308 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 308 309 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 309 314 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 314 315 (fontified t help-echo cider--help-echo cider-locals ("c/api") face default) 315 324 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 324 325 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 325 326 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-4-face))) #(";;; ================================init========================================


               (c/POST \"/v0.1/init\" []
                       :return [[s/Str]]
                       :body [init schema/Init]
                       :summary \"Initializes projects. Used for testing.\"
                       (write/init init))" 0 4 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-comment-delimiter-face) 4 81 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-comment-face) 81 98 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 98 99 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-4-face)) 99 100 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 100 101 (fontified t help-echo cider--help-echo cider-locals ("c/api") face default) 101 105 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-constant-face) 105 106 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 106 118 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-string-face) 118 119 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 119 120 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 120 121 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 121 122 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 122 145 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 145 152 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (clojure-keyword-face)) 152 153 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 153 154 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 154 155 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-6-face)) 155 156 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 156 157 (fontified t help-echo cider--help-echo cider-locals ("c/api") face default) 157 160 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 160 161 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-6-face)) 161 162 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 162 163 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 163 186 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 186 191 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (clojure-keyword-face)) 191 192 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 192 193 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 193 198 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 198 204 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 204 205 (fontified t help-echo cider--help-echo cider-locals ("c/api") face default) 205 209 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 209 210 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 210 234 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 234 242 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (clojure-keyword-face)) 242 243 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 243 284 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-string-face) 284 285 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 285 308 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 308 309 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 309 314 (fontified t help-echo cider--help-echo cider-locals ("c/api") face font-lock-type-face) 314 315 (fontified t help-echo cider--help-echo cider-locals ("c/api") face default) 315 324 (fontified t help-echo cider--help-echo cider-locals ("c/api")) 324 325 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-5-face)) 325 326 (fontified t help-echo cider--help-echo cider-locals ("c/api") face (rainbow-delimiters-depth-4-face))) #("\"Health\" \"Water\"" 0 8 (face font-lock-string-face cider-locals ("let" "hih" "Water" "Health" "Education" "Deepening" "Pond" "Plant" "RO" "Finance" "HR" "Admin" "1" "g/task-tags") fontified t help-echo cider--help-echo) 8 9 (cider-locals ("let" "hih" "Water" "Health" "Education" "Deepening" "Pond" "Plant" "RO" "Finance" "HR" "Admin" "1" "g/task-tags") fontified t help-echo cider--help-echo) 9 16 (face font-lock-string-face cider-locals ("let" "hih" "Water" "Health" "Education" "Deepening" "Pond" "Plant" "RO" "Finance" "HR" "Admin" "1" "g/task-tags") fontified t help-echo cider--help-echo)) #("\"Admin\" \"HR\" \"Finance\" \"RO Plant\" \"Pond Deepening\" \"Education\"" 0 7 (face font-lock-string-face cider-locals ("let" "hih" "Water" "Health" "Education" "Deepening" "Pond" "Plant" "RO" "Finance" "HR" "Admin" "1" "g/task-tags") fontified t help-echo cider--help-echo) 7 8 (cider-locals ("let" "hih" "Water" "Health" "Education" "Deepening" "Pond" "Plant" "RO" "Finance" "HR" "Admin" "1" "g/task-tags") fontified t help-echo cider--help-echo) 8 12 (face font-lock-string-face cider-locals ("let" "hih" "Water" "Health" "Education" "Deepening" "Pond" "Plant" "RO" "Finance" "HR" "Admin" "1" "g/task-tags") fontified t help-echo cider--help-echo) 12 13 (cider-locals ("let" "hih" "Water" "Health" "Education" "Deepening" "Pond" "Plant" "RO" "Finance" "HR" "Admin" "1" "g/task-tags") fontified t help-echo cider--help-echo) 13 22 (face font-lock-string-face cider-locals ("let" "hih" "Water" "Health" "Education" "Deepening" "Pond" "Plant" "RO" "Finance" "HR" "Admin" "1" "g/task-tags") fontified t help-echo cider--help-echo) 22 23 (cider-locals ("let" "hih" "Water" "Health" "Education" "Deepening" "Pond" "Plant" "RO" "Finance" "HR" "Admin" "1" "g/task-tags") fontified t help-echo cider--help-echo) 23 33 (face font-lock-string-face cider-locals ("let" "hih" "Water" "Health" "Education" "Deepening" "Pond" "Plant" "RO" "Finance" "HR" "Admin" "1" "g/task-tags") fontified t help-echo cider--help-echo) 33 34 (cider-locals ("let" "hih" "Water" "Health" "Education" "Deepening" "Pond" "Plant" "RO" "Finance" "HR" "Admin" "1" "g/task-tags") fontified t help-echo cider--help-echo) 34 50 (face font-lock-string-face cider-locals ("let" "hih" "Water" "Health" "Education" "Deepening" "Pond" "Plant" "RO" "Finance" "HR" "Admin" "1" "g/task-tags") fontified t help-echo cider--help-echo) 50 51 (cider-locals ("let" "hih" "Water" "Health" "Education" "Deepening" "Pond" "Plant" "RO" "Finance" "HR" "Admin" "1" "g/task-tags") fontified t help-echo cider--help-echo) 51 62 (face font-lock-string-face cider-locals ("let" "hih" "Water" "Health" "Education" "Deepening" "Pond" "Plant" "RO" "Finance" "HR" "Admin" "1" "g/task-tags") fontified t help-echo cider--help-echo)) "    SHG

·         SDTC

·         Health

·         Environment

·         SWM

·         NRM

·         CLEP

·         VUP

·         EGF-MP" "[   [     \"Vikrant Puri\",     \"vikrant.puri@hihseed.org\",     \"8736960000\",     \"pro-how-ivy\",     \"Madhya Pradesh\"   ],   [     \"Subodh Karnik\",     \"subodh.karnik@hihseed.org\",     \"9669622033\",     \"mug-rad-out\",     \"Madhya Pradesh\"   ],   [     \"Alok Mishra\",     \"alok.mishra@hihseed.org\",     \"7024466336\",     \"rot-fog-ado\",     \"Madhya Pradesh\"   ],   [     \"Jini Nikita Das​\",     \"jini.nikitadas@hihseed.org\",     \"9826812479\",     \"ray-cow-ivy\",     \"Madhya Pradesh\"   ],   [     \"Vijay Kumarvankar\",     \"vijay.kumarvankar@hihseed.org\",     \"9754212571\",     \"sky-sly-men\",     \"Madhya Pradesh\"   ],   [     \"Shiksha Thakkur\",     \"shisksha.thakkur@hihseed.org\",     \"7805041142\",     \"orb-tor-nay\",     \"Madhya Pradesh\"   ],   [     \"Ajay Songara\",     \"Ajay.keshavlal@hihseed.org\",     \"7828334945\",     \"bag-wax-opt\",     \"Madhya Pradesh\"   ],   [     \"Shaitan Meena\",     \"Meenaakshay9755112188@gmail.com\",     \"9755112188\",     \"war-wye-fig\",     \"Madhya Pradesh\"   ],   [     \"Kapil Kachawa\",     \"Kkachhawa55@gmail.com\",     \"9691292817\",     \"cot-sue-arc\",     \"Madhya Pradesh\"   ],   [     \"Hemant Chouhan\",     \"hemant1996.chuvan@gmail.com\",     \"9575447033\",     \"mag-imp-sue\",     \"Madhya Pradesh\"   ],   [     \"Kiran Rahtore\",     \"Rathore.kiran05071998@gmail.com\",     \"9993446677\",     \"win-rep-pot\",     \"Madhya Pradesh\"   ],   [     \"Nisita Chouhan\",     \"vikrant.puri@hihseed.org\",     \"8435451021\",     \"sly-set-ram\",     \"Madhya Pradesh\"   ],   [     \"Deepa Pal\",     \"vikrant.puri@hihseed.org\",     \"9589064740\",     \"mag-wig-neg\",     \"Madhya Pradesh\"   ],   [     \"Nisha Bhabar\",     \"vikrant.puri@hihseed.org\",     \"9165159825\",     \"lie-mid-tot\",     \"Madhya Pradesh\"   ],   [     \"Sunita Patel\",     \"vikrant.puri@hihseed.org\",     \"9753695047\",     \"mud-kay-out\",     \"Madhya Pradesh\"   ],   [     \"Farida Bee\",     \"Syedfarida625@gmail.com\",     \"8435440733\",     \"bud-men-bus\",     \"Madhya Pradesh\"   ],   [     \"Gopal Patel\",     \"gopalpateldws@gmail.com\",     \"9977204791\",     \"man-hen-new\",     \"Madhya Pradesh\"   ],   [     \"Umesh Nagar\",     \"uminagar144@gmail.com\",     \"8827666884\",     \"rap-dis-ala\",     \"Madhya Pradesh\"   ],   [     \"Rahul Malviya\",     \"rahulmalviya8883@gmail.com\",     \"8770120782\",     \"raw-bog-bet\",     \"Madhya Pradesh\"   ],   [     \"Sanju Choudhary\",     \"vikrant.puri@hihseed.org\",     \"7999359978\",     \"dal-pat-mot\",     \"Madhya Pradesh\"   ],   [     \"Bhola Rao\",     \"vikrant.puri@hihseed.org\",     \"7000245137\",     \"nab-lag-cat\",     \"Madhya Pradesh\"   ],   [     \"Jyothi Rajput\",     \"vikrant.puri@hihseed.org\",     \"9617113906\",     \"rib-coy-fin\",     \"Madhya Pradesh\"   ],   [     \"Divya Rani\",     \"Divyaaneema29nov1993@gmail.com\",     \"7747958028\",     \"neg-gel-hue\",     \"Madhya Pradesh\"   ],   [     \"Hemlata\",     \"vikrant.puri@hihseed.org\",     \"6260808575\",     \"lie-pip-add\",     \"Madhya Pradesh\"   ],   [     \"Karthikeyan Arjunan\",     \"karthikeyan.a@hihseed.org\",     \"9944976675\",     \"lap-wis-doc\",     \"Maharashtra\"   ],   [     \"Shrimant Shindhe\",     \"shrimant.shinde@hihseed.org\",     \"9850990873\",     \"cut-war-raw\",     \"Maharashtra\"   ],   [     \"Mohsin Shaikh\",     \"mohsin.vazir@hihseed.org\",     \"8007199682\",     \"dug-aid-bed\",     \"Maharashtra\"   ],   [     \"Milind Prabhakar Dange\",     \"milind.dange@hihseed.org\",     \"9881536580\",     \"one-tin-sab\",     \"Maharashtra\"   ],   [     \"Rishika Shaw\",     \"rishika.j@hihseed.org\",     \"7387253315\",     \"ham-ago-pup\",     \"Maharashtra\"   ],   [     \"Sai Varshan\",     \"saivarshan.nrm@hihseed.org\",     \"8056792737\",     \"nah-aid-dig\",     \"Maharashtra\"   ],   [     \"Sarika Shinde\",     \"karthikeyan.a@hihseed.org\",     \"7066802559\",     \"lie-ooh-apt\",     \"Maharashtra\"   ],   [     \"Minakshi Dinkar Ghare\",     \"karthikeyan.a@hihseed.org\",     \"9049300816\",     \"axe-mot-pea\",     \"Maharashtra\"   ],   [     \"Pratibha Keshav Dahale\",     \"karthikeyan.a@hihseed.org\",     \"9158756284\",     \"bel-mol-spa\",     \"Maharashtra\"   ],   [     \"Rupali Suresh Pavale\",     \"karthikeyan.a@hihseed.org\",     \"9763651868\",     \"sew-ash-six\",     \"Maharashtra\"   ],   [     \"Jyoti Sunil Shedge\",     \"karthikeyan.a@hihseed.org\",     \"7378714654\",     \"joe-tom-hit\",     \"Maharashtra\"   ],   [     \"Swaminathan\",     \"swaminathan@hihindia.org\",     \"9381882100\",     \"ash-tan-wax\",     \"Tamil Nadu\"   ],   [     \"Arul Durai\",     \"aruldurai.s@hihseed.org\",     \"7708558299\",     \"won-cox-spa\",     \"Tamil Nadu\"   ],   [     \"Jaisankar\",     \"jaisankar.shg@hihseed.org\",     \"9500909024\",     \"nor-man-ski\",     \"Tamil Nadu\"   ],   [     \"ThangaDurai\",     \"thangadurai.b@hihseed.org\",     \"9381882166\",     \"pap-shy-dad\",     \"Tamil Nadu\"   ],   [     \"Vinoth Kumar\",     \"vinoth.kumar@hihseed.org\",     \"9566550120\",     \"pan-rid-chi\",     \"Tamil Nadu\"   ],   [     \"Bharathi Perumal\",     \"bharathi.t@hihseed.org\",     \"9566595239\",     \"foe-got-thy\",     \"Tamil Nadu\"   ],   [     \"Selva Kumar\",     \"selvakumar.s@hihseed.org\",     \"9677805261\",     \"fab-war-add\",     \"Tamil Nadu\"   ],   [     \"Radha Krishnan\",     \"radhakrishnan.vup@hihseed.org\",     \"8220217551\",     \"ask-gel-tin\",     \"Tamil Nadu\"   ],   [     \"Manisha Devi\",     \"manishadevi.t@hihseed.org\",     \"9790115518\",     \"buy-nun-pit\",     \"Tamil Nadu\"   ],   [     \"Balasubramani\",     \"balasubramani.clep@hihseed.org\",     \"8072452955\",     \"pap-ear-egg\",     \"Tamil Nadu\"   ],   [     \"Mageshwari\",     \"magereshma@gmail.com\",     \"6381572709\",     \"tee-elf-rag\",     \"Tamil Nadu\"   ],   [     \"Jaya Prakash\",     \"jayaprakash.y@hihseed.org\",     \"9442059710\",     \"its-mad-yet\",     \"Tamil Nadu\"   ],   [     \"Purushothaman\",     \"purushothaman.nrm@hihseed.org\",     \"9994614926\",     \"bet-try-par\",     \"Tamil Nadu\"   ],   [     \"Umapathy\",     \"umapathy.km@hihseed.org\",     \"9244680116\",     \"rip-cod-pac\",     \"Tamil Nadu\"   ],   [     \"Moses Samuel\",     \"moses.g@hihseed.org\",     \"9442478525\",     \"rap-dug-new\",     \"Tamil Nadu\"   ],   [     \"Kannan\",     \"kannan.g@hihindia.org\",     \"9585558384\",     \"map-man-coy\",     \"HO\"   ],   [     \"Chandra Gupta\",     \"chandraguptha.nrm@hihseed.org\",     \"9790258778\",     \"are-won-thy\",     \"HO\"   ],   [     \"Princess Beula\",     \"beula@hihindia.org\",     \"9244680137\",     \"doc-axe-fly\",     \"HO\"   ],   [     \"Krishnan\",     \"krishnan.n@hihindia.org\",     \"9940150635\",     \"pie-sab-toe\",     \"HO\"   ],   [     \"Steve Robison\",     \"steven.robinson@hihseed.org\",     \"9790709641\",     \"meg-gig-mil\",     \"HO\"   ],   [     \"Umashankar\",     \"umashankar.s@hihseed.org\",     \"7893291119\",     \"tar-bet-nap\",     \"HO\"   ],   [     \"Kavitha\",     \"kavitha.admin@hihseed.org\",     \"9994465988\",     \"elm-fad-win\",     \"HO\"   ],   [     \"Byrav\",     \"byrav.n@hihindia.org\",     \"8248401314\",     \"spa-rum-sip\",     \"HO\"   ],   [     \"Sandip Mookerjee\",     \"sandip.mookerjee@hihindia.org\",     \"9500041800\",     \"sac-and-rib\",     \"HO\"   ],   [     \"Madhusharan\",     \"madhu.sharan@hihindia.org\",     \"9717998555\",     \"rid-sac-sac\",     \"New Delhi\"   ] ]" "{
  \"username\": \"admin\",
  \"password\": \"AgY4QqfSX2cxwdSrv29BcjHKdSVEUfqJA8GPN8jf\",
\"demo\":\"create-data-for-hih\"
}" "139.59.63.88" #("AgY4QqfSX2cxwdSrv29BcjHKdSVEUfqJA8GPN8jf" 0 39 (fontified t help-echo cider--help-echo cider-locals ("defn" "uri" "conn" "demo" "password" "username" "_" "demo") face font-lock-string-face) 39 40 (fontified t rear-nonsticky t help-echo cider--help-echo cider-locals ("defn" "uri" "conn" "demo" "password" "username" "_" "demo") face font-lock-string-face)) #("AgY4QqfSX2cxwdSrv29BcjHKdSVEUfqJA8GPN8jf" 0 39 (fontified t help-echo cider--help-echo cider-locals ("defn" "uri" "conn" "demo" "password" "username" "_" "demo") face font-lock-string-face) 39 40 (fontified t rear-nonsticky t help-echo cider--help-echo cider-locals ("defn" "uri" "conn" "demo" "password" "username" "_" "demo") face font-lock-string-face)) "AgY4QqfSX2cxwdSrv29BcjHKdSVEUfqJA8GPN8jf" #(";; add how to install a untrusted app
" 0 1 (face font-lock-comment-delimiter-face cider-locals ("s" "len" "rindex" "lindex") help-echo cider--help-echo fontified t) 1 3 (face font-lock-comment-delimiter-face cider-locals ("s" "len" "rindex" "lindex") help-echo cider--help-echo fontified t) 3 37 (face font-lock-comment-face cider-locals ("s" "len" "rindex" "lindex") help-echo cider--help-echo fontified t) 37 38 (cider-locals ("s" "len" "rindex" "lindex") help-echo cider--help-echo fontified t)) #(";; add how to install a untrusted app
(defn send-email [name receiver username password state]
  (email/send-message {:host    \"smtp.gmail.com\"
                       :user    \"deploy@mygram.me\"
                       :pass    \"fancyLikeThat\"
                       :ssl     true}
                      {:from    \"deploy@mygram.me\"
                       :to      (cond
                                  (s/includes? receiver \"@\") receiver
                                  (= state \"Madhya Pradesh\") \"vikrant.puri@hihseed.org\"
                                  (= state \"Maharashtra\")    \"\")
                       :subject \"OPMS app and credentials\"
                       :body    (str \"Dear \"
                                     name
                                     \",\\n\\nYou can download the OPMS app from https://goo.gl/yrHLXg\\n\\nYour credentials are : \\n\\tUsername : \"
                                     username
                                     \"\\n\\tPassword : \"
                                     password
                                     \"\\n\\nSteps to install the app:\\n1. Follow this tutorial : https://www.maketecheasier.com/install-apps-from-unknown-sources-android/\\n2. Open the app download link given above in your android phone.\\n3. Click the download button and download the file.\\n\"
                                     \"4. Once the file is downloaded, a \\\"Download Complete\\\" notification will appear in the Android status bar. Pull down the status bar to reveal the notification in detail, which will show the full name of the APK file. Press the notification to install.\\n\\n\"
                                     \"If you have any questions, please send an email to deploy@mygram.me\\n\\n\"
                                     \"Regards\\nMygram Connect Pvt Ltd\\n\")}))" 0 1 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details") face font-lock-comment-delimiter-face) 1 3 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details") face font-lock-comment-delimiter-face) 3 37 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details") face font-lock-comment-face) 37 38 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details")) 38 39 (face (rainbow-delimiters-depth-1-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details") fontified t help-echo cider--help-echo) 39 43 (face font-lock-keyword-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details") fontified t help-echo cider--help-echo) 43 44 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 44 54 (face font-lock-function-name-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 54 55 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 55 56 (face (rainbow-delimiters-depth-2-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 56 61 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 61 93 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 93 94 (face (rainbow-delimiters-depth-2-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 94 95 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 95 97 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 97 98 (face (rainbow-delimiters-depth-2-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo cider-old-input 3) 98 103 (face font-lock-type-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo cider-old-input 3) 103 104 (face default cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo cider-old-input 3) 104 117 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo cider-old-input 3) 117 118 (face (rainbow-delimiters-depth-3-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo cider-old-input 3) 118 123 (face (clojure-keyword-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo cider-old-input 3) 123 127 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo cider-old-input 3) 127 143 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo cider-old-input 3) 143 144 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo cider-old-input 3) 144 167 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo cider-old-input 3) 167 172 (face (clojure-keyword-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo cider-old-input 3) 172 176 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo cider-old-input 3) 176 194 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo cider-old-input 3) 194 195 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo cider-old-input 3) 195 218 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo cider-old-input 3) 218 223 (face (clojure-keyword-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo cider-old-input 3) 223 227 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo cider-old-input 3) 227 242 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo cider-old-input 3) 242 243 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo cider-old-input 3) 243 266 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo cider-old-input 3) 266 270 (face (clojure-keyword-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo cider-old-input 3) 270 275 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo cider-old-input 3) 275 279 (face font-lock-constant-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo cider-old-input 3) 279 280 (face (rainbow-delimiters-depth-3-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo cider-old-input 3) 280 281 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo cider-old-input 3) 281 303 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo cider-old-input 3) 303 304 (face (rainbow-delimiters-depth-3-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo cider-old-input 3) 304 309 (face (clojure-keyword-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo cider-old-input 3) 309 313 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo cider-old-input 3) 313 331 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo cider-old-input 3) 331 332 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo cider-old-input 3) 332 355 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo cider-old-input 3) 355 358 (face (clojure-keyword-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo cider-old-input 3) 358 364 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo cider-old-input 3) 364 365 (face (rainbow-delimiters-depth-4-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 365 369 (face font-lock-keyword-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 369 370 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 370 404 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 404 405 (face (rainbow-delimiters-depth-5-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 405 406 (face font-lock-type-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 406 407 (face default cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 407 416 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 416 426 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 426 428 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 428 429 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 429 430 (face (rainbow-delimiters-depth-5-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 430 431 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 431 440 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo cider-old-input 3) 440 474 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo cider-old-input 3) 474 475 (face (rainbow-delimiters-depth-5-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 475 483 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 483 498 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 498 499 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 499 500 (face (rainbow-delimiters-depth-5-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 500 501 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 501 526 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 526 527 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 527 528 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 528 562 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 562 563 (face (rainbow-delimiters-depth-5-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 563 571 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 571 583 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 583 584 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 584 585 (face (rainbow-delimiters-depth-5-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 585 589 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 589 590 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 590 591 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 591 592 (face (rainbow-delimiters-depth-4-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 592 593 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo cider-old-input 3) 593 616 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo cider-old-input 3) 616 624 (face (clojure-keyword-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo cider-old-input 3) 624 625 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo cider-old-input 3) 625 651 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo cider-old-input 3) 651 652 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo cider-old-input 3) 652 675 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo cider-old-input 3) 675 680 (face (clojure-keyword-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo cider-old-input 3) 680 684 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo cider-old-input 3) 684 685 (face (rainbow-delimiters-depth-4-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 685 688 (face font-lock-builtin-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 688 689 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 689 695 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 695 696 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 696 697 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 697 739 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 739 776 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 776 778 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo cider-old-input 3) 778 779 (face (bold font-lock-string-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 779 780 (face (bold font-lock-string-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 780 781 (face (bold font-lock-string-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 781 782 (face (bold font-lock-string-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 782 783 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 783 817 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 817 837 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 837 838 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo rear-nonsticky t) 838 839 (face (bold font-lock-string-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 839 840 (face (bold font-lock-string-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 840 841 (face (bold font-lock-string-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 841 842 (face (bold font-lock-string-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 842 843 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 843 865 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 865 866 (face (bold font-lock-string-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 866 867 (face (bold font-lock-string-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 867 868 (face (bold font-lock-string-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 868 869 (face (bold font-lock-string-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 869 880 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 880 881 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo cider-old-input 3) 881 882 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo cider-old-input 3) 882 928 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo cider-old-input 3) 928 965 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo cider-old-input 3) 965 966 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 966 967 (face (bold font-lock-string-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 967 968 (face (bold font-lock-string-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 968 969 (face (bold font-lock-string-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 969 970 (face (bold font-lock-string-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 970 981 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 981 982 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 982 983 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 983 1029 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1029 1066 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1066 1067 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1067 1068 (face (bold font-lock-string-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1068 1069 (face (bold font-lock-string-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1069 1070 (face (bold font-lock-string-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1070 1071 (face (bold font-lock-string-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1071 1072 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1072 1096 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1096 1097 (face (bold font-lock-string-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1097 1098 (face (bold font-lock-string-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1098 1099 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1099 1122 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1122 1124 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1124 1126 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1126 1196 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1196 1197 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo rear-nonsticky t) 1197 1198 (face (bold font-lock-string-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1198 1199 (face (bold font-lock-string-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1199 1202 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1202 1203 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1203 1263 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1263 1264 (face (bold font-lock-string-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1264 1265 (face (bold font-lock-string-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1265 1266 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1266 1316 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1316 1317 (face (bold font-lock-string-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1317 1318 (face (bold font-lock-string-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1318 1319 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1319 1320 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1320 1357 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1357 1361 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1361 1392 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1392 1393 (face (bold font-lock-string-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1393 1394 (face (bold font-lock-string-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1394 1411 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1411 1412 (face (bold font-lock-string-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1412 1413 (face (bold font-lock-string-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1413 1466 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1466 1576 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1576 1608 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1608 1609 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo rear-nonsticky t) 1609 1610 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1610 1611 (face (bold font-lock-string-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1611 1612 (face (bold font-lock-string-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1612 1613 (face (bold font-lock-string-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1613 1614 (face (bold font-lock-string-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1614 1615 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1615 1616 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1616 1653 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1653 1655 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1655 1720 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1720 1721 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo rear-nonsticky t) 1721 1722 (face (bold font-lock-string-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1722 1723 (face (bold font-lock-string-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1723 1724 (face (bold font-lock-string-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1724 1725 (face (bold font-lock-string-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1725 1726 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1726 1727 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1727 1764 (cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1764 1765 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1765 1772 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1772 1773 (face (bold font-lock-string-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1773 1774 (face (bold font-lock-string-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1774 1780 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1780 1781 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1781 1788 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1788 1789 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1789 1792 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1792 1793 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1793 1796 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1796 1797 (face (bold font-lock-string-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1797 1798 (face (bold font-lock-string-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1798 1799 (face font-lock-string-face cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1799 1800 (face (rainbow-delimiters-depth-4-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo) 1800 1801 (face (rainbow-delimiters-depth-3-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo cider-old-input 3) 1801 1802 (face (rainbow-delimiters-depth-2-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo cider-old-input 3 rear-nonsticky t) 1802 1803 (face (rainbow-delimiters-depth-1-face) cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "state" "password" "username" "receiver" "name") fontified t help-echo cider--help-echo)) "{
    \"version\": 1,
    \"projects\": [
        {
            \"id\": \"24a21871-fc35-4524-99e8-4fa31c6fd76e\",
            \"name\": \"EGF-MP\",
            \"states\": [
                {
                    \"id\": \"2ddd79d1-101a-4fe6-b03b-eb4f49e45976\",
                    \"name\": \"Madhya Pradesh\",
                    \"vertical/departments\": [
                        {
                            \"id\": \"dec852d0-162b-43de-a924-28ba3c5088d2\",
                            \"name\": \"EKC\",
                            \"users\": [
                                {
                                    \"name\": \"Umesh Nagar\",
                                    \"username\": \"8827666884\"
                                },
                                {
                                    \"name\": \"Hemant Chouhan\",
                                    \"username\": \"9575447033\"
                                },
                                {
                                    \"name\": \"Gopal Patel\",
                                    \"username\": \"9977204791\"
                                },
                                {
                                    \"name\": \"Kapil Kachawa\",
                                    \"username\": \"9691292817\"
                                }
                            ]
                        },
                        {
                            \"id\": \"6906f94a-207c-4455-8326-79b843e8bc96\",
                            \"name\": \"P&A\",
                            \"users\": [
                                {
                                    \"name\": \"Vikrant Puri\",
                                    \"username\": \"8736960000\"
                                }
                            ]
                        },
                        {
                            \"id\": \"102d47db-1006-4783-b641-79c6cc464ece\",
                            \"name\": \"EKC & NRM\",
                            \"users\": [
                                {
                                    \"name\": \"Vijay Kumarvankar\",
                                    \"username\": \"9754212571\"
                                }
                            ]
                        },
                        {
                            \"id\": \"d59cbb1d-e9fe-4614-b479-69a244f5991c\",
                            \"name\": \"All Pillars\",
                            \"users\": [
                                {
                                    \"name\": \"Ajay Songara\",
                                    \"username\": \"7828334945\"
                                },
                                {
                                    \"name\": \"Bhola Rao\",
                                    \"username\": \"7000245137\"
                                },
                                {
                                    \"name\": \"Farida Bee\",
                                    \"username\": \"8435440733\"
                                },
                                {
                                    \"name\": \"Nisita Chouhan\",
                                    \"username\": \"8435451021\"
                                },
                                {
                                    \"name\": \"Sanju Choudhary\",
                                    \"username\": \"7999359978\"
                                },
                                {
                                    \"name\": \"Deepa Pal\",
                                    \"username\": \"9589064740\"
                                }
                            ]
                        },
                        {
                            \"id\": \"c0498b8f-eb98-4a57-98dd-02599faa600f\",
                            \"name\": \"SHG\",
                            \"users\": [
                                {
                                    \"name\": \"Kiran Rahtore\",
                                    \"username\": \"9993446677\"
                                },
                                {
                                    \"name\": \"Rahul Malviya\",
                                    \"username\": \"8770120782\"
                                }
                            ]
                        },
                        {
                            \"id\": \"4bd5ab10-351b-4fd9-ac50-2a64774fe45e\",
                            \"name\": \"CLEP\",
                            \"users\": [
                                {
                                    \"name\": \"Divya Rani\",
                                    \"username\": \"7747958028\"
                                },
                                {
                                    \"name\": \"Jyothi Rajput\",
                                    \"username\": \"9617113906\"
                                },
                                {
                                    \"name\": \"Sunita Patel\",
                                    \"username\": \"9753695047\"
                                },
                                {
                                    \"name\": \"Nisha Bhabar\",
                                    \"username\": \"9165159825\"
                                },
                                {
                                    \"name\": \"Shiksha Thakkur\",
                                    \"username\": \"7805041142\"
                                },
                                {
                                    \"name\": \"Hemlata \",
                                    \"username\": \"6260808575\"
                                }
                            ]
                        },
                        {
                            \"id\": \"2e34873c-c84a-4a44-a647-995e216df6e0\",
                            \"name\": \"Civil\",
                            \"users\": [
                                {
                                    \"name\": \"Alok Mishra\",
                                    \"username\": \"7024466336\"
                                }
                            ]
                        },
                        {
                            \"id\": \"a06aece5-20b2-46b8-8dbb-af21d3909fab\",
                            \"name\": \"NRM\",
                            \"users\": [
                                {
                                    \"name\": \"Shaitan Meena\",
                                    \"username\": \"9755112188\"
                                }
                            ]
                        },
                        {
                            \"id\": \"2e7fbe79-9fe9-4003-ac1c-6dbd12b9963c\",
                            \"name\": \"MIS\",
                            \"users\": [
                                {
                                    \"name\": \"Jini Nikita Das​\",
                                    \"username\": \"9826812479\"
                                }
                            ]
                        },
                        {
                            \"id\": \"4235547e-db5b-4b22-814e-ce8c57d872ed\",
                            \"name\": \"Health & Livelihood\",
                            \"users\": [
                                {
                                    \"name\": \"Subodh Karnik\",
                                    \"username\": \"9669622033\"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            \"id\": \"1346ab19-e012-47e6-abfd-27c3ae31f20f\",
            \"name\": \"VUP-MH\",
            \"states\": [
                {
                    \"id\": \"f194dabb-2cd1-4ffe-9c59-37d114366786\",
                    \"name\": \"Maharashtra\",
                    \"vertical/departments\": [
                        {
                            \"id\": \"044d07e0-ee84-4097-89db-e1fdae72d6a4\",
                            \"name\": \"VUP\",
                            \"users\": [
                                {
                                    \"name\": \"Karthikeyan Arjunan\",
                                    \"username\": \"9944976675\"
                                }
                            ]
                        },
                        {
                            \"id\": \"25971f06-596f-4b73-ad9b-7f67e6be0424\",
                            \"name\": \"SHG\",
                            \"users\": [
                                {
                                    \"name\": \"Minakshi Dinkar Ghare\",
                                    \"username\": \"9049300816\"
                                },
                                {
                                    \"name\": \"Jyoti Sunil Shedge\",
                                    \"username\": \"7378714654\"
                                },
                                {
                                    \"name\": \"Pratibha Keshav Dahale\",
                                    \"username\": \"9158756284\"
                                },
                                {
                                    \"name\": \"Rupali Suresh Pavale\",
                                    \"username\": \"9763651868\"
                                },
                                {
                                    \"name\": \"Shrimant Shindhe\",
                                    \"username\": \"9850990873\"
                                },
                                {
                                    \"name\": \"Sarika Shinde\",
                                    \"username\": \"7066802559\"
                                }
                            ]
                        },
                        {
                            \"id\": \"da10fa15-3994-4356-b2d2-77b32c23689d\",
                            \"name\": \"Others\",
                            \"users\": [
                                {
                                    \"name\": \"Rishika Shaw\",
                                    \"username\": \"7387253315\"
                                }
                            ]
                        },
                        {
                            \"id\": \"3aadb27a-c9b4-4a33-ae02-734bd3e7b1e9\",
                            \"name\": \"SDTC\",
                            \"users\": [
                                {
                                    \"name\": \"Mohsin Shaikh\",
                                    \"username\": \"8007199682\"
                                },
                                {
                                    \"name\": \"Milind Prabhakar Dange\",
                                    \"username\": \"9881536580\"
                                }
                            ]
                        },
                        {
                            \"id\": \"b1f76b12-1e20-401e-9cea-9964c6377b34\",
                            \"name\": \"NRM\",
                            \"users\": [
                                {
                                    \"name\": \"Sai Varshan\",
                                    \"username\": \"8056792737\"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            \"id\": \"0e4277cb-db65-4cf2-82f0-a5ac3f735bbf\",
            \"name\": \"PROJECT-HO\",
            \"states\": [
                {
                    \"id\": \"6b6342ee-fec3-4196-84b4-fb557ccfde8c\",
                    \"name\": \"HO\",
                    \"vertical/departments\": [
                        {
                            \"id\": \"05b4e42d-1955-4930-adf6-ce956add8528\",
                            \"name\": \"P&A\",
                            \"users\": [
                                {
                                    \"name\": \"Steve Robison\",
                                    \"username\": \"9790709641\"
                                },
                                {
                                    \"name\": \"Kavitha \",
                                    \"username\": \"9994465988\"
                                },
                                {
                                    \"name\": \"Byrav \",
                                    \"username\": \"8248401314\"
                                },
                                {
                                    \"name\": \"Umashankar \",
                                    \"username\": \"7893291119\"
                                },
                                {
                                    \"name\": \"Sandip Mookerjee\",
                                    \"username\": \"9500041800\"
                                }
                            ]
                        },
                        {
                            \"id\": \"db73e279-0aec-4aae-bc37-27deb9f76bf4\",
                            \"name\": \"Health\",
                            \"users\": [
                                {
                                    \"name\": \"Princess Beula\",
                                    \"username\": \"9244680137\"
                                }
                            ]
                        },
                        {
                            \"id\": \"683e1e5a-148f-4e98-a5f5-8efcad201381\",
                            \"name\": \"SHG\",
                            \"users\": [
                                {
                                    \"name\": \"Krishnan \",
                                    \"username\": \"9940150635\"
                                }
                            ]
                        },
                        {
                            \"id\": \"8fd1ec76-f465-4bd5-83f7-bd50f8a15608\",
                            \"name\": \"NRM\",
                            \"users\": [
                                {
                                    \"name\": \"Chandra Gupta\",
                                    \"username\": \"9790258778\"
                                },
                                {
                                    \"name\": \"Kannan \",
                                    \"username\": \"9585558384\"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            \"id\": \"f1248422-92b0-48c7-84b1-a774ab5bb663\",
            \"name\": \"PROJECT-NEW DELHI\",
            \"states\": [
                {
                    \"id\": \"17a4f8c5-9588-447c-80d0-b85312ed38e4\",
                    \"name\": \"New Delhi\",
                    \"vertical/departments\": [
                        {
                            \"id\": \"1ef79eb1-fbed-465e-bee4-651001bcd994\",
                            \"name\": \"SHG\",
                            \"users\": [
                                {
                                    \"name\": \"Madhusharan \",
                                    \"username\": \"9717998555\"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            \"id\": \"5e896423-ecf5-44b4-91b0-af93b16bce3d\",
            \"name\": \"VUP-TN\",
            \"states\": [
                {
                    \"id\": \"87134762-3da8-419e-9485-e10506d680a2\",
                    \"name\": \"Tamil Nadu\",
                    \"vertical/departments\": [
                        {
                            \"id\": \"db21cc6f-8762-41c4-b991-fa26b10a28a2\",
                            \"name\": \"SDTC\",
                            \"users\": [
                                {
                                    \"name\": \"Jaya Prakash\",
                                    \"username\": \"9442059710\"
                                }
                            ]
                        },
                        {
                            \"id\": \"0178b45c-25e5-4c0d-912a-c9e6e49a9f79\",
                            \"name\": \"SHG\",
                            \"users\": [
                                {
                                    \"name\": \"Moses Samuel\",
                                    \"username\": \"9442478525\"
                                }
                            ]
                        },
                        {
                            \"id\": \"2e30bf6d-3fbd-43b7-ae16-2defcc8a3e7e\",
                            \"name\": \"VUP\",
                            \"users\": [
                                {
                                    \"name\": \"Radha Krishnan\",
                                    \"username\": \"8220217551\"
                                },
                                {
                                    \"name\": \"Mageshwari \",
                                    \"username\": \"6381572709\"
                                },
                                {
                                    \"name\": \"Selva Kumar\",
                                    \"username\": \"9677805261\"
                                },
                                {
                                    \"name\": \"Swaminathan \",
                                    \"username\": \"9381882100\"
                                },
                                {
                                    \"name\": \"Balasubramani \",
                                    \"username\": \"8072452955\"
                                },
                                {
                                    \"name\": \"Jaisankar \",
                                    \"username\": \"9500909024\"
                                },
                                {
                                    \"name\": \"Bharathi Perumal\",
                                    \"username\": \"9566595239\"
                                },
                                {
                                    \"name\": \"Manisha Devi\",
                                    \"username\": \"9790115518\"
                                },
                                {
                                    \"name\": \"ThangaDurai \",
                                    \"username\": \"9381882166\"
                                },
                                {
                                    \"name\": \"Arul Durai\",
                                    \"username\": \"7708558299\"
                                },
                                {
                                    \"name\": \"Vinoth Kumar\",
                                    \"username\": \"9566550120\"
                                }
                            ]
                        },
                        {
                            \"id\": \"e0ab8baa-1c8e-4ea7-9512-4c6023be91d0\",
                            \"name\": \"Health\",
                            \"users\": [
                                {
                                    \"name\": \"Umapathy \",
                                    \"username\": \"9244680116\"
                                }
                            ]
                        },
                        {
                            \"id\": \"80afda0c-06ce-4425-a943-c236686fd958\",
                            \"name\": \"NRM\",
                            \"users\": [
                                {
                                    \"name\": \"Purushothaman \",
                                    \"username\": \"9994614926\"
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}" #(" @(d/transact conn t/org-units)" 0 1 (help-echo cider--help-echo fontified t cider-locals ("defn" "uri" "conn") face font-lock-comment-delimiter-face) 1 2 (help-echo cider--help-echo fontified t cider-locals ("defn" "uri" "conn") face font-lock-comment-face) 2 3 (help-echo cider--help-echo fontified t cider-locals ("defn" "uri" "conn") face font-lock-comment-face) 3 4 (help-echo cider--help-echo fontified t cider-locals ("defn" "uri" "conn") face font-lock-comment-face) 4 5 (help-echo cider--help-echo fontified t cider-locals ("defn" "uri" "conn") face font-lock-comment-face) 5 19 (help-echo cider--help-echo fontified t cider-locals ("defn" "uri" "conn") face font-lock-comment-face) 19 20 (help-echo cider--help-echo fontified t cider-locals ("defn" "uri" "conn") face font-lock-comment-face) 20 21 (help-echo cider--help-echo fontified t cider-locals ("defn" "uri" "conn") face font-lock-comment-face) 21 30 (help-echo cider--help-echo fontified t cider-locals ("defn" "uri" "conn") face font-lock-comment-face) 30 31 (help-echo cider--help-echo fontified t cider-locals ("defn" "uri" "conn") face font-lock-comment-face)) "" #("q/wAHt-Q*~" 0 10 (help-echo cider--help-echo cider-locals nil face font-lock-string-face fontified t)) "9500909024" #("lap-igg-bio" 0 11 (help-echo cider--help-echo cider-locals nil face font-lock-string-face fontified t)) #("lap-igg-bio" 0 11 (help-echo cider--help-echo cider-locals nil face font-lock-string-face fontified t)) #("9500909024" 0 10 (help-echo cider--help-echo cider-locals nil face font-lock-string-face fontified t)) #("9500909024" 0 10 (help-echo cider--help-echo cider-locals nil face font-lock-string-face fontified t)) #("{:vertical/id (get-vertical-id \"Madhya Pradesh\" \"NRM\" (get-db))
                     :vertical/users [:user/username \"9500909024\"]}" 0 1 (fontified t) 1 2 (fontified t face (clojure-keyword-face)) 2 10 (fontified t face (font-lock-type-face clojure-keyword-face)) 10 11 (fontified t face (default clojure-keyword-face)) 11 13 (fontified t face (clojure-keyword-face)) 13 14 (fontified t) 14 15 (fontified t) 15 31 (fontified t) 31 46 (fontified t face font-lock-string-face) 46 47 (fontified t face font-lock-string-face) 47 48 (fontified t) 48 52 (fontified t face font-lock-string-face) 52 53 (fontified t face font-lock-string-face) 53 54 (fontified t) 54 61 (fontified t) 61 62 (fontified t) 62 85 (fontified t) 85 86 (fontified t face (clojure-keyword-face)) 86 94 (fontified t face (font-lock-type-face clojure-keyword-face)) 94 95 (fontified t face (default clojure-keyword-face)) 95 100 (fontified t face (clojure-keyword-face)) 100 101 (fontified t) 101 102 (fontified t) 102 103 (fontified t face (clojure-keyword-face)) 103 107 (fontified t face (font-lock-type-face clojure-keyword-face)) 107 108 (fontified t face (default clojure-keyword-face)) 108 116 (fontified t face (clojure-keyword-face)) 116 117 (fontified t) 117 128 (fontified t face font-lock-string-face) 128 129 (fontified t face font-lock-string-face) 129 130 (fontified t) 130 131 (fontified t)) #("(util/transact [{:vertical/id    (util/get-vertical-id state department (util/get-db))
        ;;" 0 1 (fontified t help-echo cider--help-echo cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details") face font-lock-comment-face) 1 5 (fontified t help-echo cider--help-echo cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details") face font-lock-comment-face) 5 6 (fontified t help-echo cider--help-echo cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details") face font-lock-comment-face) 6 15 (fontified t help-echo cider--help-echo cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details") face font-lock-comment-face) 15 16 (fontified t help-echo cider--help-echo cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details") face font-lock-comment-face) 16 17 (fontified t help-echo cider--help-echo cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details") face font-lock-comment-face) 17 18 (fontified t help-echo cider--help-echo cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details") face (font-lock-comment-face clojure-keyword-face)) 18 26 (fontified t help-echo cider--help-echo cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details") face (font-lock-comment-face clojure-keyword-face)) 26 27 (fontified t help-echo cider--help-echo cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details") face (font-lock-comment-face clojure-keyword-face)) 27 29 (fontified t help-echo cider--help-echo cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details") face (font-lock-comment-face clojure-keyword-face)) 29 33 (fontified t help-echo cider--help-echo cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details") face font-lock-comment-face) 33 34 (fontified t help-echo cider--help-echo cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details") face font-lock-comment-face) 34 38 (fontified t help-echo cider--help-echo cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details") face font-lock-comment-face) 38 39 (fontified t help-echo cider--help-echo cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details") face font-lock-comment-face) 39 72 (fontified t help-echo cider--help-echo cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details") face font-lock-comment-face) 72 73 (fontified t help-echo cider--help-echo cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details") face font-lock-comment-face) 73 77 (fontified t help-echo cider--help-echo cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details") face font-lock-comment-face) 77 78 (fontified t help-echo cider--help-echo cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details") face font-lock-comment-face) 78 84 (fontified t help-echo cider--help-echo cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details") face font-lock-comment-face) 84 85 (fontified t help-echo cider--help-echo cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details") face font-lock-comment-face) 85 86 (fontified t help-echo cider--help-echo cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details") face font-lock-comment-face) 86 87 (fontified t help-echo cider--help-echo cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details") face font-lock-comment-face) 87 95 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details")) 95 97 (fontified t help-echo cider--help-echo cider-locals ("s" "len" "rindex" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details") face font-lock-comment-delimiter-face)) #("(defn get-vertical-id [state vertical]
  (let ))" 0 1 (fontified t help-echo cider--help-echo cider-locals ("s" "len" "rindex" "lindex") face (rainbow-delimiters-depth-1-face)) 1 5 (fontified t help-echo cider--help-echo cider-locals ("s" "len" "rindex" "lindex") face font-lock-keyword-face) 5 6 (fontified t help-echo cider--help-echo cider-locals ("s" "len" "rindex" "lindex" "vertical" "state")) 6 21 (fontified t help-echo cider--help-echo cider-locals ("s" "len" "rindex" "lindex" "vertical" "state") face font-lock-function-name-face) 21 22 (fontified t help-echo cider--help-echo cider-locals ("s" "len" "rindex" "lindex" "vertical" "state")) 22 23 (fontified t help-echo cider--help-echo cider-locals ("s" "len" "rindex" "lindex" "vertical" "state") face (rainbow-delimiters-depth-2-face)) 23 37 (fontified t help-echo cider--help-echo cider-locals ("s" "len" "rindex" "lindex" "vertical" "state")) 37 38 (fontified t help-echo cider--help-echo cider-locals ("s" "len" "rindex" "lindex" "vertical" "state") face (rainbow-delimiters-depth-2-face)) 38 39 (fontified t help-echo cider--help-echo cider-locals ("s" "len" "rindex" "lindex" "vertical" "state")) 39 41 (fontified t help-echo cider--help-echo cider-locals ("s" "len" "rindex" "lindex" "vertical" "state")) 41 42 (fontified t help-echo cider--help-echo cider-locals ("s" "len" "rindex" "lindex" "vertical" "state") face (rainbow-delimiters-depth-2-face)) 42 45 (fontified t help-echo cider--help-echo cider-locals ("s" "len" "rindex" "lindex" "vertical" "state") face font-lock-keyword-face) 45 46 (fontified t help-echo cider--help-echo cider-locals ("s" "len" "rindex" "lindex" "vertical" "state")) 46 47 (fontified t help-echo cider--help-echo cider-locals ("s" "len" "rindex" "lindex" "vertical" "state") face (rainbow-delimiters-depth-2-face)) 47 48 (fontified t help-echo cider--help-echo cider-locals ("s" "len" "rindex" "lindex" "vertical" "state") face (rainbow-delimiters-depth-1-face))) "TXrCUZ9J4bdt4crcf6UH7FGnAXcS6N22hBwBttVr" #("RAD4fR6v4&AWah4xmRuf5tYw8*Mf%x5q6QQ#9Twu" 0 39 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face) 39 40 (fontified t rear-nonsticky t help-echo cider--help-echo cider-locals nil face font-lock-string-face)) "TXrCUZ9J4bdt4crcf6UH7FGnAXcS6N22hBwBttVr" #("(defn state-tx)

" 0 1 (fontified t help-echo cider--help-echo cider-locals ("s" "len" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "users") face (rainbow-delimiters-depth-1-face)) 1 5 (fontified t help-echo cider--help-echo cider-locals ("s" "len" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "users") face font-lock-keyword-face) 5 6 (fontified t help-echo cider--help-echo cider-locals ("s" "len" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "users")) 6 14 (fontified t help-echo cider--help-echo cider-locals ("s" "len" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "users") face font-lock-function-name-face) 14 15 (fontified t help-echo cider--help-echo cider-locals ("s" "len" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "users") face (rainbow-delimiters-depth-1-face)) 15 16 (help-echo cider--help-echo fontified t cider-locals ("s" "len" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "users")) 16 17 (cider-locals ("s" "len" "path" "replaced" "spaces-trimmed" "wanted-columns" "raw-user-data" "parsed-csv" "name" "tx" "user" "tx" "first-last-name" "state" "department" "phone" "name" "same-properties" "user-details" "users") fontified t help-echo cider--help-echo)) "STAFF DATABASE FOR ONLINE PROGRAM MANAGEMENT SYSTEM,,,,,,,
Sl. No,Staff Name,Designation,Mob. No,Email ID,Department/Pillar,State,Staff Photo
1,Vikrant Puri ,Asst. General Manager, 8736960000,vikrant.puri@hihseed.org,P&A, Madhya Pradesh ,
2,Subodh Karnik ,Senior Manager , 9669622033,subodh.karnik@hihseed.org,Health & Livelihood,Madhya Pradesh,
3,Alok Mishra ,Senior Project Manager,7024466336,alok.mishra@hihseed.org,Civil,  Madhya Pradesh,
4,Jini Nikita Das​ , MIS & Documentation Executive,9826812479 ,jini.nikitadas@hihseed.org,MIS,  Madhya Pradesh,
5, Vijay Kumarvankar, Program Manager , 9754212571, vijay.kumarvankar@hihseed.org,EKC & NRM,  Madhya Pradesh,
6,Shiksha Thakkur ,Program Manager  ,7805041142 , shisksha.thakkur@hihseed.org,CLEP,  Madhya Pradesh,
7, Ajay Songara,Block Manager,7828334945,Ajay.keshavlal@hihseed.org ,All Pillars,Madhya Pradesh,
8, Shaitan Meena,Agri &Marketing Executive,9755112188,Meenaakshay9755112188@gmail.com ,NRM,Madhya Pradesh,
9, Kapil Kachawa,EKC Instructor,9691292817,Kkachhawa55@gmail.com ,EKC,Madhya Pradesh,
10, Hemant Chouhan,EKC Instructor,9575447033,hemant1996.chuvan@gmail.com ,EKC,Madhya Pradesh,
11, Kiran Rahtore,Credit Officer,9993446677,Rathore.kiran05071998@gmail.com ,SHG,Madhya Pradesh,
12, Nisita Chouhan,Community Mobilizer,8435451021,vikrant.puri@hihseed.org,All Pillars,Madhya Pradesh,
13, Deepa Pal,Community Mobilizer,9589064740,vikrant.puri@hihseed.org,All Pillars,Madhya Pradesh,
14, Nisha Bhabar,CLC Teacher,9165159825,vikrant.puri@hihseed.org,CLEP,Madhya Pradesh,
15, Sunita Patel,CLC Teacher,9753695047,vikrant.puri@hihseed.org,CLEP,Madhya Pradesh,
16, Farida Bee,Block Manager,8435440733,Syedfarida625@gmail.com,All Pillars,Madhya Pradesh,
17, Gopal Patel,EKC Instructor,9977204791,gopalpateldws@gmail.com,EKC,Madhya Pradesh,
18, Umesh Nagar,EKC Instructor,8827666884,uminagar144@gmail.com,EKC,Madhya Pradesh,
19, Rahul Malviya,Credit Officer,8770120782,rahulmalviya8883@gmail.com,SHG,Madhya Pradesh,
20, Sanju Choudhary,Community Mobilizer,7999359978,vikrant.puri@hihseed.org,All Pillars,Madhya Pradesh,
21, Bhola Rao,Community Mobilizer,7000245137,vikrant.puri@hihseed.org,All Pillars,Madhya Pradesh,
22, Jyothi Rajput ,CLC teacher ,9617113906,vikrant.puri@hihseed.org,CLEP ,Madhya Pradesh ,
23, Divya Rani ,CLC teacher ,7747958028,Divyaaneema29nov1993@gmail.com ,CLEP,Madhya Pradesh ,
24, Hemlata,CLC Teacher ,6260808575,vikrant.puri@hihseed.org,CLEP ,Madhya Pradesh,
25,Karthikeyan Arjunan,Project Manager,9944976675,karthikeyan.a@hihseed.org,VUP,Maharashtra,
26,Shrimant Shindhe ,Asst. Project Manager,9850990873,shrimant.shinde@hihseed.org,SHG,Maharashtra,
27,Mohsin Shaikh,Regional Trainer,8007199682,mohsin.vazir@hihseed.org,SDTC,Maharashtra,
28,Milind Prabhakar Dange,Sr. Regional Trainer,9881536580,milind.dange@hihseed.org,SDTC,Maharashtra,
29,Rishika Shaw,Asst. Project Manager,7387253315,rishika.j@hihseed.org,Others,Maharashtra,
30,Sai Varshan,Agriculture Engineer,8056792737,saivarshan.nrm@hihseed.org,NRM,Maharashtra,
31,Sarika Shinde,Block Manager,7066802559,karthikeyan.a@hihseed.org,SHG,Maharashtra,
32,Minakshi Dinkar Ghare,Credit Officer,9049300816,karthikeyan.a@hihseed.org,SHG,Maharashtra,
33,Pratibha Keshav Dahale,Credit Officer,9158756284,karthikeyan.a@hihseed.org,SHG,Maharashtra,
34,Rupali Suresh Pavale,Credit Officer,9763651868,karthikeyan.a@hihseed.org,SHG,Maharashtra,
35,Jyoti Sunil Shedge,Credit Officer,7378714654,karthikeyan.a@hihseed.org,SHG,Maharashtra,
36,Swaminathan ,Vice President,9381882100,swaminathan@hihindia.org,VUP,Tamilnadu,
37,Arul Durai ,Chief Manager,7708558299,aruldurai.s@hihseed.org,VUP,Tamilnadu,
38,Jaisankar ,Project Manager,9500909024,jaisankar.shg@hihseed.org,VUP,Tamilnadu,
39,ThangaDurai ,Sr. Block Manager,9381882166,thangadurai.b@hihseed.org,VUP,Tamilnadu,
40,Vinoth Kumar,Asst. Project Manager,9566550120,vinoth.kumar@hihseed.org,VUP,Tamilnadu,
41,Bharathi Perumal ,Asst. Project Manager,9566595239,bharathi.t@hihseed.org,VUP,Tamilnadu,
42,Selva Kumar ,Asst. Project Manager,9677805261,selvakumar.s@hihseed.org,VUP,Tamilnadu,
43,Radha Krishnan ,Asst. Project Manager,8220217551,radhakrishnan.vup@hihseed.org,VUP,Tamilnadu,
44,Manisha Devi ,Assistant Executive,9790115518,manishadevi.t@hihseed.org,VUP,Tamilnadu,
45,Balasubramani ,Dy. Project Manager,8072452955,balasubramani.clep@hihseed.org,VUP,Tamilnadu,
46,Mageshwari ,Asst. Project Manager,6381572709,magereshma@gmail.com,VUP,Tamilnadu,
47,Jaya Prakash ,Chief Manager,9442059710,jayaprakash.y@hihseed.org,SDTC,Tamilnadu,
48,Purushothaman ,Project Manager,9994614926,purushothaman.nrm@hihseed.org,NRM,Tamilnadu,
49,Umapathy,Project Manager,9244680116,umapathy.km@hihseed.org,Health,Tamilnadu,
50,Moses Samuel,General Manager,9442478525,moses.g@hihseed.org,SHG,Tamilnadu,
51,Kannan,General Manager,9585558384,kannan.g@hihindia.org,NRM,HO,
52,Chandra Gupta,Asst. General Manager,9790258778,chandraguptha.nrm@hihseed.org,NRM,HO,
53,Princess Beula,Chief General Manager,9244680137,beula@hihindia.org,Health,HO,
54,Krishnan,Chief Operating Officer,9940150635,krishnan.n@hihindia.org,SHG,HO,
54,Steve Robison,Deputy Manager,9790709641,steven.robinson@hihseed.org,P&A,HO,
55,Umashankar,Deputy General Manager,7893291119,umashankar.s@hihseed.org,P&A,HO,
56,Kavitha,Senior Executive,9994465988,kavitha.admin@hihseed.org,P&A ,HO,
57,Byrav,General Manager,8248401314,byrav.n@hihindia.org,P&A,HO,
58,Sandip Mookerjee,President,9500041800,sandip.mookerjee@hihindia.org,P&A,HO,
59,Madhusharan,President,9717998555,madhu.sharan@hihindia.org,SHG,New Delhi,
" #("- length 1" 0 10 (fontified t help-echo cider--help-echo cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "separator" "length" "words"))) #("(- length 1) separator" 0 1 (fontified t help-echo cider--help-echo cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "separator" "length" "words") face (rainbow-delimiters-depth-6-face)) 1 11 (fontified t help-echo cider--help-echo cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "separator" "length" "words")) 11 12 (fontified t help-echo cider--help-echo cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "separator" "length" "words") face (rainbow-delimiters-depth-6-face)) 12 13 (fontified t help-echo cider--help-echo cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "separator" "length" "words")) 13 22 (fontified t help-echo cider--help-echo cider-locals ("user-details" "_" "password" "phone" "pass" "same-properties" "separator" "length" "words"))) #("   \"wed\"
" 0 3 (cider-locals ("zoo" "zip" "you" "yet" "yes" "yep" "yen" "wye" "wry" "wow" "woo" "won" "wit" "wis" "win" "wig" "why" "who" "wet" "wee" "wed" "web" "way" "wax" "was" "war" "wan" "vow" "vie" "via" "vet" "vat" "van" "use" "two" "tug" "tub" "try" "toy" "tow" "tot" "tor" "top" "too" "ton" "tom" "toe" "tod" "tip" "tin" "tie" "thy" "the" "ten" "tee" "ted" "tea" "tax" "tat" "tar" "tap" "tan" "tam" "tag" "tad" "tab" "sup" "sun" "sum" "sue" "sub" "spy" "spa" "soy" "sow" "son" "sol" "sod" "sly" "sky" "ski" "six" "sit" "sir" "sip" "sin" "sim" "sic" "shy" "she" "sew" "set" "sen" "see" "sec" "sea" "say" "saw" "sat" "sap" "sal" "sag" "sae" "sad" "sac" "sab" "rye" "run" "rum" "rug" "rue" "row" "rot" "roe" "rod" "rob" "rip" "rim" "rig" "rid" "rib" "rev" "rep" "rem" "reg" "ref" "red" "ray" "raw" "rat" "rap" "ran" "ram" "raj" "rag" "rad" "put" "pup" "pub" "psi" "pro" "pot" "pop" "pol" "pod" "ply" "pit" "pip" "pin" "pie" "pic" "phi" "pew" "pet" "per" "pep" "pen" "peg" "pea" "pay" "paw" "pat" "pas" "par" "pap" "pan" "pam" "pal" "pac" "own" "owl" "owe" "out" "our" "ore" "orb" "opt" "ooh" "one" "ole" "old" "oil" "oft" "off" "odd" "oak" "nun" "now" "not" "nos" "nor" "nod" "nip" "nil" "new" "net" "neg" "neb" "nay" "nap" "nan" "nah" "nab" "mum" "mug" "mud" "mot" "mop" "mon" "mol" "mod" "mob" "mix" "mil" "mid" "met" "men" "meg" "med" "may" "max" "mat" "mas" "mar" "map" "man" "mag" "mad" "mac" "low" "lot" "log" "lit" "lie" "lid" "lib" "let" "lee" "led" "lea" "lay" "lax" "law" "lap" "lam" "lag" "lad" "lac" "lab" "kit" "kin" "kid" "key" "ken" "kay" "jun" "jug" "joy" "jog" "joe" "job" "jew" "jet" "jay" "jaw" "jar" "jam" "ivy" "its" "ion" "inn" "ink" "imp" "ill" "igg" "icy" "ice" "hut" "hum" "huh" "hue" "hub" "how" "hot" "hop" "hon" "hit" "his" "him" "hid" "hey" "her" "hen" "hem" "hay" "hat" "has" "ham" "had" "gym" "guy" "gut" "gun" "gum" "got" "gin" "gig" "get" "gem" "gel" "gee" "gas" "gap" "fur" "fun" "fry" "fox" "for" "fog" "foe" "fly" "flu" "fix" "fit" "fir" "fin" "fig" "few" "fen" "fee" "fed" "fay" "fax" "far" "fan" "fad" "fab" "eye" "eve" "eta" "era" "end" "emu" "elm" "elf" "ego" "egg" "eft" "ecu" "ebb" "eat" "ear" "dye" "duo" "dun" "dug" "due" "dub" "dry" "dot" "don" "doe" "doc" "dis" "dip" "din" "dim" "dig" "die" "did" "dew" "den" "del" "def" "dee" "day" "dan" "dam" "dal" "dad" "dab" "cut" "cup" "cue" "cub" "cry" "coy" "cox" "cow" "cot" "cos" "cor" "cop" "coo" "con" "col" "cod" "cob" "chi" "cat" "car" "cap" "can" "cam" "cad" "cab" "bye" "buy" "but" "bus" "bun" "bug" "bud" "boy" "box" "bow" "boo" "bog" "bob" "biz" "bit" "bis" "bio" "bin" "big" "bid" "bet" "ben" "bel" "beg" "bee" "bed" "bay" "bat" "bar" "ban" "bag" "bad" "baa" "aye" "axe" "awe" "ave" "ate" "asp" "ask" "ash" "art" "arm" "ark" "are" "arc" "apt" "app" "ape" "any" "ant" "and" "ana" "amp" "alt" "all" "ale" "ala" "air" "aim" "aid" "aha" "ago" "age" "aft" "ado" "add" "act" "ace" "abs" "aba") help-echo cider--help-echo fontified t) 3 8 (face font-lock-string-face cider-locals ("zoo" "zip" "you" "yet" "yes" "yep" "yen" "wye" "wry" "wow" "woo" "won" "wit" "wis" "win" "wig" "why" "who" "wet" "wee" "wed" "web" "way" "wax" "was" "war" "wan" "vow" "vie" "via" "vet" "vat" "van" "use" "two" "tug" "tub" "try" "toy" "tow" "tot" "tor" "top" "too" "ton" "tom" "toe" "tod" "tip" "tin" "tie" "thy" "the" "ten" "tee" "ted" "tea" "tax" "tat" "tar" "tap" "tan" "tam" "tag" "tad" "tab" "sup" "sun" "sum" "sue" "sub" "spy" "spa" "soy" "sow" "son" "sol" "sod" "sly" "sky" "ski" "six" "sit" "sir" "sip" "sin" "sim" "sic" "shy" "she" "sew" "set" "sen" "see" "sec" "sea" "say" "saw" "sat" "sap" "sal" "sag" "sae" "sad" "sac" "sab" "rye" "run" "rum" "rug" "rue" "row" "rot" "roe" "rod" "rob" "rip" "rim" "rig" "rid" "rib" "rev" "rep" "rem" "reg" "ref" "red" "ray" "raw" "rat" "rap" "ran" "ram" "raj" "rag" "rad" "put" "pup" "pub" "psi" "pro" "pot" "pop" "pol" "pod" "ply" "pit" "pip" "pin" "pie" "pic" "phi" "pew" "pet" "per" "pep" "pen" "peg" "pea" "pay" "paw" "pat" "pas" "par" "pap" "pan" "pam" "pal" "pac" "own" "owl" "owe" "out" "our" "ore" "orb" "opt" "ooh" "one" "ole" "old" "oil" "oft" "off" "odd" "oak" "nun" "now" "not" "nos" "nor" "nod" "nip" "nil" "new" "net" "neg" "neb" "nay" "nap" "nan" "nah" "nab" "mum" "mug" "mud" "mot" "mop" "mon" "mol" "mod" "mob" "mix" "mil" "mid" "met" "men" "meg" "med" "may" "max" "mat" "mas" "mar" "map" "man" "mag" "mad" "mac" "low" "lot" "log" "lit" "lie" "lid" "lib" "let" "lee" "led" "lea" "lay" "lax" "law" "lap" "lam" "lag" "lad" "lac" "lab" "kit" "kin" "kid" "key" "ken" "kay" "jun" "jug" "joy" "jog" "joe" "job" "jew" "jet" "jay" "jaw" "jar" "jam" "ivy" "its" "ion" "inn" "ink" "imp" "ill" "igg" "icy" "ice" "hut" "hum" "huh" "hue" "hub" "how" "hot" "hop" "hon" "hit" "his" "him" "hid" "hey" "her" "hen" "hem" "hay" "hat" "has" "ham" "had" "gym" "guy" "gut" "gun" "gum" "got" "gin" "gig" "get" "gem" "gel" "gee" "gas" "gap" "fur" "fun" "fry" "fox" "for" "fog" "foe" "fly" "flu" "fix" "fit" "fir" "fin" "fig" "few" "fen" "fee" "fed" "fay" "fax" "far" "fan" "fad" "fab" "eye" "eve" "eta" "era" "end" "emu" "elm" "elf" "ego" "egg" "eft" "ecu" "ebb" "eat" "ear" "dye" "duo" "dun" "dug" "due" "dub" "dry" "dot" "don" "doe" "doc" "dis" "dip" "din" "dim" "dig" "die" "did" "dew" "den" "del" "def" "dee" "day" "dan" "dam" "dal" "dad" "dab" "cut" "cup" "cue" "cub" "cry" "coy" "cox" "cow" "cot" "cos" "cor" "cop" "coo" "con" "col" "cod" "cob" "chi" "cat" "car" "cap" "can" "cam" "cad" "cab" "bye" "buy" "but" "bus" "bun" "bug" "bud" "boy" "box" "bow" "boo" "bog" "bob" "biz" "bit" "bis" "bio" "bin" "big" "bid" "bet" "ben" "bel" "beg" "bee" "bed" "bay" "bat" "bar" "ban" "bag" "bad" "baa" "aye" "axe" "awe" "ave" "ate" "asp" "ask" "ash" "art" "arm" "ark" "are" "arc" "apt" "app" "ape" "any" "ant" "and" "ana" "amp" "alt" "all" "ale" "ala" "air" "aim" "aid" "aha" "ago" "age" "aft" "ado" "add" "act" "ace" "abs" "aba") help-echo cider--help-echo fontified t) 8 9 (cider-locals ("zoo" "zip" "you" "yet" "yes" "yep" "yen" "wye" "wry" "wow" "woo" "won" "wit" "wis" "win" "wig" "why" "who" "wet" "wee" "web" "way" "wax" "was" "war" "wan" "vow" "vie" "via" "vet" "vat" "van" "use" "two" "tug" "tub" "try" "toy" "tow" "tot" "tor" "top" "too" "ton" "tom" "toe" "tod" "tip" "tin" "tie" "thy" "the" "ten" "tee" "ted" "tea" "tax" "tat" "tar" "tap" "tan" "tam" "tag" "tad" "tab" "sup" "sun" "sum" "sue" "sub" "spy" "spa" "soy" "sow" "son" "sol" "sod" "sly" "sky" "ski" "six" "sit" "sir" "sip" "sin" "sim" "sic" "shy" "she" "sew" "set" "sen" "see" "sec" "sea" "say" "saw" "sat" "sap" "sal" "sag" "sae" "sad" "sac" "sab" "rye" "run" "rum" "rug" "rue" "row" "rot" "roe" "rod" "rob" "rip" "rim" "rig" "rid" "rib" "rev" "rep" "rem" "reg" "ref" "red" "ray" "raw" "rat" "rap" "ran" "ram" "raj" "rag" "rad" "put" "pup" "pub" "psi" "pro" "pot" "pop" "pol" "pod" "ply" "pit" "pip" "pin" "pie" "pic" "phi" "pew" "pet" "per" "pep" "pen" "peg" "pea" "pay" "paw" "pat" "pas" "par" "pap" "pan" "pam" "pal" "pac" "own" "owl" "owe" "out" "our" "ore" "orb" "opt" "ooh" "one" "ole" "old" "oil" "oft" "off" "odd" "oak" "nun" "now" "not" "nos" "nor" "nod" "nip" "nil" "new" "net" "neg" "neb" "nay" "nap" "nan" "nah" "nab" "mum" "mug" "mud" "mot" "mop" "mon" "mol" "mod" "mob" "mix" "mil" "mid" "met" "men" "meg" "med" "may" "max" "mat" "mas" "mar" "map" "man" "mag" "mad" "mac" "low" "lot" "log" "lit" "lie" "lid" "lib" "let" "lee" "led" "lea" "lay" "lax" "law" "lap" "lam" "lag" "lad" "lac" "lab" "kit" "kin" "kid" "key" "ken" "kay" "jun" "jug" "joy" "jog" "joe" "job" "jew" "jet" "jay" "jaw" "jar" "jam" "ivy" "its" "ion" "inn" "ink" "imp" "ill" "igg" "icy" "ice" "hut" "hum" "huh" "hue" "hub" "how" "hot" "hop" "hon" "hit" "his" "him" "hid" "hey" "her" "hen" "hem" "hay" "hat" "has" "ham" "had" "gym" "guy" "gut" "gun" "gum" "got" "gin" "gig" "get" "gem" "gel" "gee" "gas" "gap" "fur" "fun" "fry" "fox" "for" "fog" "foe" "fly" "flu" "fix" "fit" "fir" "fin" "fig" "few" "fen" "fee" "fed" "fay" "fax" "far" "fan" "fad" "fab" "eye" "eve" "eta" "era" "end" "emu" "elm" "elf" "ego" "egg" "eft" "ecu" "ebb" "eat" "ear" "dye" "duo" "dun" "dug" "due" "dub" "dry" "dot" "don" "doe" "doc" "dis" "dip" "din" "dim" "dig" "die" "did" "dew" "den" "del" "def" "dee" "day" "dan" "dam" "dal" "dad" "dab" "cut" "cup" "cue" "cub" "cry" "coy" "cox" "cow" "cot" "cos" "cor" "cop" "coo" "con" "col" "cod" "cob" "chi" "cat" "car" "cap" "can" "cam" "cad" "cab" "bye" "buy" "but" "bus" "bun" "bug" "bud" "boy" "box" "bow" "boo" "bog" "bob" "biz" "bit" "bis" "bio" "bin" "big" "bid" "bet" "ben" "bel" "beg" "bee" "bed" "bay" "bat" "bar" "ban" "bag" "bad" "baa" "aye" "axe" "awe" "ave" "ate" "asp" "ask" "ash" "art" "arm" "ark" "are" "arc" "apt" "app" "ape" "any" "ant" "and" "ana" "amp" "alt" "all" "ale" "ala" "air" "aim" "aid" "aha" "ago" "age" "aft" "ado" "add" "act" "ace" "abs" "aba") help-echo cider--help-echo fontified t)) #("   \"sis\"
" 0 3 (cider-locals ("zoo" "zip" "you" "yet" "yes" "yep" "yen" "wye" "wry" "wow" "woo" "won" "wit" "wis" "win" "wig" "why" "who" "wet" "wee" "wed" "web" "way" "wax" "was" "war" "wan" "vow" "vie" "via" "vet" "vat" "van" "use" "two" "tug" "tub" "try" "toy" "tow" "tot" "tor" "top" "too" "ton" "tom" "toe" "tod" "tip" "tin" "tie" "thy" "the" "ten" "tee" "ted" "tea" "tax" "tat" "tar" "tap" "tan" "tam" "tag" "tad" "tab" "sup" "sun" "sum" "sue" "sub" "spy" "spa" "soy" "sow" "son" "sol" "sod" "sly" "sky" "ski" "six" "sit" "sis" "sir" "sip" "sin" "sim" "sic" "shy" "she" "sew" "set" "sen" "see" "sec" "sea" "say" "saw" "sat" "sap" "sal" "sag" "sae" "sad" "sac" "sab" "rye" "run" "rum" "rug" "rue" "row" "rot" "roe" "rod" "rob" "rip" "rim" "rig" "rid" "rib" "rev" "rep" "rem" "reg" "ref" "red" "ray" "raw" "rat" "rap" "ran" "ram" "raj" "rag" "rad" "put" "pup" "pub" "psi" "pro" "pot" "pop" "pol" "pod" "ply" "pit" "pip" "pin" "pie" "pic" "phi" "pew" "pet" "per" "pep" "pen" "peg" "pea" "pay" "paw" "pat" "pas" "par" "pap" "pan" "pam" "pal" "pac" "own" "owl" "owe" "out" "our" "ore" "orb" "opt" "ooh" "one" "ole" "old" "oil" "oft" "off" "odd" "oak" "nun" "now" "not" "nos" "nor" "nod" "nip" "nil" "new" "net" "neg" "neb" "nay" "nap" "nan" "nah" "nab" "mum" "mug" "mud" "mot" "mop" "mon" "mol" "mod" "mob" "mix" "mil" "mid" "met" "men" "meg" "med" "may" "max" "mat" "mas" "mar" "map" "man" "mag" "mad" "mac" "low" "lot" "log" "lit" "lie" "lid" "lib" "let" "lee" "led" "lea" "lay" "lax" "law" "lap" "lam" "lag" "lad" "lac" "lab" "kit" "kin" "kid" "key" "ken" "kay" "jun" "jug" "joy" "jog" "joe" "job" "jew" "jet" "jay" "jaw" "jar" "jam" "ivy" "its" "ion" "inn" "ink" "imp" "ill" "igg" "icy" "ice" "hut" "hum" "huh" "hue" "hub" "how" "hot" "hop" "hon" "hit" "his" "him" "hid" "hey" "her" "hen" "hem" "hay" "hat" "has" "ham" "had" "gym" "guy" "gut" "gun" "gum" "got" "gin" "gig" "get" "gem" "gel" "gee" "gas" "gap" "fur" "fun" "fry" "fox" "for" "fog" "foe" "fly" "flu" "fix" "fit" "fir" "fin" "fig" "few" "fen" "fee" "fed" "fay" "fax" "far" "fan" "fad" "fab" "eye" "eve" "eta" "era" "end" "emu" "elm" "elf" "ego" "egg" "eft" "ecu" "ebb" "eat" "ear" "dye" "duo" "dun" "dug" "due" "dub" "dry" "dot" "don" "doe" "doc" "dis" "dip" "din" "dim" "dig" "die" "did" "dew" "den" "del" "def" "dee" "day" "dan" "dam" "dal" "dad" "dab" "cut" "cup" "cue" "cub" "cry" "coy" "cox" "cow" "cot" "cos" "cor" "cop" "coo" "con" "col" "cod" "cob" "chi" "cat" "car" "cap" "can" "cam" "cad" "cab" "bye" "buy" "but" "bus" "bun" "bug" "bud" "boy" "box" "bow" "boo" "bog" "bob" "biz" "bit" "bis" "bio" "bin" "big" "bid" "bet" "ben" "bel" "beg" "bee" "bed" "bay" "bat" "bar" "ban" "bag" "bad" "baa" "aye" "axe" "awe" "ave" "ate" "asp" "ask" "ash" "art" "arm" "ark" "are" "arc" "apt" "app" "ape" "any" "ant" "and" "ana" "amp" "alt" "all" "ale" "ala" "air" "aim" "aid" "aha" "ago" "age" "aft" "ado" "add" "act" "ace" "abs" "aba") fontified t help-echo cider--help-echo) 3 8 (face font-lock-string-face cider-locals ("zoo" "zip" "you" "yet" "yes" "yep" "yen" "wye" "wry" "wow" "woo" "won" "wit" "wis" "win" "wig" "why" "who" "wet" "wee" "wed" "web" "way" "wax" "was" "war" "wan" "vow" "vie" "via" "vet" "vat" "van" "use" "two" "tug" "tub" "try" "toy" "tow" "tot" "tor" "top" "too" "ton" "tom" "toe" "tod" "tip" "tin" "tie" "thy" "the" "ten" "tee" "ted" "tea" "tax" "tat" "tar" "tap" "tan" "tam" "tag" "tad" "tab" "sup" "sun" "sum" "sue" "sub" "spy" "spa" "soy" "sow" "son" "sol" "sod" "sly" "sky" "ski" "six" "sit" "sis" "sir" "sip" "sin" "sim" "sic" "shy" "she" "sew" "set" "sen" "see" "sec" "sea" "say" "saw" "sat" "sap" "sal" "sag" "sae" "sad" "sac" "sab" "rye" "run" "rum" "rug" "rue" "row" "rot" "roe" "rod" "rob" "rip" "rim" "rig" "rid" "rib" "rev" "rep" "rem" "reg" "ref" "red" "ray" "raw" "rat" "rap" "ran" "ram" "raj" "rag" "rad" "put" "pup" "pub" "psi" "pro" "pot" "pop" "pol" "pod" "ply" "pit" "pip" "pin" "pie" "pic" "phi" "pew" "pet" "per" "pep" "pen" "peg" "pea" "pay" "paw" "pat" "pas" "par" "pap" "pan" "pam" "pal" "pac" "own" "owl" "owe" "out" "our" "ore" "orb" "opt" "ooh" "one" "ole" "old" "oil" "oft" "off" "odd" "oak" "nun" "now" "not" "nos" "nor" "nod" "nip" "nil" "new" "net" "neg" "neb" "nay" "nap" "nan" "nah" "nab" "mum" "mug" "mud" "mot" "mop" "mon" "mol" "mod" "mob" "mix" "mil" "mid" "met" "men" "meg" "med" "may" "max" "mat" "mas" "mar" "map" "man" "mag" "mad" "mac" "low" "lot" "log" "lit" "lie" "lid" "lib" "let" "lee" "led" "lea" "lay" "lax" "law" "lap" "lam" "lag" "lad" "lac" "lab" "kit" "kin" "kid" "key" "ken" "kay" "jun" "jug" "joy" "jog" "joe" "job" "jew" "jet" "jay" "jaw" "jar" "jam" "ivy" "its" "ion" "inn" "ink" "imp" "ill" "igg" "icy" "ice" "hut" "hum" "huh" "hue" "hub" "how" "hot" "hop" "hon" "hit" "his" "him" "hid" "hey" "her" "hen" "hem" "hay" "hat" "has" "ham" "had" "gym" "guy" "gut" "gun" "gum" "got" "gin" "gig" "get" "gem" "gel" "gee" "gas" "gap" "fur" "fun" "fry" "fox" "for" "fog" "foe" "fly" "flu" "fix" "fit" "fir" "fin" "fig" "few" "fen" "fee" "fed" "fay" "fax" "far" "fan" "fad" "fab" "eye" "eve" "eta" "era" "end" "emu" "elm" "elf" "ego" "egg" "eft" "ecu" "ebb" "eat" "ear" "dye" "duo" "dun" "dug" "due" "dub" "dry" "dot" "don" "doe" "doc" "dis" "dip" "din" "dim" "dig" "die" "did" "dew" "den" "del" "def" "dee" "day" "dan" "dam" "dal" "dad" "dab" "cut" "cup" "cue" "cub" "cry" "coy" "cox" "cow" "cot" "cos" "cor" "cop" "coo" "con" "col" "cod" "cob" "chi" "cat" "car" "cap" "can" "cam" "cad" "cab" "bye" "buy" "but" "bus" "bun" "bug" "bud" "boy" "box" "bow" "boo" "bog" "bob" "biz" "bit" "bis" "bio" "bin" "big" "bid" "bet" "ben" "bel" "beg" "bee" "bed" "bay" "bat" "bar" "ban" "bag" "bad" "baa" "aye" "axe" "awe" "ave" "ate" "asp" "ask" "ash" "art" "arm" "ark" "are" "arc" "apt" "app" "ape" "any" "ant" "and" "ana" "amp" "alt" "all" "ale" "ala" "air" "aim" "aid" "aha" "ago" "age" "aft" "ado" "add" "act" "ace" "abs" "aba") fontified t help-echo cider--help-echo) 8 9 (cider-locals ("zoo" "zip" "you" "yet" "yes" "yep" "yen" "wye" "wry" "wow" "woo" "won" "wit" "wis" "win" "wig" "why" "who" "wet" "wee" "wed" "web" "way" "wax" "was" "war" "wan" "vow" "vie" "via" "vet" "vat" "van" "use" "two" "tug" "tub" "try" "toy" "tow" "tot" "tor" "top" "too" "ton" "tom" "toe" "tod" "tip" "tin" "tie" "thy" "the" "ten" "tee" "ted" "tea" "tax" "tat" "tar" "tap" "tan" "tam" "tag" "tad" "tab" "sup" "sun" "sum" "sue" "sub" "spy" "spa" "soy" "sow" "son" "sol" "sod" "sly" "sky" "ski" "six" "sit" "sir" "sip" "sin" "sim" "sic" "shy" "she" "sew" "set" "sen" "see" "sec" "sea" "say" "saw" "sat" "sap" "sal" "sag" "sae" "sad" "sac" "sab" "rye" "run" "rum" "rug" "rue" "row" "rot" "roe" "rod" "rob" "rip" "rim" "rig" "rid" "rib" "rev" "rep" "rem" "reg" "ref" "red" "ray" "raw" "rat" "rap" "ran" "ram" "raj" "rag" "rad" "put" "pup" "pub" "psi" "pro" "pot" "pop" "pol" "pod" "ply" "pit" "pip" "pin" "pie" "pic" "phi" "pew" "pet" "per" "pep" "pen" "peg" "pea" "pay" "paw" "pat" "pas" "par" "pap" "pan" "pam" "pal" "pac" "own" "owl" "owe" "out" "our" "ore" "orb" "opt" "ooh" "one" "ole" "old" "oil" "oft" "off" "odd" "oak" "nun" "now" "not" "nos" "nor" "nod" "nip" "nil" "new" "net" "neg" "neb" "nay" "nap" "nan" "nah" "nab" "mum" "mug" "mud" "mot" "mop" "mon" "mol" "mod" "mob" "mix" "mil" "mid" "met" "men" "meg" "med" "may" "max" "mat" "mas" "mar" "map" "man" "mag" "mad" "mac" "low" "lot" "log" "lit" "lie" "lid" "lib" "let" "lee" "led" "lea" "lay" "lax" "law" "lap" "lam" "lag" "lad" "lac" "lab" "kit" "kin" "kid" "key" "ken" "kay" "jun" "jug" "joy" "jog" "joe" "job" "jew" "jet" "jay" "jaw" "jar" "jam" "ivy" "its" "ion" "inn" "ink" "imp" "ill" "igg" "icy" "ice" "hut" "hum" "huh" "hue" "hub" "how" "hot" "hop" "hon" "hit" "his" "him" "hid" "hey" "her" "hen" "hem" "hay" "hat" "has" "ham" "had" "gym" "guy" "gut" "gun" "gum" "got" "gin" "gig" "get" "gem" "gel" "gee" "gas" "gap" "fur" "fun" "fry" "fox" "for" "fog" "foe" "fly" "flu" "fix" "fit" "fir" "fin" "fig" "few" "fen" "fee" "fed" "fay" "fax" "far" "fan" "fad" "fab" "eye" "eve" "eta" "era" "end" "emu" "elm" "elf" "ego" "egg" "eft" "ecu" "ebb" "eat" "ear" "dye" "duo" "dun" "dug" "due" "dub" "dry" "dot" "don" "doe" "doc" "dis" "dip" "din" "dim" "dig" "die" "did" "dew" "den" "del" "def" "dee" "day" "dan" "dam" "dal" "dad" "dab" "cut" "cup" "cue" "cub" "cry" "coy" "cox" "cow" "cot" "cos" "cor" "cop" "coo" "con" "col" "cod" "cob" "chi" "cat" "car" "cap" "can" "cam" "cad" "cab" "bye" "buy" "but" "bus" "bun" "bug" "bud" "boy" "box" "bow" "boo" "bog" "bob" "biz" "bit" "bis" "bio" "bin" "big" "bid" "bet" "ben" "bel" "beg" "bee" "bed" "bay" "bat" "bar" "ban" "bag" "bad" "baa" "aye" "axe" "awe" "ave" "ate" "asp" "ask" "ash" "art" "arm" "ark" "are" "arc" "apt" "app" "ape" "any" "ant" "and" "ana" "amp" "alt" "all" "ale" "ala" "air" "aim" "aid" "aha" "ago" "age" "aft" "ado" "add" "act" "ace" "abs" "aba") fontified t help-echo cider--help-echo)) #("   \"rub\"
" 0 3 (cider-locals ("zoo" "zip" "you" "yet" "yes" "yep" "yen" "wye" "wry" "wow" "woo" "won" "wit" "wis" "win" "wig" "why" "who" "wet" "wee" "wed" "web" "way" "wax" "was" "war" "wan" "vow" "vie" "via" "vet" "vat" "van" "use" "two" "tug" "tub" "try" "toy" "tow" "tot" "tor" "top" "too" "ton" "tom" "toe" "tod" "tip" "tin" "tie" "thy" "the" "ten" "tee" "ted" "tea" "tax" "tat" "tar" "tap" "tan" "tam" "tag" "tad" "tab" "sup" "sun" "sum" "sue" "sub" "spy" "spa" "soy" "sow" "son" "sol" "sod" "sly" "sky" "ski" "six" "sit" "sis" "sir" "sip" "sin" "sim" "sic" "shy" "she" "sew" "set" "sen" "see" "sec" "sea" "say" "saw" "sat" "sap" "sal" "sag" "sae" "sad" "sac" "sab" "rye" "run" "rum" "rug" "rue" "rub" "row" "rot" "roe" "rod" "rob" "rip" "rim" "rig" "rid" "rib" "rev" "rep" "rem" "reg" "ref" "red" "ray" "raw" "rat" "rap" "ran" "ram" "raj" "rag" "rad" "put" "pup" "pub" "psi" "pro" "pot" "pop" "pol" "pod" "ply" "pit" "pip" "pin" "pie" "pic" "phi" "pew" "pet" "per" "pep" "pen" "peg" "pea" "pay" "paw" "pat" "pas" "par" "pap" "pan" "pam" "pal" "pac" "own" "owl" "owe" "out" "our" "ore" "orb" "opt" "ooh" "one" "ole" "old" "oil" "oft" "off" "odd" "oak" "nun" "now" "not" "nos" "nor" "nod" "nip" "nil" "new" "net" "neg" "neb" "nay" "nap" "nan" "nah" "nab" "mum" "mug" "mud" "mot" "mop" "mon" "mol" "mod" "mob" "mix" "mil" "mid" "met" "men" "meg" "med" "may" "max" "mat" "mas" "mar" "map" "man" "mag" "mad" "mac" "low" "lot" "log" "lit" "lie" "lid" "lib" "let" "lee" "led" "lea" "lay" "lax" "law" "lap" "lam" "lag" "lad" "lac" "lab" "kit" "kin" "kid" "key" "ken" "kay" "jun" "jug" "joy" "jog" "joe" "job" "jew" "jet" "jay" "jaw" "jar" "jam" "ivy" "its" "ion" "inn" "ink" "imp" "ill" "igg" "icy" "ice" "hut" "hum" "huh" "hue" "hub" "how" "hot" "hop" "hon" "hit" "his" "him" "hid" "hey" "her" "hen" "hem" "hay" "hat" "has" "ham" "had" "gym" "guy" "gut" "gun" "gum" "got" "gin" "gig" "get" "gem" "gel" "gee" "gas" "gap" "fur" "fun" "fry" "fox" "for" "fog" "foe" "fly" "flu" "fix" "fit" "fir" "fin" "fig" "few" "fen" "fee" "fed" "fay" "fax" "far" "fan" "fad" "fab" "eye" "eve" "eta" "era" "end" "emu" "elm" "elf" "ego" "egg" "eft" "ecu" "ebb" "eat" "ear" "dye" "duo" "dun" "dug" "due" "dub" "dry" "dot" "don" "doe" "doc" "dis" "dip" "din" "dim" "dig" "die" "did" "dew" "den" "del" "def" "dee" "day" "dan" "dam" "dal" "dad" "dab" "cut" "cup" "cue" "cub" "cry" "coy" "cox" "cow" "cot" "cos" "cor" "cop" "coo" "con" "col" "cod" "cob" "chi" "cat" "car" "cap" "can" "cam" "cad" "cab" "bye" "buy" "but" "bus" "bun" "bug" "bud" "boy" "box" "bow" "boo" "bog" "bob" "biz" "bit" "bis" "bio" "bin" "big" "bid" "bet" "ben" "bel" "beg" "bee" "bed" "bay" "bat" "bar" "ban" "bag" "bad" "baa" "aye" "axe" "awe" "ave" "ate" "asp" "ask" "ash" "art" "arm" "ark" "are" "arc" "apt" "app" "ape" "any" "ant" "and" "ana" "amp" "alt" "all" "ale" "ala" "air" "aim" "aid" "aha" "ago" "age" "aft" "ado" "add" "act" "ace" "abs" "aba") fontified t help-echo cider--help-echo) 3 8 (face font-lock-string-face cider-locals ("zoo" "zip" "you" "yet" "yes" "yep" "yen" "wye" "wry" "wow" "woo" "won" "wit" "wis" "win" "wig" "why" "who" "wet" "wee" "wed" "web" "way" "wax" "was" "war" "wan" "vow" "vie" "via" "vet" "vat" "van" "use" "two" "tug" "tub" "try" "toy" "tow" "tot" "tor" "top" "too" "ton" "tom" "toe" "tod" "tip" "tin" "tie" "thy" "the" "ten" "tee" "ted" "tea" "tax" "tat" "tar" "tap" "tan" "tam" "tag" "tad" "tab" "sup" "sun" "sum" "sue" "sub" "spy" "spa" "soy" "sow" "son" "sol" "sod" "sly" "sky" "ski" "six" "sit" "sis" "sir" "sip" "sin" "sim" "sic" "shy" "she" "sew" "set" "sen" "see" "sec" "sea" "say" "saw" "sat" "sap" "sal" "sag" "sae" "sad" "sac" "sab" "rye" "run" "rum" "rug" "rue" "rub" "row" "rot" "roe" "rod" "rob" "rip" "rim" "rig" "rid" "rib" "rev" "rep" "rem" "reg" "ref" "red" "ray" "raw" "rat" "rap" "ran" "ram" "raj" "rag" "rad" "put" "pup" "pub" "psi" "pro" "pot" "pop" "pol" "pod" "ply" "pit" "pip" "pin" "pie" "pic" "phi" "pew" "pet" "per" "pep" "pen" "peg" "pea" "pay" "paw" "pat" "pas" "par" "pap" "pan" "pam" "pal" "pac" "own" "owl" "owe" "out" "our" "ore" "orb" "opt" "ooh" "one" "ole" "old" "oil" "oft" "off" "odd" "oak" "nun" "now" "not" "nos" "nor" "nod" "nip" "nil" "new" "net" "neg" "neb" "nay" "nap" "nan" "nah" "nab" "mum" "mug" "mud" "mot" "mop" "mon" "mol" "mod" "mob" "mix" "mil" "mid" "met" "men" "meg" "med" "may" "max" "mat" "mas" "mar" "map" "man" "mag" "mad" "mac" "low" "lot" "log" "lit" "lie" "lid" "lib" "let" "lee" "led" "lea" "lay" "lax" "law" "lap" "lam" "lag" "lad" "lac" "lab" "kit" "kin" "kid" "key" "ken" "kay" "jun" "jug" "joy" "jog" "joe" "job" "jew" "jet" "jay" "jaw" "jar" "jam" "ivy" "its" "ion" "inn" "ink" "imp" "ill" "igg" "icy" "ice" "hut" "hum" "huh" "hue" "hub" "how" "hot" "hop" "hon" "hit" "his" "him" "hid" "hey" "her" "hen" "hem" "hay" "hat" "has" "ham" "had" "gym" "guy" "gut" "gun" "gum" "got" "gin" "gig" "get" "gem" "gel" "gee" "gas" "gap" "fur" "fun" "fry" "fox" "for" "fog" "foe" "fly" "flu" "fix" "fit" "fir" "fin" "fig" "few" "fen" "fee" "fed" "fay" "fax" "far" "fan" "fad" "fab" "eye" "eve" "eta" "era" "end" "emu" "elm" "elf" "ego" "egg" "eft" "ecu" "ebb" "eat" "ear" "dye" "duo" "dun" "dug" "due" "dub" "dry" "dot" "don" "doe" "doc" "dis" "dip" "din" "dim" "dig" "die" "did" "dew" "den" "del" "def" "dee" "day" "dan" "dam" "dal" "dad" "dab" "cut" "cup" "cue" "cub" "cry" "coy" "cox" "cow" "cot" "cos" "cor" "cop" "coo" "con" "col" "cod" "cob" "chi" "cat" "car" "cap" "can" "cam" "cad" "cab" "bye" "buy" "but" "bus" "bun" "bug" "bud" "boy" "box" "bow" "boo" "bog" "bob" "biz" "bit" "bis" "bio" "bin" "big" "bid" "bet" "ben" "bel" "beg" "bee" "bed" "bay" "bat" "bar" "ban" "bag" "bad" "baa" "aye" "axe" "awe" "ave" "ate" "asp" "ask" "ash" "art" "arm" "ark" "are" "arc" "apt" "app" "ape" "any" "ant" "and" "ana" "amp" "alt" "all" "ale" "ala" "air" "aim" "aid" "aha" "ago" "age" "aft" "ado" "add" "act" "ace" "abs" "aba") fontified t help-echo cider--help-echo) 8 9 (cider-locals ("zoo" "zip" "you" "yet" "yes" "yep" "yen" "wye" "wry" "wow" "woo" "won" "wit" "wis" "win" "wig" "why" "who" "wet" "wee" "wed" "web" "way" "wax" "was" "war" "wan" "vow" "vie" "via" "vet" "vat" "van" "use" "two" "tug" "tub" "try" "toy" "tow" "tot" "tor" "top" "too" "ton" "tom" "toe" "tod" "tip" "tin" "tie" "thy" "the" "ten" "tee" "ted" "tea" "tax" "tat" "tar" "tap" "tan" "tam" "tag" "tad" "tab" "sup" "sun" "sum" "sue" "sub" "spy" "spa" "soy" "sow" "son" "sol" "sod" "sly" "sky" "ski" "six" "sit" "sis" "sir" "sip" "sin" "sim" "sic" "shy" "she" "sew" "set" "sen" "see" "sec" "sea" "say" "saw" "sat" "sap" "sal" "sag" "sae" "sad" "sac" "sab" "rye" "run" "rum" "rug" "rue" "row" "rot" "roe" "rod" "rob" "rip" "rim" "rig" "rid" "rib" "rev" "rep" "rem" "reg" "ref" "red" "ray" "raw" "rat" "rap" "ran" "ram" "raj" "rag" "rad" "put" "pup" "pub" "psi" "pro" "pot" "pop" "pol" "pod" "ply" "pit" "pip" "pin" "pie" "pic" "phi" "pew" "pet" "per" "pep" "pen" "peg" "pea" "pay" "paw" "pat" "pas" "par" "pap" "pan" "pam" "pal" "pac" "own" "owl" "owe" "out" "our" "ore" "orb" "opt" "ooh" "one" "ole" "old" "oil" "oft" "off" "odd" "oak" "nun" "now" "not" "nos" "nor" "nod" "nip" "nil" "new" "net" "neg" "neb" "nay" "nap" "nan" "nah" "nab" "mum" "mug" "mud" "mot" "mop" "mon" "mol" "mod" "mob" "mix" "mil" "mid" "met" "men" "meg" "med" "may" "max" "mat" "mas" "mar" "map" "man" "mag" "mad" "mac" "low" "lot" "log" "lit" "lie" "lid" "lib" "let" "lee" "led" "lea" "lay" "lax" "law" "lap" "lam" "lag" "lad" "lac" "lab" "kit" "kin" "kid" "key" "ken" "kay" "jun" "jug" "joy" "jog" "joe" "job" "jew" "jet" "jay" "jaw" "jar" "jam" "ivy" "its" "ion" "inn" "ink" "imp" "ill" "igg" "icy" "ice" "hut" "hum" "huh" "hue" "hub" "how" "hot" "hop" "hon" "hit" "his" "him" "hid" "hey" "her" "hen" "hem" "hay" "hat" "has" "ham" "had" "gym" "guy" "gut" "gun" "gum" "got" "gin" "gig" "get" "gem" "gel" "gee" "gas" "gap" "fur" "fun" "fry" "fox" "for" "fog" "foe" "fly" "flu" "fix" "fit" "fir" "fin" "fig" "few" "fen" "fee" "fed" "fay" "fax" "far" "fan" "fad" "fab" "eye" "eve" "eta" "era" "end" "emu" "elm" "elf" "ego" "egg" "eft" "ecu" "ebb" "eat" "ear" "dye" "duo" "dun" "dug" "due" "dub" "dry" "dot" "don" "doe" "doc" "dis" "dip" "din" "dim" "dig" "die" "did" "dew" "den" "del" "def" "dee" "day" "dan" "dam" "dal" "dad" "dab" "cut" "cup" "cue" "cub" "cry" "coy" "cox" "cow" "cot" "cos" "cor" "cop" "coo" "con" "col" "cod" "cob" "chi" "cat" "car" "cap" "can" "cam" "cad" "cab" "bye" "buy" "but" "bus" "bun" "bug" "bud" "boy" "box" "bow" "boo" "bog" "bob" "biz" "bit" "bis" "bio" "bin" "big" "bid" "bet" "ben" "bel" "beg" "bee" "bed" "bay" "bat" "bar" "ban" "bag" "bad" "baa" "aye" "axe" "awe" "ave" "ate" "asp" "ask" "ash" "art" "arm" "ark" "are" "arc" "apt" "app" "ape" "any" "ant" "and" "ana" "amp" "alt" "all" "ale" "ala" "air" "aim" "aid" "aha" "ago" "age" "aft" "ado" "add" "act" "ace" "abs" "aba") fontified t help-echo cider--help-echo)) #("   \"pig\"
" 0 3 (cider-locals ("zoo" "zip" "you" "yet" "yes" "yep" "yen" "wye" "wry" "wow" "woo" "won" "wit" "wis" "win" "wig" "why" "who" "wet" "wee" "wed" "web" "way" "wax" "was" "war" "wan" "vow" "vie" "via" "vet" "vat" "van" "use" "two" "tug" "tub" "try" "toy" "tow" "tot" "tor" "top" "too" "ton" "tom" "toe" "tod" "tip" "tin" "tie" "thy" "the" "ten" "tee" "ted" "tea" "tax" "tat" "tar" "tap" "tan" "tam" "tag" "tad" "tab" "sup" "sun" "sum" "sue" "sub" "spy" "spa" "soy" "sow" "son" "sol" "sod" "sly" "sky" "ski" "six" "sit" "sis" "sir" "sip" "sin" "sim" "sic" "shy" "she" "sew" "set" "sen" "see" "sec" "sea" "say" "saw" "sat" "sap" "sal" "sag" "sae" "sad" "sac" "sab" "rye" "run" "rum" "rug" "rue" "rub" "row" "rot" "roe" "rod" "rob" "rip" "rim" "rig" "rid" "rib" "rev" "rep" "rem" "reg" "ref" "red" "ray" "raw" "rat" "rap" "ran" "ram" "raj" "rag" "rad" "put" "pup" "pub" "psi" "pro" "pot" "pop" "pol" "pod" "ply" "pit" "pip" "pin" "pig" "pie" "pic" "phi" "pew" "pet" "per" "pep" "pen" "peg" "pea" "pay" "paw" "pat" "pas" "par" "pap" "pan" "pam" "pal" "pac" "own" "owl" "owe" "out" "our" "ore" "orb" "opt" "ooh" "one" "ole" "old" "oil" "oft" "off" "odd" "oak" "nun" "now" "not" "nos" "nor" "nod" "nip" "nil" "new" "net" "neg" "neb" "nay" "nap" "nan" "nah" "nab" "mum" "mug" "mud" "mot" "mop" "mon" "mol" "mod" "mob" "mix" "mil" "mid" "met" "men" "meg" "med" "may" "max" "mat" "mas" "mar" "map" "man" "mag" "mad" "mac" "low" "lot" "log" "lit" "lie" "lid" "lib" "let" "lee" "led" "lea" "lay" "lax" "law" "lap" "lam" "lag" "lad" "lac" "lab" "kit" "kin" "kid" "key" "ken" "kay" "jun" "jug" "joy" "jog" "joe" "job" "jew" "jet" "jay" "jaw" "jar" "jam" "ivy" "its" "ion" "inn" "ink" "imp" "ill" "igg" "icy" "ice" "hut" "hum" "huh" "hue" "hub" "how" "hot" "hop" "hon" "hit" "his" "him" "hid" "hey" "her" "hen" "hem" "hay" "hat" "has" "ham" "had" "gym" "guy" "gut" "gun" "gum" "got" "gin" "gig" "get" "gem" "gel" "gee" "gas" "gap" "fur" "fun" "fry" "fox" "for" "fog" "foe" "fly" "flu" "fix" "fit" "fir" "fin" "fig" "few" "fen" "fee" "fed" "fay" "fax" "far" "fan" "fad" "fab" "eye" "eve" "eta" "era" "end" "emu" "elm" "elf" "ego" "egg" "eft" "ecu" "ebb" "eat" "ear" "dye" "duo" "dun" "dug" "due" "dub" "dry" "dot" "don" "doe" "doc" "dis" "dip" "din" "dim" "dig" "die" "did" "dew" "den" "del" "def" "dee" "day" "dan" "dam" "dal" "dad" "dab" "cut" "cup" "cue" "cub" "cry" "coy" "cox" "cow" "cot" "cos" "cor" "cop" "coo" "con" "col" "cod" "cob" "chi" "cat" "car" "cap" "can" "cam" "cad" "cab" "bye" "buy" "but" "bus" "bun" "bug" "bud" "boy" "box" "bow" "boo" "bog" "bob" "biz" "bit" "bis" "bio" "bin" "big" "bid" "bet" "ben" "bel" "beg" "bee" "bed" "bay" "bat" "bar" "ban" "bag" "bad" "baa" "aye" "axe" "awe" "ave" "ate" "asp" "ask" "ash" "art" "arm" "ark" "are" "arc" "apt" "app" "ape" "any" "ant" "and" "ana" "amp" "alt" "all" "ale" "ala" "air" "aim" "aid" "aha" "ago" "age" "aft" "ado" "add" "act" "ace" "abs" "aba") fontified t help-echo cider--help-echo) 3 8 (face font-lock-string-face cider-locals ("zoo" "zip" "you" "yet" "yes" "yep" "yen" "wye" "wry" "wow" "woo" "won" "wit" "wis" "win" "wig" "why" "who" "wet" "wee" "wed" "web" "way" "wax" "was" "war" "wan" "vow" "vie" "via" "vet" "vat" "van" "use" "two" "tug" "tub" "try" "toy" "tow" "tot" "tor" "top" "too" "ton" "tom" "toe" "tod" "tip" "tin" "tie" "thy" "the" "ten" "tee" "ted" "tea" "tax" "tat" "tar" "tap" "tan" "tam" "tag" "tad" "tab" "sup" "sun" "sum" "sue" "sub" "spy" "spa" "soy" "sow" "son" "sol" "sod" "sly" "sky" "ski" "six" "sit" "sis" "sir" "sip" "sin" "sim" "sic" "shy" "she" "sew" "set" "sen" "see" "sec" "sea" "say" "saw" "sat" "sap" "sal" "sag" "sae" "sad" "sac" "sab" "rye" "run" "rum" "rug" "rue" "rub" "row" "rot" "roe" "rod" "rob" "rip" "rim" "rig" "rid" "rib" "rev" "rep" "rem" "reg" "ref" "red" "ray" "raw" "rat" "rap" "ran" "ram" "raj" "rag" "rad" "put" "pup" "pub" "psi" "pro" "pot" "pop" "pol" "pod" "ply" "pit" "pip" "pin" "pig" "pie" "pic" "phi" "pew" "pet" "per" "pep" "pen" "peg" "pea" "pay" "paw" "pat" "pas" "par" "pap" "pan" "pam" "pal" "pac" "own" "owl" "owe" "out" "our" "ore" "orb" "opt" "ooh" "one" "ole" "old" "oil" "oft" "off" "odd" "oak" "nun" "now" "not" "nos" "nor" "nod" "nip" "nil" "new" "net" "neg" "neb" "nay" "nap" "nan" "nah" "nab" "mum" "mug" "mud" "mot" "mop" "mon" "mol" "mod" "mob" "mix" "mil" "mid" "met" "men" "meg" "med" "may" "max" "mat" "mas" "mar" "map" "man" "mag" "mad" "mac" "low" "lot" "log" "lit" "lie" "lid" "lib" "let" "lee" "led" "lea" "lay" "lax" "law" "lap" "lam" "lag" "lad" "lac" "lab" "kit" "kin" "kid" "key" "ken" "kay" "jun" "jug" "joy" "jog" "joe" "job" "jew" "jet" "jay" "jaw" "jar" "jam" "ivy" "its" "ion" "inn" "ink" "imp" "ill" "igg" "icy" "ice" "hut" "hum" "huh" "hue" "hub" "how" "hot" "hop" "hon" "hit" "his" "him" "hid" "hey" "her" "hen" "hem" "hay" "hat" "has" "ham" "had" "gym" "guy" "gut" "gun" "gum" "got" "gin" "gig" "get" "gem" "gel" "gee" "gas" "gap" "fur" "fun" "fry" "fox" "for" "fog" "foe" "fly" "flu" "fix" "fit" "fir" "fin" "fig" "few" "fen" "fee" "fed" "fay" "fax" "far" "fan" "fad" "fab" "eye" "eve" "eta" "era" "end" "emu" "elm" "elf" "ego" "egg" "eft" "ecu" "ebb" "eat" "ear" "dye" "duo" "dun" "dug" "due" "dub" "dry" "dot" "don" "doe" "doc" "dis" "dip" "din" "dim" "dig" "die" "did" "dew" "den" "del" "def" "dee" "day" "dan" "dam" "dal" "dad" "dab" "cut" "cup" "cue" "cub" "cry" "coy" "cox" "cow" "cot" "cos" "cor" "cop" "coo" "con" "col" "cod" "cob" "chi" "cat" "car" "cap" "can" "cam" "cad" "cab" "bye" "buy" "but" "bus" "bun" "bug" "bud" "boy" "box" "bow" "boo" "bog" "bob" "biz" "bit" "bis" "bio" "bin" "big" "bid" "bet" "ben" "bel" "beg" "bee" "bed" "bay" "bat" "bar" "ban" "bag" "bad" "baa" "aye" "axe" "awe" "ave" "ate" "asp" "ask" "ash" "art" "arm" "ark" "are" "arc" "apt" "app" "ape" "any" "ant" "and" "ana" "amp" "alt" "all" "ale" "ala" "air" "aim" "aid" "aha" "ago" "age" "aft" "ado" "add" "act" "ace" "abs" "aba") fontified t help-echo cider--help-echo) 8 9 (cider-locals ("zoo" "zip" "you" "yet" "yes" "yep" "yen" "wye" "wry" "wow" "woo" "won" "wit" "wis" "win" "wig" "why" "who" "wet" "wee" "wed" "web" "way" "wax" "was" "war" "wan" "vow" "vie" "via" "vet" "vat" "van" "use" "two" "tug" "tub" "try" "toy" "tow" "tot" "tor" "top" "too" "ton" "tom" "toe" "tod" "tip" "tin" "tie" "thy" "the" "ten" "tee" "ted" "tea" "tax" "tat" "tar" "tap" "tan" "tam" "tag" "tad" "tab" "sup" "sun" "sum" "sue" "sub" "spy" "spa" "soy" "sow" "son" "sol" "sod" "sly" "sky" "ski" "six" "sit" "sis" "sir" "sip" "sin" "sim" "sic" "shy" "she" "sew" "set" "sen" "see" "sec" "sea" "say" "saw" "sat" "sap" "sal" "sag" "sae" "sad" "sac" "sab" "rye" "run" "rum" "rug" "rue" "rub" "row" "rot" "roe" "rod" "rob" "rip" "rim" "rig" "rid" "rib" "rev" "rep" "rem" "reg" "ref" "red" "ray" "raw" "rat" "rap" "ran" "ram" "raj" "rag" "rad" "put" "pup" "pub" "psi" "pro" "pot" "pop" "pol" "pod" "ply" "pit" "pip" "pin" "pie" "pic" "phi" "pew" "pet" "per" "pep" "pen" "peg" "pea" "pay" "paw" "pat" "pas" "par" "pap" "pan" "pam" "pal" "pac" "own" "owl" "owe" "out" "our" "ore" "orb" "opt" "ooh" "one" "ole" "old" "oil" "oft" "off" "odd" "oak" "nun" "now" "not" "nos" "nor" "nod" "nip" "nil" "new" "net" "neg" "neb" "nay" "nap" "nan" "nah" "nab" "mum" "mug" "mud" "mot" "mop" "mon" "mol" "mod" "mob" "mix" "mil" "mid" "met" "men" "meg" "med" "may" "max" "mat" "mas" "mar" "map" "man" "mag" "mad" "mac" "low" "lot" "log" "lit" "lie" "lid" "lib" "let" "lee" "led" "lea" "lay" "lax" "law" "lap" "lam" "lag" "lad" "lac" "lab" "kit" "kin" "kid" "key" "ken" "kay" "jun" "jug" "joy" "jog" "joe" "job" "jew" "jet" "jay" "jaw" "jar" "jam" "ivy" "its" "ion" "inn" "ink" "imp" "ill" "igg" "icy" "ice" "hut" "hum" "huh" "hue" "hub" "how" "hot" "hop" "hon" "hit" "his" "him" "hid" "hey" "her" "hen" "hem" "hay" "hat" "has" "ham" "had" "gym" "guy" "gut" "gun" "gum" "got" "gin" "gig" "get" "gem" "gel" "gee" "gas" "gap" "fur" "fun" "fry" "fox" "for" "fog" "foe" "fly" "flu" "fix" "fit" "fir" "fin" "fig" "few" "fen" "fee" "fed" "fay" "fax" "far" "fan" "fad" "fab" "eye" "eve" "eta" "era" "end" "emu" "elm" "elf" "ego" "egg" "eft" "ecu" "ebb" "eat" "ear" "dye" "duo" "dun" "dug" "due" "dub" "dry" "dot" "don" "doe" "doc" "dis" "dip" "din" "dim" "dig" "die" "did" "dew" "den" "del" "def" "dee" "day" "dan" "dam" "dal" "dad" "dab" "cut" "cup" "cue" "cub" "cry" "coy" "cox" "cow" "cot" "cos" "cor" "cop" "coo" "con" "col" "cod" "cob" "chi" "cat" "car" "cap" "can" "cam" "cad" "cab" "bye" "buy" "but" "bus" "bun" "bug" "bud" "boy" "box" "bow" "boo" "bog" "bob" "biz" "bit" "bis" "bio" "bin" "big" "bid" "bet" "ben" "bel" "beg" "bee" "bed" "bay" "bat" "bar" "ban" "bag" "bad" "baa" "aye" "axe" "awe" "ave" "ate" "asp" "ask" "ash" "art" "arm" "ark" "are" "arc" "apt" "app" "ape" "any" "ant" "and" "ana" "amp" "alt" "all" "ale" "ala" "air" "aim" "aid" "aha" "ago" "age" "aft" "ado" "add" "act" "ace" "abs" "aba") fontified t help-echo cider--help-echo)) #("   \"pad\"
" 0 3 (cider-locals ("zoo" "zip" "you" "yet" "yes" "yep" "yen" "wye" "wry" "wow" "woo" "won" "wit" "wis" "win" "wig" "why" "who" "wet" "wee" "wed" "web" "way" "wax" "was" "war" "wan" "vow" "vie" "via" "vet" "vat" "van" "use" "two" "tug" "tub" "try" "toy" "tow" "tot" "tor" "top" "too" "ton" "tom" "toe" "tod" "tip" "tin" "tie" "thy" "the" "ten" "tee" "ted" "tea" "tax" "tat" "tar" "tap" "tan" "tam" "tag" "tad" "tab" "sup" "sun" "sum" "sue" "sub" "spy" "spa" "soy" "sow" "son" "sol" "sod" "sly" "sky" "ski" "six" "sit" "sis" "sir" "sip" "sin" "sim" "sic" "shy" "she" "sew" "set" "sen" "see" "sec" "sea" "say" "saw" "sat" "sap" "sal" "sag" "sae" "sad" "sac" "sab" "rye" "run" "rum" "rug" "rue" "rub" "row" "rot" "roe" "rod" "rob" "rip" "rim" "rig" "rid" "rib" "rev" "rep" "rem" "reg" "ref" "red" "ray" "raw" "rat" "rap" "ran" "ram" "raj" "rag" "rad" "put" "pup" "pub" "psi" "pro" "pot" "pop" "pol" "pod" "ply" "pit" "pip" "pin" "pig" "pie" "pic" "phi" "pew" "pet" "per" "pep" "pen" "peg" "pea" "pay" "paw" "pat" "pas" "par" "pap" "pan" "pam" "pal" "pad" "pac" "own" "owl" "owe" "out" "our" "ore" "orb" "opt" "ooh" "one" "ole" "old" "oil" "oft" "off" "odd" "oak" "nun" "now" "not" "nos" "nor" "nod" "nip" "nil" "new" "net" "neg" "neb" "nay" "nap" "nan" "nah" "nab" "mum" "mug" "mud" "mot" "mop" "mon" "mol" "mod" "mob" "mix" "mil" "mid" "met" "men" "meg" "med" "may" "max" "mat" "mas" "mar" "map" "man" "mag" "mad" "mac" "low" "lot" "log" "lit" "lie" "lid" "lib" "let" "lee" "led" "lea" "lay" "lax" "law" "lap" "lam" "lag" "lad" "lac" "lab" "kit" "kin" "kid" "key" "ken" "kay" "jun" "jug" "joy" "jog" "joe" "job" "jew" "jet" "jay" "jaw" "jar" "jam" "ivy" "its" "ion" "inn" "ink" "imp" "ill" "igg" "icy" "ice" "hut" "hum" "huh" "hue" "hub" "how" "hot" "hop" "hon" "hit" "his" "him" "hid" "hey" "her" "hen" "hem" "hay" "hat" "has" "ham" "had" "gym" "guy" "gut" "gun" "gum" "got" "gin" "gig" "get" "gem" "gel" "gee" "gas" "gap" "fur" "fun" "fry" "fox" "for" "fog" "foe" "fly" "flu" "fix" "fit" "fir" "fin" "fig" "few" "fen" "fee" "fed" "fay" "fax" "far" "fan" "fad" "fab" "eye" "eve" "eta" "era" "end" "emu" "elm" "elf" "ego" "egg" "eft" "ecu" "ebb" "eat" "ear" "dye" "duo" "dun" "dug" "due" "dub" "dry" "dot" "don" "doe" "doc" "dis" "dip" "din" "dim" "dig" "die" "did" "dew" "den" "del" "def" "dee" "day" "dan" "dam" "dal" "dad" "dab" "cut" "cup" "cue" "cub" "cry" "coy" "cox" "cow" "cot" "cos" "cor" "cop" "coo" "con" "col" "cod" "cob" "chi" "cat" "car" "cap" "can" "cam" "cad" "cab" "bye" "buy" "but" "bus" "bun" "bug" "bud" "boy" "box" "bow" "boo" "bog" "bob" "biz" "bit" "bis" "bio" "bin" "big" "bid" "bet" "ben" "bel" "beg" "bee" "bed" "bay" "bat" "bar" "ban" "bag" "bad" "baa" "aye" "axe" "awe" "ave" "ate" "asp" "ask" "ash" "art" "arm" "ark" "are" "arc" "apt" "app" "ape" "any" "ant" "and" "ana" "amp" "alt" "all" "ale" "ala" "air" "aim" "aid" "aha" "ago" "age" "aft" "ado" "add" "act" "ace" "abs" "aba") fontified t help-echo cider--help-echo) 3 8 (face font-lock-string-face cider-locals ("zoo" "zip" "you" "yet" "yes" "yep" "yen" "wye" "wry" "wow" "woo" "won" "wit" "wis" "win" "wig" "why" "who" "wet" "wee" "wed" "web" "way" "wax" "was" "war" "wan" "vow" "vie" "via" "vet" "vat" "van" "use" "two" "tug" "tub" "try" "toy" "tow" "tot" "tor" "top" "too" "ton" "tom" "toe" "tod" "tip" "tin" "tie" "thy" "the" "ten" "tee" "ted" "tea" "tax" "tat" "tar" "tap" "tan" "tam" "tag" "tad" "tab" "sup" "sun" "sum" "sue" "sub" "spy" "spa" "soy" "sow" "son" "sol" "sod" "sly" "sky" "ski" "six" "sit" "sis" "sir" "sip" "sin" "sim" "sic" "shy" "she" "sew" "set" "sen" "see" "sec" "sea" "say" "saw" "sat" "sap" "sal" "sag" "sae" "sad" "sac" "sab" "rye" "run" "rum" "rug" "rue" "rub" "row" "rot" "roe" "rod" "rob" "rip" "rim" "rig" "rid" "rib" "rev" "rep" "rem" "reg" "ref" "red" "ray" "raw" "rat" "rap" "ran" "ram" "raj" "rag" "rad" "put" "pup" "pub" "psi" "pro" "pot" "pop" "pol" "pod" "ply" "pit" "pip" "pin" "pig" "pie" "pic" "phi" "pew" "pet" "per" "pep" "pen" "peg" "pea" "pay" "paw" "pat" "pas" "par" "pap" "pan" "pam" "pal" "pad" "pac" "own" "owl" "owe" "out" "our" "ore" "orb" "opt" "ooh" "one" "ole" "old" "oil" "oft" "off" "odd" "oak" "nun" "now" "not" "nos" "nor" "nod" "nip" "nil" "new" "net" "neg" "neb" "nay" "nap" "nan" "nah" "nab" "mum" "mug" "mud" "mot" "mop" "mon" "mol" "mod" "mob" "mix" "mil" "mid" "met" "men" "meg" "med" "may" "max" "mat" "mas" "mar" "map" "man" "mag" "mad" "mac" "low" "lot" "log" "lit" "lie" "lid" "lib" "let" "lee" "led" "lea" "lay" "lax" "law" "lap" "lam" "lag" "lad" "lac" "lab" "kit" "kin" "kid" "key" "ken" "kay" "jun" "jug" "joy" "jog" "joe" "job" "jew" "jet" "jay" "jaw" "jar" "jam" "ivy" "its" "ion" "inn" "ink" "imp" "ill" "igg" "icy" "ice" "hut" "hum" "huh" "hue" "hub" "how" "hot" "hop" "hon" "hit" "his" "him" "hid" "hey" "her" "hen" "hem" "hay" "hat" "has" "ham" "had" "gym" "guy" "gut" "gun" "gum" "got" "gin" "gig" "get" "gem" "gel" "gee" "gas" "gap" "fur" "fun" "fry" "fox" "for" "fog" "foe" "fly" "flu" "fix" "fit" "fir" "fin" "fig" "few" "fen" "fee" "fed" "fay" "fax" "far" "fan" "fad" "fab" "eye" "eve" "eta" "era" "end" "emu" "elm" "elf" "ego" "egg" "eft" "ecu" "ebb" "eat" "ear" "dye" "duo" "dun" "dug" "due" "dub" "dry" "dot" "don" "doe" "doc" "dis" "dip" "din" "dim" "dig" "die" "did" "dew" "den" "del" "def" "dee" "day" "dan" "dam" "dal" "dad" "dab" "cut" "cup" "cue" "cub" "cry" "coy" "cox" "cow" "cot" "cos" "cor" "cop" "coo" "con" "col" "cod" "cob" "chi" "cat" "car" "cap" "can" "cam" "cad" "cab" "bye" "buy" "but" "bus" "bun" "bug" "bud" "boy" "box" "bow" "boo" "bog" "bob" "biz" "bit" "bis" "bio" "bin" "big" "bid" "bet" "ben" "bel" "beg" "bee" "bed" "bay" "bat" "bar" "ban" "bag" "bad" "baa" "aye" "axe" "awe" "ave" "ate" "asp" "ask" "ash" "art" "arm" "ark" "are" "arc" "apt" "app" "ape" "any" "ant" "and" "ana" "amp" "alt" "all" "ale" "ala" "air" "aim" "aid" "aha" "ago" "age" "aft" "ado" "add" "act" "ace" "abs" "aba") fontified t help-echo cider--help-echo) 8 9 (cider-locals ("zoo" "zip" "you" "yet" "yes" "yep" "yen" "wye" "wry" "wow" "woo" "won" "wit" "wis" "win" "wig" "why" "who" "wet" "wee" "wed" "web" "way" "wax" "was" "war" "wan" "vow" "vie" "via" "vet" "vat" "van" "use" "two" "tug" "tub" "try" "toy" "tow" "tot" "tor" "top" "too" "ton" "tom" "toe" "tod" "tip" "tin" "tie" "thy" "the" "ten" "tee" "ted" "tea" "tax" "tat" "tar" "tap" "tan" "tam" "tag" "tad" "tab" "sup" "sun" "sum" "sue" "sub" "spy" "spa" "soy" "sow" "son" "sol" "sod" "sly" "sky" "ski" "six" "sit" "sis" "sir" "sip" "sin" "sim" "sic" "shy" "she" "sew" "set" "sen" "see" "sec" "sea" "say" "saw" "sat" "sap" "sal" "sag" "sae" "sad" "sac" "sab" "rye" "run" "rum" "rug" "rue" "rub" "row" "rot" "roe" "rod" "rob" "rip" "rim" "rig" "rid" "rib" "rev" "rep" "rem" "reg" "ref" "red" "ray" "raw" "rat" "rap" "ran" "ram" "raj" "rag" "rad" "put" "pup" "pub" "psi" "pro" "pot" "pop" "pol" "pod" "ply" "pit" "pip" "pin" "pig" "pie" "pic" "phi" "pew" "pet" "per" "pep" "pen" "peg" "pea" "pay" "paw" "pat" "pas" "par" "pap" "pan" "pam" "pal" "pac" "own" "owl" "owe" "out" "our" "ore" "orb" "opt" "ooh" "one" "ole" "old" "oil" "oft" "off" "odd" "oak" "nun" "now" "not" "nos" "nor" "nod" "nip" "nil" "new" "net" "neg" "neb" "nay" "nap" "nan" "nah" "nab" "mum" "mug" "mud" "mot" "mop" "mon" "mol" "mod" "mob" "mix" "mil" "mid" "met" "men" "meg" "med" "may" "max" "mat" "mas" "mar" "map" "man" "mag" "mad" "mac" "low" "lot" "log" "lit" "lie" "lid" "lib" "let" "lee" "led" "lea" "lay" "lax" "law" "lap" "lam" "lag" "lad" "lac" "lab" "kit" "kin" "kid" "key" "ken" "kay" "jun" "jug" "joy" "jog" "joe" "job" "jew" "jet" "jay" "jaw" "jar" "jam" "ivy" "its" "ion" "inn" "ink" "imp" "ill" "igg" "icy" "ice" "hut" "hum" "huh" "hue" "hub" "how" "hot" "hop" "hon" "hit" "his" "him" "hid" "hey" "her" "hen" "hem" "hay" "hat" "has" "ham" "had" "gym" "guy" "gut" "gun" "gum" "got" "gin" "gig" "get" "gem" "gel" "gee" "gas" "gap" "fur" "fun" "fry" "fox" "for" "fog" "foe" "fly" "flu" "fix" "fit" "fir" "fin" "fig" "few" "fen" "fee" "fed" "fay" "fax" "far" "fan" "fad" "fab" "eye" "eve" "eta" "era" "end" "emu" "elm" "elf" "ego" "egg" "eft" "ecu" "ebb" "eat" "ear" "dye" "duo" "dun" "dug" "due" "dub" "dry" "dot" "don" "doe" "doc" "dis" "dip" "din" "dim" "dig" "die" "did" "dew" "den" "del" "def" "dee" "day" "dan" "dam" "dal" "dad" "dab" "cut" "cup" "cue" "cub" "cry" "coy" "cox" "cow" "cot" "cos" "cor" "cop" "coo" "con" "col" "cod" "cob" "chi" "cat" "car" "cap" "can" "cam" "cad" "cab" "bye" "buy" "but" "bus" "bun" "bug" "bud" "boy" "box" "bow" "boo" "bog" "bob" "biz" "bit" "bis" "bio" "bin" "big" "bid" "bet" "ben" "bel" "beg" "bee" "bed" "bay" "bat" "bar" "ban" "bag" "bad" "baa" "aye" "axe" "awe" "ave" "ate" "asp" "ask" "ash" "art" "arm" "ark" "are" "arc" "apt" "app" "ape" "any" "ant" "and" "ana" "amp" "alt" "all" "ale" "ala" "air" "aim" "aid" "aha" "ago" "age" "aft" "ado" "add" "act" "ace" "abs" "aba") fontified t help-echo cider--help-echo)) #("   \"nut\"
" 0 3 (cider-locals ("zoo" "zip" "you" "yet" "yes" "yep" "yen" "wye" "wry" "wow" "woo" "won" "wit" "wis" "win" "wig" "why" "who" "wet" "wee" "wed" "web" "way" "wax" "was" "war" "wan" "vow" "vie" "via" "vet" "vat" "van" "use" "two" "tug" "tub" "try" "toy" "tow" "tot" "tor" "top" "too" "ton" "tom" "toe" "tod" "tip" "tin" "tie" "thy" "the" "ten" "tee" "ted" "tea" "tax" "tat" "tar" "tap" "tan" "tam" "tag" "tad" "tab" "sup" "sun" "sum" "sue" "sub" "spy" "spa" "soy" "sow" "son" "sol" "sod" "sly" "sky" "ski" "six" "sit" "sis" "sir" "sip" "sin" "sim" "sic" "shy" "she" "sew" "set" "sen" "see" "sec" "sea" "say" "saw" "sat" "sap" "sal" "sag" "sae" "sad" "sac" "sab" "rye" "run" "rum" "rug" "rue" "rub" "row" "rot" "roe" "rod" "rob" "rip" "rim" "rig" "rid" "rib" "rev" "rep" "rem" "reg" "ref" "red" "ray" "raw" "rat" "rap" "ran" "ram" "raj" "rag" "rad" "put" "pup" "pub" "psi" "pro" "pot" "pop" "pol" "pod" "ply" "pit" "pip" "pin" "pig" "pie" "pic" "phi" "pew" "pet" "per" "pep" "pen" "peg" "pea" "pay" "paw" "pat" "pas" "par" "pap" "pan" "pam" "pal" "pad" "pac" "own" "owl" "owe" "out" "our" "ore" "orb" "opt" "ooh" "one" "ole" "old" "oil" "oft" "off" "odd" "oak" "nut" "nun" "now" "not" "nos" "nor" "nod" "nip" "nil" "new" "net" "neg" "neb" "nay" "nap" "nan" "nah" "nab" "mum" "mug" "mud" "mot" "mop" "mon" "mol" "mod" "mob" "mix" "mil" "mid" "met" "men" "meg" "med" "may" "max" "mat" "mas" "mar" "map" "man" "mag" "mad" "mac" "low" "lot" "log" "lit" "lie" "lid" "lib" "let" "lee" "led" "lea" "lay" "lax" "law" "lap" "lam" "lag" "lad" "lac" "lab" "kit" "kin" "kid" "key" "ken" "kay" "jun" "jug" "joy" "jog" "joe" "job" "jew" "jet" "jay" "jaw" "jar" "jam" "ivy" "its" "ion" "inn" "ink" "imp" "ill" "igg" "icy" "ice" "hut" "hum" "huh" "hue" "hub" "how" "hot" "hop" "hon" "hit" "his" "him" "hid" "hey" "her" "hen" "hem" "hay" "hat" "has" "ham" "had" "gym" "guy" "gut" "gun" "gum" "got" "gin" "gig" "get" "gem" "gel" "gee" "gas" "gap" "fur" "fun" "fry" "fox" "for" "fog" "foe" "fly" "flu" "fix" "fit" "fir" "fin" "fig" "few" "fen" "fee" "fed" "fay" "fax" "far" "fan" "fad" "fab" "eye" "eve" "eta" "era" "end" "emu" "elm" "elf" "ego" "egg" "eft" "ecu" "ebb" "eat" "ear" "dye" "duo" "dun" "dug" "due" "dub" "dry" "dot" "don" "doe" "doc" "dis" "dip" "din" "dim" "dig" "die" "did" "dew" "den" "del" "def" "dee" "day" "dan" "dam" "dal" "dad" "dab" "cut" "cup" "cue" "cub" "cry" "coy" "cox" "cow" "cot" "cos" "cor" "cop" "coo" "con" "col" "cod" "cob" "chi" "cat" "car" "cap" "can" "cam" "cad" "cab" "bye" "buy" "but" "bus" "bun" "bug" "bud" "boy" "box" "bow" "boo" "bog" "bob" "biz" "bit" "bis" "bio" "bin" "big" "bid" "bet" "ben" "bel" "beg" "bee" "bed" "bay" "bat" "bar" "ban" "bag" "bad" "baa" "aye" "axe" "awe" "ave" "ate" "asp" "ask" "ash" "art" "arm" "ark" "are" "arc" "apt" "app" "ape" "any" "ant" "and" "ana" "amp" "alt" "all" "ale" "ala" "air" "aim" "aid" "aha" "ago" "age" "aft" "ado" "add" "act" "ace" "abs" "aba") fontified t help-echo cider--help-echo) 3 8 (face font-lock-string-face cider-locals ("zoo" "zip" "you" "yet" "yes" "yep" "yen" "wye" "wry" "wow" "woo" "won" "wit" "wis" "win" "wig" "why" "who" "wet" "wee" "wed" "web" "way" "wax" "was" "war" "wan" "vow" "vie" "via" "vet" "vat" "van" "use" "two" "tug" "tub" "try" "toy" "tow" "tot" "tor" "top" "too" "ton" "tom" "toe" "tod" "tip" "tin" "tie" "thy" "the" "ten" "tee" "ted" "tea" "tax" "tat" "tar" "tap" "tan" "tam" "tag" "tad" "tab" "sup" "sun" "sum" "sue" "sub" "spy" "spa" "soy" "sow" "son" "sol" "sod" "sly" "sky" "ski" "six" "sit" "sis" "sir" "sip" "sin" "sim" "sic" "shy" "she" "sew" "set" "sen" "see" "sec" "sea" "say" "saw" "sat" "sap" "sal" "sag" "sae" "sad" "sac" "sab" "rye" "run" "rum" "rug" "rue" "rub" "row" "rot" "roe" "rod" "rob" "rip" "rim" "rig" "rid" "rib" "rev" "rep" "rem" "reg" "ref" "red" "ray" "raw" "rat" "rap" "ran" "ram" "raj" "rag" "rad" "put" "pup" "pub" "psi" "pro" "pot" "pop" "pol" "pod" "ply" "pit" "pip" "pin" "pig" "pie" "pic" "phi" "pew" "pet" "per" "pep" "pen" "peg" "pea" "pay" "paw" "pat" "pas" "par" "pap" "pan" "pam" "pal" "pad" "pac" "own" "owl" "owe" "out" "our" "ore" "orb" "opt" "ooh" "one" "ole" "old" "oil" "oft" "off" "odd" "oak" "nut" "nun" "now" "not" "nos" "nor" "nod" "nip" "nil" "new" "net" "neg" "neb" "nay" "nap" "nan" "nah" "nab" "mum" "mug" "mud" "mot" "mop" "mon" "mol" "mod" "mob" "mix" "mil" "mid" "met" "men" "meg" "med" "may" "max" "mat" "mas" "mar" "map" "man" "mag" "mad" "mac" "low" "lot" "log" "lit" "lie" "lid" "lib" "let" "lee" "led" "lea" "lay" "lax" "law" "lap" "lam" "lag" "lad" "lac" "lab" "kit" "kin" "kid" "key" "ken" "kay" "jun" "jug" "joy" "jog" "joe" "job" "jew" "jet" "jay" "jaw" "jar" "jam" "ivy" "its" "ion" "inn" "ink" "imp" "ill" "igg" "icy" "ice" "hut" "hum" "huh" "hue" "hub" "how" "hot" "hop" "hon" "hit" "his" "him" "hid" "hey" "her" "hen" "hem" "hay" "hat" "has" "ham" "had" "gym" "guy" "gut" "gun" "gum" "got" "gin" "gig" "get" "gem" "gel" "gee" "gas" "gap" "fur" "fun" "fry" "fox" "for" "fog" "foe" "fly" "flu" "fix" "fit" "fir" "fin" "fig" "few" "fen" "fee" "fed" "fay" "fax" "far" "fan" "fad" "fab" "eye" "eve" "eta" "era" "end" "emu" "elm" "elf" "ego" "egg" "eft" "ecu" "ebb" "eat" "ear" "dye" "duo" "dun" "dug" "due" "dub" "dry" "dot" "don" "doe" "doc" "dis" "dip" "din" "dim" "dig" "die" "did" "dew" "den" "del" "def" "dee" "day" "dan" "dam" "dal" "dad" "dab" "cut" "cup" "cue" "cub" "cry" "coy" "cox" "cow" "cot" "cos" "cor" "cop" "coo" "con" "col" "cod" "cob" "chi" "cat" "car" "cap" "can" "cam" "cad" "cab" "bye" "buy" "but" "bus" "bun" "bug" "bud" "boy" "box" "bow" "boo" "bog" "bob" "biz" "bit" "bis" "bio" "bin" "big" "bid" "bet" "ben" "bel" "beg" "bee" "bed" "bay" "bat" "bar" "ban" "bag" "bad" "baa" "aye" "axe" "awe" "ave" "ate" "asp" "ask" "ash" "art" "arm" "ark" "are" "arc" "apt" "app" "ape" "any" "ant" "and" "ana" "amp" "alt" "all" "ale" "ala" "air" "aim" "aid" "aha" "ago" "age" "aft" "ado" "add" "act" "ace" "abs" "aba") fontified t help-echo cider--help-echo) 8 9 (cider-locals ("zoo" "zip" "you" "yet" "yes" "yep" "yen" "wye" "wry" "wow" "woo" "won" "wit" "wis" "win" "wig" "why" "who" "wet" "wee" "wed" "web" "way" "wax" "was" "war" "wan" "vow" "vie" "via" "vet" "vat" "van" "use" "two" "tug" "tub" "try" "toy" "tow" "tot" "tor" "top" "too" "ton" "tom" "toe" "tod" "tip" "tin" "tie" "thy" "the" "ten" "tee" "ted" "tea" "tax" "tat" "tar" "tap" "tan" "tam" "tag" "tad" "tab" "sup" "sun" "sum" "sue" "sub" "spy" "spa" "soy" "sow" "son" "sol" "sod" "sly" "sky" "ski" "six" "sit" "sis" "sir" "sip" "sin" "sim" "sic" "shy" "she" "sew" "set" "sen" "see" "sec" "sea" "say" "saw" "sat" "sap" "sal" "sag" "sae" "sad" "sac" "sab" "rye" "run" "rum" "rug" "rue" "rub" "row" "rot" "roe" "rod" "rob" "rip" "rim" "rig" "rid" "rib" "rev" "rep" "rem" "reg" "ref" "red" "ray" "raw" "rat" "rap" "ran" "ram" "raj" "rag" "rad" "put" "pup" "pub" "psi" "pro" "pot" "pop" "pol" "pod" "ply" "pit" "pip" "pin" "pig" "pie" "pic" "phi" "pew" "pet" "per" "pep" "pen" "peg" "pea" "pay" "paw" "pat" "pas" "par" "pap" "pan" "pam" "pal" "pad" "pac" "own" "owl" "owe" "out" "our" "ore" "orb" "opt" "ooh" "one" "ole" "old" "oil" "oft" "off" "odd" "oak" "nun" "now" "not" "nos" "nor" "nod" "nip" "nil" "new" "net" "neg" "neb" "nay" "nap" "nan" "nah" "nab" "mum" "mug" "mud" "mot" "mop" "mon" "mol" "mod" "mob" "mix" "mil" "mid" "met" "men" "meg" "med" "may" "max" "mat" "mas" "mar" "map" "man" "mag" "mad" "mac" "low" "lot" "log" "lit" "lie" "lid" "lib" "let" "lee" "led" "lea" "lay" "lax" "law" "lap" "lam" "lag" "lad" "lac" "lab" "kit" "kin" "kid" "key" "ken" "kay" "jun" "jug" "joy" "jog" "joe" "job" "jew" "jet" "jay" "jaw" "jar" "jam" "ivy" "its" "ion" "inn" "ink" "imp" "ill" "igg" "icy" "ice" "hut" "hum" "huh" "hue" "hub" "how" "hot" "hop" "hon" "hit" "his" "him" "hid" "hey" "her" "hen" "hem" "hay" "hat" "has" "ham" "had" "gym" "guy" "gut" "gun" "gum" "got" "gin" "gig" "get" "gem" "gel" "gee" "gas" "gap" "fur" "fun" "fry" "fox" "for" "fog" "foe" "fly" "flu" "fix" "fit" "fir" "fin" "fig" "few" "fen" "fee" "fed" "fay" "fax" "far" "fan" "fad" "fab" "eye" "eve" "eta" "era" "end" "emu" "elm" "elf" "ego" "egg" "eft" "ecu" "ebb" "eat" "ear" "dye" "duo" "dun" "dug" "due" "dub" "dry" "dot" "don" "doe" "doc" "dis" "dip" "din" "dim" "dig" "die" "did" "dew" "den" "del" "def" "dee" "day" "dan" "dam" "dal" "dad" "dab" "cut" "cup" "cue" "cub" "cry" "coy" "cox" "cow" "cot" "cos" "cor" "cop" "coo" "con" "col" "cod" "cob" "chi" "cat" "car" "cap" "can" "cam" "cad" "cab" "bye" "buy" "but" "bus" "bun" "bug" "bud" "boy" "box" "bow" "boo" "bog" "bob" "biz" "bit" "bis" "bio" "bin" "big" "bid" "bet" "ben" "bel" "beg" "bee" "bed" "bay" "bat" "bar" "ban" "bag" "bad" "baa" "aye" "axe" "awe" "ave" "ate" "asp" "ask" "ash" "art" "arm" "ark" "are" "arc" "apt" "app" "ape" "any" "ant" "and" "ana" "amp" "alt" "all" "ale" "ala" "air" "aim" "aid" "aha" "ago" "age" "aft" "ado" "add" "act" "ace" "abs" "aba") fontified t help-echo cider--help-echo))))
>>>>>>> Stashed changes
